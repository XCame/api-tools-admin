<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.3.1@2feba22a005a18bf31d4c7b9bdb9252c73897476">
  <file src="config/module.config.php">
    <DeprecatedClass occurrences="4">
      <code>Model\VersioningModelFactory::class</code>
      <code>Model\VersioningModelFactory::class</code>
      <code>Model\VersioningModelFactoryFactory::class</code>
      <code>\ZF\Apigility\Admin\Model\VersioningModelFactory::class</code>
    </DeprecatedClass>
    <UndefinedClass occurrences="285">
      <code>Controller\App</code>
      <code>Controller\App</code>
      <code>Controller\App</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\Authentication</code>
      <code>Controller\AuthenticationType</code>
      <code>Controller\AuthenticationType</code>
      <code>Controller\AuthenticationType</code>
      <code>Controller\AuthenticationType</code>
      <code>Controller\AuthenticationType</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\Authorization</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\CacheEnabled</code>
      <code>Controller\Config</code>
      <code>Controller\Config</code>
      <code>Controller\Config</code>
      <code>Controller\Config</code>
      <code>Controller\ContentNegotiation</code>
      <code>Controller\ContentNegotiation</code>
      <code>Controller\ContentNegotiation</code>
      <code>Controller\ContentNegotiation</code>
      <code>Controller\ContentNegotiation</code>
      <code>Controller\ContentNegotiation</code>
      <code>Controller\Dashboard</code>
      <code>Controller\Dashboard</code>
      <code>Controller\Dashboard</code>
      <code>Controller\Dashboard</code>
      <code>Controller\Dashboard</code>
      <code>Controller\Dashboard</code>
      <code>Controller\Dashboard</code>
      <code>Controller\DbAdapter</code>
      <code>Controller\DbAdapter</code>
      <code>Controller\DbAdapter</code>
      <code>Controller\DbAdapter</code>
      <code>Controller\DbAdapter</code>
      <code>Controller\DbAdapter</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DbAutodiscovery</code>
      <code>Controller\DoctrineAdapter</code>
      <code>Controller\DoctrineAdapter</code>
      <code>Controller\DoctrineAdapter</code>
      <code>Controller\DoctrineAdapter</code>
      <code>Controller\DoctrineAdapter</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Documentation</code>
      <code>Controller\Filters</code>
      <code>Controller\Filters</code>
      <code>Controller\Filters</code>
      <code>Controller\Filters</code>
      <code>Controller\Filters</code>
      <code>Controller\Filters</code>
      <code>Controller\Filters</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\FsPermissions</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpBasicAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\HttpDigestAuthentication</code>
      <code>Controller\Hydrators</code>
      <code>Controller\Hydrators</code>
      <code>Controller\Hydrators</code>
      <code>Controller\Hydrators</code>
      <code>Controller\Hydrators</code>
      <code>Controller\Hydrators</code>
      <code>Controller\Hydrators</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\InputFilter</code>
      <code>Controller\Module</code>
      <code>Controller\Module</code>
      <code>Controller\Module</code>
      <code>Controller\Module</code>
      <code>Controller\Module</code>
      <code>Controller\Module</code>
      <code>Controller\ModuleConfig</code>
      <code>Controller\ModuleConfig</code>
      <code>Controller\ModuleConfig</code>
      <code>Controller\ModuleConfig</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\ModuleCreation</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\OAuth2Authentication</code>
      <code>Controller\Package</code>
      <code>Controller\Package</code>
      <code>Controller\Package</code>
      <code>Controller\Package</code>
      <code>Controller\Package</code>
      <code>Controller\RestService</code>
      <code>Controller\RestService</code>
      <code>Controller\RestService</code>
      <code>Controller\RestService</code>
      <code>Controller\RestService</code>
      <code>Controller\RestService</code>
      <code>Controller\RpcService</code>
      <code>Controller\RpcService</code>
      <code>Controller\RpcService</code>
      <code>Controller\RpcService</code>
      <code>Controller\RpcService</code>
      <code>Controller\RpcService</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\SettingsDashboard</code>
      <code>Controller\Source</code>
      <code>Controller\Source</code>
      <code>Controller\Source</code>
      <code>Controller\Source</code>
      <code>Controller\Source</code>
      <code>Controller\Source</code>
      <code>Controller\Source</code>
      <code>Controller\Strategy</code>
      <code>Controller\Strategy</code>
      <code>Controller\Strategy</code>
      <code>Controller\Strategy</code>
      <code>Controller\Strategy</code>
      <code>Controller\Strategy</code>
      <code>Controller\Strategy</code>
      <code>Controller\Validators</code>
      <code>Controller\Validators</code>
      <code>Controller\Validators</code>
      <code>Controller\Validators</code>
      <code>Controller\Validators</code>
      <code>Controller\Validators</code>
      <code>Controller\Validators</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>Controller\Versioning</code>
      <code>InputFilter\Authentication\BasicAuth</code>
      <code>InputFilter\Authentication\BasicAuth</code>
      <code>InputFilter\Authentication\BasicAuth</code>
      <code>InputFilter\Authentication\DigestAuth</code>
      <code>InputFilter\Authentication\DigestAuth</code>
      <code>InputFilter\Authentication\DigestAuth</code>
      <code>InputFilter\Authentication\OAuth2</code>
      <code>InputFilter\Authentication\OAuth2</code>
      <code>InputFilter\Authentication\OAuth2</code>
      <code>InputFilter\Authorization</code>
      <code>InputFilter\Authorization</code>
      <code>InputFilter\Authorization</code>
      <code>InputFilter\ContentNegotiation</code>
      <code>InputFilter\ContentNegotiation</code>
      <code>InputFilter\ContentNegotiation</code>
      <code>InputFilter\CreateContentNegotiation</code>
      <code>InputFilter\CreateContentNegotiation</code>
      <code>InputFilter\CreateContentNegotiation</code>
      <code>InputFilter\DbAdapter</code>
      <code>InputFilter\DbAdapter</code>
      <code>InputFilter\DbAdapter</code>
      <code>InputFilter\Documentation</code>
      <code>InputFilter\Documentation</code>
      <code>InputFilter\Documentation</code>
      <code>InputFilter\InputFilter</code>
      <code>InputFilter\InputFilter</code>
      <code>InputFilter\InputFilter</code>
      <code>InputFilter\Module</code>
      <code>InputFilter\Module</code>
      <code>InputFilter\Module</code>
      <code>InputFilter\RestService\PATCH</code>
      <code>InputFilter\RestService\PATCH</code>
      <code>InputFilter\RestService\PATCH</code>
      <code>InputFilter\RestService\POST</code>
      <code>InputFilter\RestService\POST</code>
      <code>InputFilter\RestService\POST</code>
      <code>InputFilter\RpcService\PATCH</code>
      <code>InputFilter\RpcService\PATCH</code>
      <code>InputFilter\RpcService\PATCH</code>
      <code>InputFilter\RpcService\POST</code>
      <code>InputFilter\RpcService\POST</code>
      <code>InputFilter\RpcService\POST</code>
      <code>InputFilter\Version</code>
      <code>InputFilter\Version</code>
      <code>InputFilter\Version</code>
      <code>\ZF\Apigility\Admin\Controller\App</code>
      <code>\ZF\Apigility\Admin\Controller\Authentication</code>
      <code>\ZF\Apigility\Admin\Controller\AuthenticationType</code>
      <code>\ZF\Apigility\Admin\Controller\Authorization</code>
      <code>\ZF\Apigility\Admin\Controller\CacheEnabled</code>
      <code>\ZF\Apigility\Admin\Controller\Config</code>
      <code>\ZF\Apigility\Admin\Controller\Dashboard</code>
      <code>\ZF\Apigility\Admin\Controller\DbAutodiscovery</code>
      <code>\ZF\Apigility\Admin\Controller\Documentation</code>
      <code>\ZF\Apigility\Admin\Controller\Filters</code>
      <code>\ZF\Apigility\Admin\Controller\FsPermissions</code>
      <code>\ZF\Apigility\Admin\Controller\HttpBasicAuthentication</code>
      <code>\ZF\Apigility\Admin\Controller\HttpDigestAuthentication</code>
      <code>\ZF\Apigility\Admin\Controller\Hydrators</code>
      <code>\ZF\Apigility\Admin\Controller\InputFilter</code>
      <code>\ZF\Apigility\Admin\Controller\ModuleConfig</code>
      <code>\ZF\Apigility\Admin\Controller\ModuleCreation</code>
      <code>\ZF\Apigility\Admin\Controller\OAuth2Authentication</code>
      <code>\ZF\Apigility\Admin\Controller\Package</code>
      <code>\ZF\Apigility\Admin\Controller\SettingsDashboard</code>
      <code>\ZF\Apigility\Admin\Controller\Source</code>
      <code>\ZF\Apigility\Admin\Controller\Strategy</code>
      <code>\ZF\Apigility\Admin\Controller\Validators</code>
      <code>\ZF\Apigility\Admin\Controller\Versioning</code>
      <code>\ZF\Apigility\Admin\InputFilter\Authentication\BasicAuth</code>
      <code>\ZF\Apigility\Admin\InputFilter\Authentication\DigestAuth</code>
      <code>\ZF\Apigility\Admin\InputFilter\Authentication\OAuth2</code>
      <code>\ZF\Apigility\Admin\InputFilter\Authorization</code>
      <code>\ZF\Apigility\Admin\InputFilter\ContentNegotiation</code>
      <code>\ZF\Apigility\Admin\InputFilter\CreateContentNegotiation</code>
      <code>\ZF\Apigility\Admin\InputFilter\DbAdapter</code>
      <code>\ZF\Apigility\Admin\InputFilter\Documentation</code>
      <code>\ZF\Apigility\Admin\InputFilter\InputFilter</code>
      <code>\ZF\Apigility\Admin\InputFilter\Module</code>
      <code>\ZF\Apigility\Admin\InputFilter\RestService\PATCH</code>
      <code>\ZF\Apigility\Admin\InputFilter\RestService\POST</code>
      <code>\ZF\Apigility\Admin\InputFilter\RpcService\PATCH</code>
      <code>\ZF\Apigility\Admin\InputFilter\RpcService\POST</code>
      <code>\ZF\Apigility\Admin\InputFilter\Version</code>
    </UndefinedClass>
  </file>
  <file src="src/Controller/AbstractAuthenticationController.php">
    <MixedArgument occurrences="1">
      <code>$accept-&gt;getFieldValue()</code>
    </MixedArgument>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getFieldValue</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="1">
      <code>getFieldValue</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/Controller/AbstractConfigController.php">
    <MissingReturnType occurrences="2">
      <code>getConfig</code>
      <code>processAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$headers</code>
      <code>$headers</code>
      <code>$this-&gt;getRequest()-&gt;getContent()</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$headers</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;bodyParams()</code>
      <code>json_decode($this-&gt;getRequest()-&gt;getContent(), true)</code>
    </MixedReturnStatement>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getFieldValue</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="1">
      <code>getFieldValue</code>
    </PossiblyUndefinedMethod>
    <UndefinedInterfaceMethod occurrences="2">
      <code>getHeaders</code>
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="1">
      <code>bodyParams</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/AbstractPluginManagerController.php">
    <MixedMethodCall occurrences="1">
      <code>fetchAll</code>
    </MixedMethodCall>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Controller/AppController.php">
    <MissingReturnType occurrences="1">
      <code>appAction</code>
    </MissingReturnType>
  </file>
  <file src="src/Controller/AuthenticationController.php">
    <ArgumentTypeCoercion occurrences="5">
      <code>$request</code>
      <code>$request</code>
      <code>$request</code>
      <code>$request</code>
      <code>$request</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="3">
      <code>add</code>
      <code>add</code>
      <code>add</code>
    </DeprecatedMethod>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;createEntity($entity)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>ApiProblemResponse|\Laminas\Http\Response</code>
    </InvalidReturnType>
    <InvalidScalarArgument occurrences="5">
      <code>$e-&gt;getCode()</code>
      <code>$e-&gt;getCode()</code>
      <code>$e-&gt;getCode()</code>
      <code>$version</code>
      <code>$version</code>
    </InvalidScalarArgument>
    <LessSpecificReturnStatement occurrences="1">
      <code>$this-&gt;removeAuthenticationMap($module, $version)</code>
    </LessSpecificReturnStatement>
    <MissingReturnType occurrences="2">
      <code>authenticationAction</code>
      <code>mappingAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="18">
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$params['authentication']</code>
      <code>$params['authentication']</code>
      <code>$this-&gt;bodyParams()</code>
      <code>$this-&gt;bodyParams()</code>
      <code>$this-&gt;bodyParams()</code>
      <code>$this-&gt;bodyParams()</code>
      <code>$this-&gt;bodyParams()</code>
      <code>$version</code>
      <code>$version</code>
      <code>$version</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$entity['name']</code>
      <code>$entity['name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="3">
      <code>$entity</code>
      <code>$module</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>ApiProblemResponse|\Laminas\Http\Response</code>
      <code>ViewModel|ApiProblemResponse|ResponseInterface</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>createLink</code>
      <code>fromQuery</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;getResponse()-&gt;setStatusCode(204)</code>
      <code>$this-&gt;getResponse()-&gt;setStatusCode(204)</code>
    </MixedReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>ViewModel|ApiProblemResponse</code>
    </MoreSpecificReturnType>
    <PossiblyFalseArgument occurrences="1">
      <code>$this-&gt;model-&gt;getAuthenticationMap($module, $version)</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument occurrences="1">
      <code>$adapter</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="5">
      <code>AuthenticationController</code>
      <code>AuthenticationController</code>
      <code>AuthenticationController</code>
      <code>AuthenticationController</code>
      <code>AuthenticationController</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;model-&gt;remove()</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="8">
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>setStatusCode</code>
      <code>setStatusCode</code>
      <code>setStatusCode</code>
      <code>setStatusCode</code>
      <code>setStatusCode</code>
      <code>setStatusCode</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="5">
      <code>bodyParams</code>
      <code>bodyParams</code>
      <code>bodyParams</code>
      <code>bodyParams</code>
      <code>bodyParams</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/AuthenticationControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>AuthenticationControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(AuthenticationModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/AuthenticationTypeController.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$request</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="1">
      <code>authTypeAction</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="5">
      <code>AuthenticationTypeController</code>
      <code>AuthenticationTypeController</code>
      <code>AuthenticationTypeController</code>
      <code>AuthenticationTypeController</code>
      <code>AuthenticationTypeController</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Controller/AuthenticationTypeControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>AuthenticationTypeControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(DefaultAuthenticationListener::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/AuthorizationController.php">
    <DeprecatedMethod occurrences="1">
      <code>add</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="1">
      <code>$event instanceof MvcEvent</code>
    </DocblockTypeContradiction>
    <MissingPropertyType occurrences="2">
      <code>$model</code>
      <code>$moduleName</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="1">
      <code>authorizationAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$this-&gt;bodyParams()</code>
      <code>$version</code>
      <code>$version</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$moduleName</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>addHeaderLine</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$moduleName</code>
      <code>$this-&gt;moduleName</code>
    </MixedReturnStatement>
    <PossiblyNullReference occurrences="1">
      <code>getParam</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="5">
      <code>AuthorizationController</code>
      <code>AuthorizationController</code>
      <code>AuthorizationController</code>
      <code>AuthorizationController</code>
      <code>AuthorizationController</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="3">
      <code>getHeaders</code>
      <code>getMethod</code>
      <code>getQuery</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="1">
      <code>bodyParams</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/AuthorizationControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>AuthorizationControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(AuthorizationModelFactory::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/CacheEnabledController.php">
    <MissingReturnType occurrences="1">
      <code>cacheEnabledAction</code>
    </MissingReturnType>
  </file>
  <file src="src/Controller/ConfigController.php">
    <MissingReturnType occurrences="1">
      <code>getConfig</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="5">
      <code>ConfigController</code>
      <code>ConfigController</code>
      <code>ConfigController</code>
      <code>ConfigController</code>
      <code>ConfigController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/ConfigControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>ConfigControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ConfigResource::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/DashboardController.php">
    <DeprecatedMethod occurrences="3">
      <code>add</code>
      <code>add</code>
      <code>add</code>
    </DeprecatedMethod>
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>function ($value) {</code>
    </MissingClosureReturnType>
    <MissingPropertyType occurrences="1">
      <code>$doctrineAdapters</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>dashboardAction</code>
      <code>settingsDashboardAction</code>
    </MissingReturnType>
    <MixedPropertyFetch occurrences="1">
      <code>$value-&gt;serviceName</code>
    </MixedPropertyFetch>
    <PropertyNotSetInConstructor occurrences="5">
      <code>DashboardController</code>
      <code>DashboardController</code>
      <code>DashboardController</code>
      <code>DashboardController</code>
      <code>DashboardController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/DashboardControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>DashboardControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="6">
      <code>$container-&gt;get(Model\AuthenticationModel::class)</code>
      <code>$container-&gt;get(Model\ContentNegotiationModel::class)</code>
      <code>$container-&gt;get(Model\DbAdapterModel::class)</code>
      <code>$container-&gt;get(Model\ModuleModel::class)</code>
      <code>$container-&gt;get(Model\RestServiceModelFactory::class)</code>
      <code>$container-&gt;get(Model\RpcServiceModelFactory::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/DbAutodiscoveryController.php">
    <MissingReturnType occurrences="1">
      <code>discoverAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;params()-&gt;fromRoute('adapter_name', false)</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$module</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>fromRoute</code>
      <code>fromRoute</code>
      <code>fromRoute</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="5">
      <code>DbAutodiscoveryController</code>
      <code>DbAutodiscoveryController</code>
      <code>DbAutodiscoveryController</code>
      <code>DbAutodiscoveryController</code>
      <code>DbAutodiscoveryController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/DbAutodiscoveryControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>DbAutodiscoveryControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(DbAutodiscoveryModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/DocumentationController.php">
    <DeprecatedMethod occurrences="3">
      <code>add</code>
      <code>add</code>
      <code>add</code>
    </DeprecatedMethod>
    <InvalidReturnStatement occurrences="1"/>
    <InvalidReturnType occurrences="1">
      <code>indexAction</code>
    </InvalidReturnType>
    <MissingParamType occurrences="1">
      <code>$route</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>deriveRouteName</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$route</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$this-&gt;model-&gt;fetchDocumentation($module, $controllerServiceName)</code>
    </MixedArgument>
    <MixedAssignment occurrences="7">
      <code>$controllerServiceName</code>
      <code>$controllerType</code>
      <code>$documentation</code>
      <code>$documentation</code>
      <code>$httpMethod</code>
      <code>$module</code>
      <code>$routeName</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>fromRoute</code>
      <code>fromRoute</code>
      <code>fromRoute</code>
    </MixedMethodCall>
    <PossiblyNullReference occurrences="1">
      <code>getMatchedRouteName</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="5">
      <code>DocumentationController</code>
      <code>DocumentationController</code>
      <code>DocumentationController</code>
      <code>DocumentationController</code>
      <code>DocumentationController</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="2">
      <code>bodyParams</code>
      <code>bodyParams</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/DocumentationControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>DocumentationControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(DocumentationModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/FiltersController.php">
    <MissingReturnType occurrences="1">
      <code>filtersAction</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="5">
      <code>FiltersController</code>
      <code>FiltersController</code>
      <code>FiltersController</code>
      <code>FiltersController</code>
      <code>FiltersController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/FiltersControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>FiltersControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(FiltersModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/FsPermissionsController.php">
    <PropertyNotSetInConstructor occurrences="6">
      <code>$rootIsWritable</code>
      <code>FsPermissionsController</code>
      <code>FsPermissionsController</code>
      <code>FsPermissionsController</code>
      <code>FsPermissionsController</code>
      <code>FsPermissionsController</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>null !== $this-&gt;rootIsWritable</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Controller/HydratorsController.php">
    <MissingReturnType occurrences="1">
      <code>hydratorsAction</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="5">
      <code>HydratorsController</code>
      <code>HydratorsController</code>
      <code>HydratorsController</code>
      <code>HydratorsController</code>
      <code>HydratorsController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/HydratorsControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>HydratorsControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(HydratorsModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/InputFilterController.php">
    <DeprecatedMethod occurrences="1">
      <code>add</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="1">
      <code>$result instanceof InputFilterCollection</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="7"/>
    <MissingParamType occurrences="6">
      <code>$controller</code>
      <code>$inputFilterName</code>
      <code>$links</code>
      <code>$module</code>
      <code>$route</code>
      <code>$route</code>
    </MissingParamType>
    <MissingReturnType occurrences="2">
      <code>deriveRouteName</code>
      <code>injectEntitySelfLink</code>
    </MissingReturnType>
    <MixedArgument occurrences="15">
      <code>$controller</code>
      <code>$controller</code>
      <code>$controller</code>
      <code>$controller</code>
      <code>$controller</code>
      <code>$inputFilter</code>
      <code>$inputFilterName</code>
      <code>$inputFilterName</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$route</code>
      <code>$route</code>
    </MixedArgument>
    <MixedAssignment occurrences="9">
      <code>$controller</code>
      <code>$inputFilter</code>
      <code>$inputFilterName</code>
      <code>$module</code>
      <code>$name</code>
      <code>$name</code>
      <code>$result[]</code>
      <code>$route</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>indexAction</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>add</code>
      <code>fromRoute</code>
      <code>fromRoute</code>
      <code>fromRoute</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;getResponse()-&gt;setStatusCode(204)</code>
    </MixedReturnStatement>
    <PossiblyNullReference occurrences="1">
      <code>getMatchedRouteName</code>
    </PossiblyNullReference>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$result</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor occurrences="5">
      <code>InputFilterController</code>
      <code>InputFilterController</code>
      <code>InputFilterController</code>
      <code>InputFilterController</code>
      <code>InputFilterController</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="2">
      <code>getMethod</code>
      <code>setStatusCode</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="1">
      <code>bodyParams</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/InputFilterControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(InputFilterModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/ModuleConfigController.php">
    <MissingReturnType occurrences="1">
      <code>getConfig</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$module</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>fromQuery</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="5">
      <code>ModuleConfigController</code>
      <code>ModuleConfigController</code>
      <code>ModuleConfigController</code>
      <code>ModuleConfigController</code>
      <code>ModuleConfigController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/ModuleConfigControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>ModuleConfigControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="2">
      <code>$container-&gt;get(ConfigResourceFactory::class)</code>
      <code>ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="1">
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Controller/ModuleCreationController.php">
    <DeprecatedMethod occurrences="1">
      <code>add</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="1">
      <code>apiEnableAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$module</code>
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$module</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="5">
      <code>ModuleCreationController</code>
      <code>ModuleCreationController</code>
      <code>ModuleCreationController</code>
      <code>ModuleCreationController</code>
      <code>ModuleCreationController</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="1">
      <code>bodyParam</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/ModuleCreationControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>ModuleCreationControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ModuleModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/PackageController.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;getResponse()</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="6">
      <code>! is_string($assets)</code>
      <code>! is_string($config)</code>
      <code>! is_string($format)</code>
      <code>! is_string($version)</code>
      <code>! is_string($xml)</code>
    </DocblockTypeContradiction>
    <ForbiddenCode occurrences="1">
      <code>shell_exec($cmd)</code>
    </ForbiddenCode>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>array|\Laminas\Http\Response|ApiProblemResponse</code>
    </ImplementedReturnTypeMismatch>
    <InvalidScalarArgument occurrences="1">
      <code>filesize($package)</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="10">
      <code>$apis</code>
      <code>$assets</code>
      <code>$composer</code>
      <code>$config</code>
      <code>$this-&gt;bodyParam('format', false)</code>
      <code>$this-&gt;bodyParams()</code>
      <code>$this-&gt;params()-&gt;fromQuery('format', false)</code>
      <code>$this-&gt;params()-&gt;fromQuery('token', false)</code>
      <code>$version</code>
      <code>$xml</code>
    </MixedArgument>
    <MixedAssignment occurrences="6">
      <code>$apis</code>
      <code>$assets</code>
      <code>$composer</code>
      <code>$config</code>
      <code>$version</code>
      <code>$xml</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>fromQuery</code>
      <code>fromQuery</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="6">
      <code>$sentPackage</code>
      <code>PackageController</code>
      <code>PackageController</code>
      <code>PackageController</code>
      <code>PackageController</code>
      <code>PackageController</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $composer</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>! empty($zfdeployPath) &amp;&amp; is_string($zfdeployPath)</code>
      <code>is_string($zfdeployPath)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="2">
      <code>bodyParam</code>
      <code>bodyParams</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/SourceController.php">
    <InvalidScalarArgument occurrences="2">
      <code>$i + 1</code>
      <code>$lineCount</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="1">
      <code>sourceAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;params()-&gt;fromQuery('class', false)</code>
      <code>$this-&gt;params()-&gt;fromQuery('module', false)</code>
    </MixedArgument>
    <MixedMethodCall occurrences="2">
      <code>fromQuery</code>
      <code>fromQuery</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="5">
      <code>SourceController</code>
      <code>SourceController</code>
      <code>SourceController</code>
      <code>SourceController</code>
      <code>SourceController</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getMethod</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Controller/SourceControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>SourceControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ModuleModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/StrategyController.php">
    <MissingReturnType occurrences="1">
      <code>existsAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$strategyName</code>
      <code>$strategyName</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$strategyName</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>fromRoute</code>
    </MixedMethodCall>
    <PropertyNotSetInConstructor occurrences="5">
      <code>StrategyController</code>
      <code>StrategyController</code>
      <code>StrategyController</code>
      <code>StrategyController</code>
      <code>StrategyController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/StrategyControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>StrategyControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
  </file>
  <file src="src/Controller/ValidatorsController.php">
    <MissingReturnType occurrences="1">
      <code>validatorsAction</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="5">
      <code>ValidatorsController</code>
      <code>ValidatorsController</code>
      <code>ValidatorsController</code>
      <code>ValidatorsController</code>
      <code>ValidatorsController</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Controller/ValidatorsControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>ValidatorsControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ValidatorsModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Controller/VersioningController.php">
    <InvalidCatch occurrences="1"/>
    <InvalidScalarArgument occurrences="1">
      <code>$version</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="2">
      <code>defaultVersionAction</code>
      <code>versioningAction</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$module</code>
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$module</code>
      <code>$module</code>
      <code>$version</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="5">
      <code>VersioningController</code>
      <code>VersioningController</code>
      <code>VersioningController</code>
      <code>VersioningController</code>
      <code>VersioningController</code>
    </PropertyNotSetInConstructor>
    <UndefinedMagicMethod occurrences="4">
      <code>bodyParam</code>
      <code>bodyParam</code>
      <code>bodyParam</code>
      <code>bodyParam</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/Controller/VersioningControllerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>VersioningControllerFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ModuleVersioningModelFactory::class)</code>
    </MixedArgument>
  </file>
  <file src="src/InputFilter/Authentication/BaseInputFilter.php">
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
  </file>
  <file src="src/InputFilter/Authentication/BasicInputFilter.php">
    <MissingClosureParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$v</code>
    </MixedAssignment>
  </file>
  <file src="src/InputFilter/Authentication/BasicInputFilter2.php">
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="src/InputFilter/Authentication/DigestInputFilter.php">
    <MissingClosureParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$v</code>
    </MixedAssignment>
  </file>
  <file src="src/InputFilter/Authentication/DigestInputFilter2.php">
    <MissingClosureParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="src/InputFilter/Authentication/OAuth2InputFilter.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$data instanceof Traversable</code>
      <code>is_object($data)</code>
    </DocblockTypeContradiction>
    <MissingClosureParamType occurrences="4">
      <code>$context</code>
      <code>$context</code>
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$data</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$context['dsn_type']</code>
    </MixedArrayAccess>
  </file>
  <file src="src/InputFilter/Authentication/OAuth2MongoInputFilter2.php">
    <MissingClosureParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
  </file>
  <file src="src/InputFilter/Authentication/OAuth2PdoInputFilter2.php">
    <MissingClosureParamType occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
  </file>
  <file src="src/InputFilter/AuthorizationInputFilter.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <MissingPropertyType occurrences="1">
      <code>$messages</code>
    </MissingPropertyType>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>bool</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;messages</code>
    </MixedReturnStatement>
    <PossiblyNullIterator occurrences="1">
      <code>$this-&gt;data</code>
    </PossiblyNullIterator>
  </file>
  <file src="src/InputFilter/ContentNegotiationInputFilter.php">
    <PropertyNotSetInConstructor occurrences="3">
      <code>ContentNegotiationInputFilter</code>
      <code>ContentNegotiationInputFilter</code>
      <code>ContentNegotiationInputFilter</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/InputFilter/CreateContentNegotiationInputFilter.php">
    <PossiblyUndefinedMethod occurrences="1">
      <code>setRequired</code>
    </PossiblyUndefinedMethod>
    <PropertyNotSetInConstructor occurrences="3">
      <code>CreateContentNegotiationInputFilter</code>
      <code>CreateContentNegotiationInputFilter</code>
      <code>CreateContentNegotiationInputFilter</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/InputFilter/DbAdapterInputFilter.php">
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
  </file>
  <file src="src/InputFilter/DocumentationInputFilter.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$subData</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="2">
      <code>$this-&gt;messages[$key][]</code>
      <code>$this-&gt;messages[$key][]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$subData</code>
    </MixedAssignment>
  </file>
  <file src="src/InputFilter/Factory/InputFilterInputFilterFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterInputFilterFactory</code>
    </DeprecatedInterface>
    <DeprecatedMethod occurrences="1">
      <code>getServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="3">
      <code>$container-&gt;get('FilterManager')</code>
      <code>$container-&gt;get('InputFilterManager')</code>
      <code>$container-&gt;get('ValidatorManager')</code>
    </MixedArgument>
    <PossiblyNullReference occurrences="2">
      <code>setPluginManager</code>
      <code>setPluginManager</code>
    </PossiblyNullReference>
  </file>
  <file src="src/InputFilter/InputFilterInputFilter.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;data</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="3">
      <code>InputFilterInputFilter</code>
      <code>InputFilterInputFilter</code>
      <code>InputFilterInputFilter</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/InputFilter/RestService/PatchInputFilter.php">
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
  </file>
  <file src="src/InputFilter/RestService/PostInputFilter.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>array</code>
    </LessSpecificImplementedReturnType>
    <MissingConstructor occurrences="2">
      <code>$localMessages</code>
      <code>$localMessages</code>
    </MissingConstructor>
    <PossiblyUndefinedMethod occurrences="1">
      <code>setRequired</code>
    </PossiblyUndefinedMethod>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($this-&gt;localMessages)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/InputFilter/Validator/AbstractValidator.php">
    <MissingPropertyType occurrences="1">
      <code>$reservedWords</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;reservedWords</code>
    </MixedArgument>
  </file>
  <file src="src/InputFilter/Validator/ContentNegotiationSelectorsValidator.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($value)</code>
    </DocblockTypeContradiction>
    <MissingPropertyType occurrences="1">
      <code>$messageTemplates</code>
    </MissingPropertyType>
    <MixedArgument occurrences="2">
      <code>$mediaType</code>
      <code>$mediaType</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$className</code>
      <code>$className</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="1">
      <code>$mediaType</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/InputFilter/Validator/HttpMethodArrayValidator.php">
    <MixedArgument occurrences="1">
      <code>$httpMethod</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$httpMethod</code>
    </MixedAssignment>
  </file>
  <file src="src/InputFilter/Validator/IsStringValidator.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_object($value)</code>
    </DocblockTypeContradiction>
    <MissingPropertyType occurrences="1">
      <code>$messageTemplates</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$value</code>
    </MoreSpecificImplementedParamType>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>gettype($value)</code>
      <code>is_string($value)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/InputFilter/Validator/MediaTypeArrayValidator.php">
    <MixedArgument occurrences="2">
      <code>$mediaType</code>
      <code>$mediaType</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$mediaType</code>
    </MixedAssignment>
  </file>
  <file src="src/InputFilter/Validator/ModuleNameValidator.php">
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="src/InputFilter/Validator/ServiceNameValidator.php">
    <MixedArgument occurrences="1">
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="src/Listener/CryptFilterListener.php">
    <MixedArgument occurrences="5">
      <code>$filter</code>
      <code>$filter</code>
      <code>$filter</code>
      <code>$filter</code>
      <code>$filter</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$filter['name']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="2">
      <code>$data['filters'][$key]</code>
      <code>$data['filters'][$key]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="2">
      <code>$data['filters'][$key]</code>
      <code>$data['filters'][$key]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="4">
      <code>$controller</code>
      <code>$filter</code>
      <code>$filter</code>
      <code>$key</code>
    </MixedAssignment>
    <PossiblyFalseArgument occurrences="1">
      <code>strrpos($filter, '\\')</code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($filter, '\\')</code>
    </PossiblyFalseOperand>
    <UndefinedClass occurrences="1">
      <code>\Laminas\ApiTools\Admin\Controller\InputFilter</code>
    </UndefinedClass>
  </file>
  <file src="src/Listener/DisableHttpCacheListener.php">
    <MissingReturnType occurrences="1">
      <code>disableHttpCache</code>
    </MissingReturnType>
    <UndefinedClass occurrences="1">
      <code>V2RouteMatch</code>
    </UndefinedClass>
  </file>
  <file src="src/Listener/EnableHalRenderCollectionsListener.php">
    <MixedArgument occurrences="1">
      <code>$matches-&gt;getParam('controller')</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$hal</code>
      <code>$helpers</code>
      <code>$services</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>get</code>
      <code>get</code>
      <code>getServiceManager</code>
      <code>setRenderCollections</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getServiceManager</code>
    </PossiblyInvalidMethodCall>
  </file>
  <file src="src/Listener/InjectModuleResourceLinksListener.php">
    <DeprecatedMethod occurrences="5">
      <code>add</code>
      <code>add</code>
      <code>add</code>
      <code>add</code>
      <code>add</code>
    </DeprecatedMethod>
    <MissingClosureParamType occurrences="4">
      <code>$reUseMatchedParams</code>
      <code>$routeName</code>
      <code>$routeOptions</code>
      <code>$routeParams</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>function (</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="4">
      <code>$entity</code>
      <code>$links</code>
      <code>$links</code>
      <code>$links</code>
    </MissingParamType>
    <MissingPropertyType occurrences="2">
      <code>$routeMatch</code>
      <code>$urlHelper</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="1">
      <code>onHalRenderEvents</code>
    </MissingReturnType>
    <MixedArgument occurrences="19">
      <code>$entity</code>
      <code>$entity-&gt;controllerServiceName</code>
      <code>$entity-&gt;controllerServiceName</code>
      <code>$entity['input_filter_name']</code>
      <code>$entity['input_filter_name']</code>
      <code>$links</code>
      <code>$links</code>
      <code>$links</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$moduleName</code>
      <code>$moduleName</code>
      <code>$moduleName</code>
      <code>$params</code>
      <code>$params</code>
      <code>$service</code>
      <code>$this-&gt;routeMatch-&gt;getParam('controller_service_name')</code>
      <code>$url</code>
    </MixedArgument>
    <MixedAssignment occurrences="19">
      <code>$entity</code>
      <code>$entity</code>
      <code>$halEntity</code>
      <code>$link</code>
      <code>$link</code>
      <code>$links</code>
      <code>$links</code>
      <code>$module</code>
      <code>$module</code>
      <code>$moduleName</code>
      <code>$params</code>
      <code>$params</code>
      <code>$serverUrlHelper</code>
      <code>$service</code>
      <code>$serviceName</code>
      <code>$url</code>
      <code>$url</code>
      <code>$urlHelper</code>
      <code>$urlHelper</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="3">
      <code>call_user_func($serverUrlHelper, $url)</code>
      <code>call_user_func($urlHelper, $routeName, $routeParams, $routeOptions, false)</code>
    </MixedFunctionCall>
    <MixedMethodCall occurrences="24">
      <code>exchangeArray</code>
      <code>get</code>
      <code>get</code>
      <code>getEntity</code>
      <code>getLinks</code>
      <code>getLinks</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getRouteParams</code>
      <code>getRouteParams</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>injectSelfLink</code>
      <code>injectSelfLink</code>
      <code>remove</code>
      <code>remove</code>
      <code>setParam</code>
      <code>setRouteParams</code>
      <code>setRouteParams</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$url</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="1">
      <code>$entity-&gt;controllerServiceName</code>
    </MixedPropertyFetch>
    <PossiblyInvalidMethodCall occurrences="2">
      <code>injectSelfLink</code>
      <code>injectSelfLink</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullReference occurrences="2">
      <code>injectSelfLink</code>
      <code>injectSelfLink</code>
    </PossiblyNullReference>
    <UndefinedClass occurrences="1">
      <code>V2RouteMatch</code>
    </UndefinedClass>
  </file>
  <file src="src/Listener/InjectModuleResourceLinksListenerFactory.php">
    <MixedArgument occurrences="1">
      <code>$container-&gt;get('ViewHelperManager')</code>
    </MixedArgument>
  </file>
  <file src="src/Listener/NormalizeMatchedControllerServiceNameListener.php">
    <MixedArgument occurrences="1">
      <code>$controller</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$controller</code>
    </MixedAssignment>
  </file>
  <file src="src/Listener/NormalizeMatchedInputFilterNameListener.php">
    <MixedArgument occurrences="1">
      <code>$controller</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$controller</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/AbstractAutodiscoveryModel.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;serviceLocator</code>
    </DocblockTypeContradiction>
    <MissingParamType occurrences="4">
      <code>$config</code>
      <code>$module</code>
      <code>$tableName</code>
      <code>$version</code>
    </MissingParamType>
    <MixedArgument occurrences="4">
      <code>$module</code>
      <code>$resourceName</code>
      <code>$resourceName</code>
      <code>$version</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$resourceName</code>
      <code>$this-&gt;config</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$serviceLocator</code>
    </PropertyNotSetInConstructor>
    <UndefinedClass occurrences="2">
      <code>DbNoRecordExists</code>
      <code>DbRecordExists</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/AbstractPluginManagerModel.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$this-&gt;pluginManager</code>
      <code>$this-&gt;pluginManager</code>
      <code>$this-&gt;pluginManager</code>
    </ArgumentTypeCoercion>
    <MixedArgument occurrences="3">
      <code>$rProp-&gt;getValue($pluginManager)</code>
      <code>$rProp-&gt;getValue($pluginManager)</code>
      <code>array_values($rProp-&gt;getValue($pluginManager))</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>[$this, 'filterPluginName']</code>
      <code>array_keys($rProp-&gt;getValue($pluginManager))</code>
    </MixedArgumentTypeCoercion>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$plugins</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($this-&gt;plugins)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/AbstractPluginManagerModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>AbstractPluginManagerModelFactory</code>
    </DeprecatedInterface>
    <DocblockTypeContradiction occurrences="2">
      <code>null === $this-&gt;pluginManagerModel</code>
      <code>null === $this-&gt;pluginManagerService</code>
    </DocblockTypeContradiction>
    <LessSpecificImplementedReturnType occurrences="1">
      <code>mixed</code>
    </LessSpecificImplementedReturnType>
    <MixedMethodCall occurrences="1">
      <code>new $class($container-&gt;get($this-&gt;pluginManagerService))</code>
    </MixedMethodCall>
  </file>
  <file src="src/Model/AuthenticationEntity.php">
    <MissingParamType occurrences="2">
      <code>$realmOrParams</code>
      <code>$type</code>
    </MissingParamType>
    <MissingReturnType occurrences="6">
      <code>exchangeArray</code>
      <code>getArrayCopy</code>
      <code>getDsnType</code>
      <code>isBasic</code>
      <code>isDigest</code>
      <code>isOAuth2</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$allowedKeys</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="14">
      <code>$this-&gt;database</code>
      <code>$this-&gt;digestDomains</code>
      <code>$this-&gt;dsn</code>
      <code>$this-&gt;dsnType</code>
      <code>$this-&gt;htdigest</code>
      <code>$this-&gt;htpasswd</code>
      <code>$this-&gt;nonceTimeout</code>
      <code>$this-&gt;password</code>
      <code>$this-&gt;realm</code>
      <code>$this-&gt;realm</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;type</code>
      <code>$this-&gt;username</code>
      <code>$value</code>
    </MixedAssignment>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$allowedKeys</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor occurrences="8">
      <code>$database</code>
      <code>$dsn</code>
      <code>$htdigest</code>
      <code>$htpasswd</code>
      <code>$password</code>
      <code>$realm</code>
      <code>$routeMatch</code>
      <code>$username</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Model/AuthenticationModel.php">
    <InvalidArgument occurrences="3">
      <code>sprintf('%s::arrayDiffRecursive', __CLASS__)</code>
      <code>sprintf('%s::arrayDiffRecursive', __CLASS__)</code>
      <code>sprintf('%s::arrayDiffRecursive', __CLASS__)</code>
    </InvalidArgument>
    <InvalidNullableReturnType occurrences="1">
      <code>AuthenticationEntity</code>
    </InvalidNullableReturnType>
    <InvalidReturnStatement occurrences="1">
      <code>array_diff_uassoc($a, $b, sprintf('%s::arrayDiffRecursive', __CLASS__))</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="4">
      <code>$a</code>
      <code>$a</code>
      <code>$b</code>
      <code>$b</code>
    </MissingClosureParamType>
    <MissingParamType occurrences="4">
      <code>$dsn</code>
      <code>$dsn</code>
      <code>$password</code>
      <code>$username</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>patchHttpAuthConfig</code>
    </MissingReturnType>
    <MixedArgument occurrences="38">
      <code>$a</code>
      <code>$a</code>
      <code>$adapter</code>
      <code>$adapter['name']</code>
      <code>$adapter['oauth2_route']</code>
      <code>$adapter['oauth2_type']</code>
      <code>$adapter['oauth2_type']</code>
      <code>$adapter['options']['accept_schemes']</code>
      <code>$adapter['storage']['route']</code>
      <code>$adapter['type']</code>
      <code>$allData</code>
      <code>$allData</code>
      <code>$b</code>
      <code>$b</code>
      <code>$config</code>
      <code>$config['accept_schemes']</code>
      <code>$data['dsn']</code>
      <code>$data['dsn']</code>
      <code>$data['password']</code>
      <code>$data['password']</code>
      <code>$data['username']</code>
      <code>$data['username']</code>
      <code>$dsn</code>
      <code>$dsnType</code>
      <code>$dsnType</code>
      <code>$msg[$field][0]</code>
      <code>$name</code>
      <code>$oldAuth['dsn_type']</code>
      <code>$password</code>
      <code>$password</code>
      <code>$regex</code>
      <code>$regex</code>
      <code>$result['oauth2_dsn']</code>
      <code>$result['oauth2_type']</code>
      <code>$result['oauth2_type']</code>
      <code>$username</code>
      <code>$username</code>
      <code>$version</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="51">
      <code>$adapter['adapter']</code>
      <code>$adapter['adapter']</code>
      <code>$adapter['options']</code>
      <code>$adapter['options']</code>
      <code>$adapter['options']</code>
      <code>$adapter['options']</code>
      <code>$adapter['options']</code>
      <code>$adapter['options']</code>
      <code>$adapter['options']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$adapter['storage']</code>
      <code>$allData['type']</code>
      <code>$allData['type']</code>
      <code>$config['api-tools-mvc-auth']['authentication']['adapters']</code>
      <code>$config['api-tools-mvc-auth']['authentication']['http']</code>
      <code>$config['api-tools-mvc-auth']['authentication']['http']</code>
      <code>$config['router']['routes']['oauth']</code>
      <code>$config['router']['routes']['oauth']</code>
      <code>$config['storage']</code>
      <code>$data['dsn']</code>
      <code>$data['dsn']</code>
      <code>$data['dsn_type']</code>
      <code>$data['dsn_type']</code>
      <code>$data['password']</code>
      <code>$data['password']</code>
      <code>$data['username']</code>
      <code>$data['username']</code>
      <code>$localConfig['api-tools-mvc-auth']['authentication']['http']</code>
      <code>$msg[$field][0]</code>
      <code>$oldAuth['database']</code>
      <code>$oldAuth['digest_domains']</code>
      <code>$oldAuth['dsn']</code>
      <code>$oldAuth['dsn_type']</code>
      <code>$oldAuth['dsn_type']</code>
      <code>$oldAuth['htdigest']</code>
      <code>$oldAuth['htpasswd']</code>
      <code>$oldAuth['nonce_timeout']</code>
      <code>$oldAuth['password']</code>
      <code>$oldAuth['realm']</code>
      <code>$oldAuth['realm']</code>
      <code>$oldAuth['route_match']</code>
      <code>$oldAuth['type']</code>
      <code>$oldAuth['username']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$config['storage']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="2">
      <code>$config['api-tools-mvc-auth']['authentication']['adapters'][$result['name']]</code>
      <code>$config['api-tools-mvc-auth']['authentication']['adapters'][$result['name']]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="42">
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter['oauth2_database']</code>
      <code>$adapter['oauth2_password']</code>
      <code>$adapter['oauth2_username']</code>
      <code>$allData</code>
      <code>$allData</code>
      <code>$config</code>
      <code>$config['storage']['locator_name']</code>
      <code>$config['storage']['options']</code>
      <code>$config['storage']['password']</code>
      <code>$config['storage']['username']</code>
      <code>$data</code>
      <code>$data</code>
      <code>$dsnType</code>
      <code>$dsnType</code>
      <code>$name</code>
      <code>$oauth2Config['route_match']</code>
      <code>$oldAuth</code>
      <code>$password</code>
      <code>$realm</code>
      <code>$regex</code>
      <code>$result['digest_domains']</code>
      <code>$result['htdigest']</code>
      <code>$result['htpasswd']</code>
      <code>$result['nonce_timeout']</code>
      <code>$result['oauth2_database']</code>
      <code>$result['oauth2_dsn']</code>
      <code>$result['oauth2_locator_name']</code>
      <code>$result['oauth2_options']</code>
      <code>$result['oauth2_password']</code>
      <code>$result['oauth2_route']</code>
      <code>$result['oauth2_type']</code>
      <code>$result['oauth2_username']</code>
      <code>$result['realm']</code>
      <code>$result['realm']</code>
      <code>$result['route']</code>
      <code>$result['type']</code>
      <code>$type</code>
      <code>$username</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="4">
      <code>MongoClient</code>
      <code>array|false</code>
      <code>bool|string</code>
      <code>string|false</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="1">
      <code>$adapter['name']</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="4">
      <code>$adapter['name']</code>
      <code>$config</code>
      <code>$config['api-tools-mvc-auth']['authentication']['map'][$name]</code>
      <code>new MongoClient($dsn)</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$result['oauth2_type']</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedVariable occurrences="3">
      <code>$adapter</code>
      <code>$config</code>
      <code>$config</code>
    </PossiblyUndefinedVariable>
    <RedundantCastGivenDocblockType occurrences="3">
      <code>(int) $version</code>
      <code>(int) $version</code>
      <code>(int) $version</code>
    </RedundantCastGivenDocblockType>
    <UndefinedClass occurrences="2">
      <code>MongoClient</code>
      <code>MongoConnectionException</code>
    </UndefinedClass>
    <UndefinedDocblockClass occurrences="1">
      <code>MongoClient</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Model/AuthenticationModelFactory.php">
    <MixedArgument occurrences="4">
      <code>$config</code>
      <code>$container-&gt;get(ModuleModel::class)</code>
      <code>$writer</code>
      <code>ConfigWriter::class</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$writer</code>
    </MixedAssignment>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/AuthorizationEntity.php">
    <MissingParamType occurrences="6">
      <code>$action</code>
      <code>$entityOrCollection</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
    </MissingParamType>
    <MissingPropertyType occurrences="3">
      <code>$allowedRestTypes</code>
      <code>$defaultPrivileges</code>
      <code>$servicePrivileges</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="7">
      <code>addRestService</code>
      <code>addRpcService</code>
      <code>exchangeArray</code>
      <code>filterPrivileges</code>
      <code>get</code>
      <code>getArrayCopy</code>
      <code>has</code>
    </MissingReturnType>
    <MixedArgument occurrences="14">
      <code>$action</code>
      <code>$entityOrCollection</code>
      <code>$entityOrCollection</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$this-&gt;allowedRestTypes</code>
      <code>$this-&gt;defaultPrivileges</code>
      <code>$this-&gt;servicePrivileges</code>
      <code>$this-&gt;servicePrivileges</code>
      <code>$this-&gt;servicePrivileges</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$this-&gt;servicePrivileges[$serviceName]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$this-&gt;servicePrivileges[$serviceName]</code>
      <code>$this-&gt;servicePrivileges[$serviceName]</code>
      <code>$this-&gt;servicePrivileges[$serviceName]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;servicePrivileges[$serviceName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="3">
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/AuthorizationModel.php">
    <MissingClosureParamType occurrences="1">
      <code>$serviceName</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="3">
      <code>createDefaultPrivilegesForRestServices</code>
      <code>createDefaultPrivilegesForRpcServices</code>
      <code>injectServicesWithoutPrivileges</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$action</code>
      <code>$config</code>
      <code>$entity-&gt;getArrayCopy()</code>
      <code>$matches['action']</code>
      <code>$serviceConfig</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="6">
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceSpec</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="5">
      <code>$config['router']['routes'][$route]['options']['defaults']</code>
      <code>$value['actions']</code>
      <code>$value['collection']</code>
      <code>$value['entity']</code>
      <code>$value['resource']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="2">
      <code>$config[$matches['service']][$type]</code>
      <code>$config[$matches['service']]['actions']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="3">
      <code>$config[$matches['service']]</code>
      <code>$config[$matches['service']]</code>
      <code>$config['router']['routes'][$route]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="17">
      <code>$action</code>
      <code>$config</code>
      <code>$config[$matches['service']][$type]</code>
      <code>$config[$matches['service']]['actions'][$matches['action']]</code>
      <code>$config[$newKey]</code>
      <code>$config[$newKey]</code>
      <code>$config[$newKey]</code>
      <code>$config[$newKey]</code>
      <code>$missingServices[$serviceName]</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$route</code>
      <code>$serviceConfig</code>
      <code>$serviceConfig</code>
      <code>$serviceName</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$config['router']['routes'][$route]['options']['defaults']['action']</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Model/AuthorizationModelFactory.php">
    <MixedInferredReturnType occurrences="1">
      <code>AuthorizationModel</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;models[$module]</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$moduleEntity</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Model/AuthorizationModelFactoryFactory.php">
    <MixedArgument occurrences="5">
      <code>$container-&gt;get(ConfigResourceFactory::class)</code>
      <code>$container-&gt;get(ModuleModel::class)</code>
      <code>$container-&gt;get(ModulePathSpec::class)</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="2">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/ContentNegotiationEntity.php">
    <MissingParamType occurrences="2">
      <code>$config</code>
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>exchangeArray</code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <UndefinedThisPropertyAssignment occurrences="5">
      <code>$this-&gt;config</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;name</code>
      <code>$this-&gt;name</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;config</code>
      <code>$this-&gt;name</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="src/Model/ContentNegotiationModel.php">
    <MixedAssignment occurrences="1">
      <code>$contentConfig</code>
    </MixedAssignment>
    <MixedOperand occurrences="1">
      <code>$name</code>
    </MixedOperand>
  </file>
  <file src="src/Model/ContentNegotiationModelFactory.php">
    <MixedArgument occurrences="3">
      <code>$config</code>
      <code>$writer</code>
      <code>ConfigWriter::class</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$writer</code>
    </MixedAssignment>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/ContentNegotiationResource.php">
    <MissingReturnType occurrences="1">
      <code>setInputFilter</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$id</code>
      <code>$id</code>
      <code>$id</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$name</code>
    </MixedAssignment>
    <PossiblyNullReference occurrences="2">
      <code>getValues</code>
      <code>getValues</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="3">
      <code>ContentNegotiationResource</code>
      <code>ContentNegotiationResource</code>
      <code>ContentNegotiationResource</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Model/ContentNegotiationResourceFactory.php">
    <MixedArgument occurrences="1"/>
  </file>
  <file src="src/Model/DbAdapterEntity.php">
    <MissingParamType occurrences="2">
      <code>$config</code>
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>exchangeArray</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;config</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <UndefinedThisPropertyAssignment occurrences="5">
      <code>$this-&gt;config</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;name</code>
      <code>$this-&gt;name</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;config</code>
      <code>$this-&gt;name</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="src/Model/DbAdapterModel.php">
    <MixedArgument occurrences="1">
      <code>$adapterConfig['driver']</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$adapterConfig</code>
    </MixedAssignment>
    <MixedOperand occurrences="1">
      <code>$name</code>
    </MixedOperand>
  </file>
  <file src="src/Model/DbAdapterModelFactory.php">
    <MixedArgument occurrences="3">
      <code>$config</code>
      <code>$writer</code>
      <code>ConfigWriter::class</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$writer</code>
    </MixedAssignment>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/DbAdapterResource.php">
    <MixedArgument occurrences="3">
      <code>$id</code>
      <code>$id</code>
      <code>$id</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$name</code>
    </MixedAssignment>
    <PossiblyInvalidArgument occurrences="1">
      <code>$data</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="3">
      <code>DbAdapterResource</code>
      <code>DbAdapterResource</code>
      <code>DbAdapterResource</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Model/DbAdapterResourceFactory.php">
    <MixedArgument occurrences="1"/>
  </file>
  <file src="src/Model/DbAutodiscoveryModel.php">
    <DeprecatedClass occurrences="3">
      <code>Metadata</code>
      <code>Metadata</code>
      <code>new Metadata($adapter)</code>
    </DeprecatedClass>
    <MissingParamType occurrences="6">
      <code>$adapter_name</code>
      <code>$columnName</code>
      <code>$module</code>
      <code>$tableName</code>
      <code>$tableName</code>
      <code>$version</code>
    </MissingParamType>
    <MixedArgument occurrences="5">
      <code>$config[$adapter_name]</code>
      <code>$constraint['type']</code>
      <code>$constraint['type']</code>
      <code>$tableName</code>
      <code>$tableName</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="6">
      <code>$config[$adapter_name]</code>
      <code>$constraint['column']</code>
      <code>$constraint['type']</code>
      <code>$constraint['type']</code>
      <code>$this-&gt;config['db']['adapters']</code>
      <code>$validator['options']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$validator['options']</code>
      <code>$validator['options']</code>
      <code>$validator['options']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$config[$adapter_name]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="10">
      <code>$config</code>
      <code>$constraint</code>
      <code>$item['filters']</code>
      <code>$item['filters']</code>
      <code>$item['validators'][]</code>
      <code>$item['validators'][]</code>
      <code>$item['validators'][]</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="2">
      <code>$column-&gt;getDataType()</code>
      <code>$column-&gt;getDataType()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>getReferencedColumns</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="1">
      <code>DbAutodiscoveryModel</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Model/DbAutodiscoveryModelFactory.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$container</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Model/DbConnectedRestServiceEntity.php">
    <DeprecatedClass occurrences="1">
      <code>ArraySerializable::class</code>
    </DeprecatedClass>
    <MissingPropertyType occurrences="4">
      <code>$adapterName</code>
      <code>$hydratorName</code>
      <code>$tableName</code>
      <code>$tableService</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>exchangeArray</code>
      <code>getArrayCopy</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;normalizeServiceNameForIdentifier($this-&gt;tableName)</code>
      <code>$this-&gt;normalizeServiceNameForRoute($this-&gt;tableName)</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment occurrences="5">
      <code>$data['adapter_name']</code>
      <code>$data['hydrator_name']</code>
      <code>$data['service_name']</code>
      <code>$data['table_name']</code>
      <code>$data['table_service']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="7">
      <code>$data</code>
      <code>$data['adapter_name']</code>
      <code>$data['hydrator_name']</code>
      <code>$data['service_name']</code>
      <code>$data['table_name']</code>
      <code>$data['table_service']</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/DbConnectedRestServiceModel.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$updatedEntity</code>
    </LessSpecificReturnStatement>
    <MissingReturnType occurrences="4">
      <code>createDbConnectedConfig</code>
      <code>deleteDbConnectedConfig</code>
      <code>updateDbConnectedConfig</code>
      <code>updateHalConfig</code>
    </MissingReturnType>
    <MixedArgument occurrences="18">
      <code>$config</code>
      <code>$entity-&gt;controllerServiceName</code>
      <code>$entity-&gt;entityClass</code>
      <code>$entity-&gt;getArrayCopy()</code>
      <code>$entity-&gt;resourceClass</code>
      <code>$entity-&gt;resourceClass</code>
      <code>$entity-&gt;routeIdentifierName</code>
      <code>$entity-&gt;routeMatch</code>
      <code>$entityClass</code>
      <code>$resourceName</code>
      <code>$resourceName</code>
      <code>$resourceName</code>
      <code>$resourceName</code>
      <code>$resourceName</code>
      <code>$resourceName</code>
      <code>$this-&gt;restModel-&gt;module</code>
      <code>$this-&gt;restModel-&gt;moduleEntity-&gt;getLatestVersion()</code>
      <code>$updatedProps</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$config['table_service']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="4">
      <code>$config['api-tools']['db-connected'][$entity-&gt;resourceClass]</code>
      <code>$config['api-tools']['db-connected'][$entity-&gt;resourceClass]</code>
      <code>$config['api-tools']['db-connected'][$entity-&gt;resourceClass]</code>
      <code>$properties['api-tools']['db-connected'][$entity-&gt;resourceClass]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="8">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$entity</code>
      <code>$entityClass</code>
      <code>$resourceName</code>
      <code>$updatedProps</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>deleteKey</code>
      <code>fetch</code>
      <code>getArrayCopy</code>
      <code>getLatestVersion</code>
      <code>patch</code>
      <code>patch</code>
      <code>patchKey</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$entity-&gt;resourceClass</code>
    </MixedPropertyFetch>
    <MoreSpecificReturnType occurrences="1">
      <code>DbConnectedRestServiceEntity</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Model/DoctrineAdapterEntity.php">
    <MissingParamType occurrences="2">
      <code>$config</code>
      <code>$name</code>
    </MissingParamType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="4">
      <code>$this-&gt;config</code>
      <code>$this-&gt;name</code>
      <code>$this-&gt;name</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/DoctrineAdapterModel.php">
    <MissingParamType occurrences="4">
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
    </MissingParamType>
    <MixedArrayOffset occurrences="1">
      <code>$config['doctrine']['connection'][$name]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="1">
      <code>$adapterConfig</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/DoctrineAdapterModelFactory.php">
    <MixedArgument occurrences="3">
      <code>$config</code>
      <code>$writer</code>
      <code>ConfigWriter::class</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$writer</code>
    </MixedAssignment>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/DoctrineAdapterResource.php">
    <DocblockTypeContradiction occurrences="2">
      <code>false === ($adapters = $this-&gt;model-&gt;fetchAll($params))</code>
      <code>is_array($data)</code>
    </DocblockTypeContradiction>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$model</code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument occurrences="3">
      <code>$id</code>
      <code>$id</code>
      <code>$id</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$name</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="2">
      <code>$data</code>
      <code>$data</code>
    </MoreSpecificImplementedParamType>
    <PropertyNotSetInConstructor occurrences="3">
      <code>DoctrineAdapterResource</code>
      <code>DoctrineAdapterResource</code>
      <code>DoctrineAdapterResource</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_object($data)</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments occurrences="1">
      <code>fetchAll</code>
    </TooManyArguments>
  </file>
  <file src="src/Model/DoctrineAdapterResourceFactory.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$container</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>setServiceLocator</code>
    </DeprecatedMethod>
    <MixedArgument occurrences="2">
      <code>$loadedModules</code>
      <code>$model</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$loadedModules</code>
      <code>$model</code>
      <code>$modules</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getLoadedModules</code>
    </MixedMethodCall>
  </file>
  <file src="src/Model/DocumentationModel.php">
    <MissingParamType occurrences="9">
      <code>$controllerServiceName</code>
      <code>$controllerServiceName</code>
      <code>$controllerType</code>
      <code>$documentation</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$replace</code>
      <code>$type</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>fetchDocumentation</code>
      <code>getSchemaTemplate</code>
      <code>storeDocumentation</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$controllerServiceName</code>
      <code>$docArray</code>
      <code>$module</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="2">
      <code>$fullDoc[$controllerServiceName]</code>
      <code>$value[$controllerServiceName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="1">
      <code>$docArray</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/DocumentationModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>DocumentationModelFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="8">
      <code>$container-&gt;get(ModuleUtils::class)</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
      <code>\ZF\Configuration\ConfigResourceFactory::class</code>
      <code>\ZF\Configuration\ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="6">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>\ZF\Configuration\ConfigResourceFactory</code>
      <code>\ZF\Configuration\ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/FiltersModel.php">
    <MissingClosureParamType occurrences="2">
      <code>$key</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$key</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$value</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="1">
      <code>FiltersModel</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($this-&gt;plugins)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/FiltersModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>FiltersModelFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="1">
      <code>$container-&gt;get('FilterManager')</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/HydratorsModel.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>HydratorsModel</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Model/HydratorsModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>HydratorsModelFactory</code>
    </DeprecatedInterface>
  </file>
  <file src="src/Model/InputFilterModel.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($updated)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="2">
      <code>['api-tools-content-validation', $controller, 'input_filter']</code>
      <code>['input_filter_specs', $validator]</code>
    </InvalidArgument>
    <InvalidArrayAssignment occurrences="3">
      <code>$inputFilter['input_filter_name']</code>
      <code>$inputFilter['input_filter_name']</code>
      <code>$return['input_filter_name']</code>
    </InvalidArrayAssignment>
    <InvalidReturnStatement occurrences="3">
      <code>$return</code>
      <code>$this-&gt;addInputFilter($module, $controller, $inputFilter)</code>
      <code>$this-&gt;getInputFilter($module, $controller, $inputFilterName)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="3">
      <code>array|bool</code>
      <code>false|InputFilterEntity</code>
      <code>false|array|InputFilterEntity</code>
    </InvalidReturnType>
    <InvalidStringClass occurrences="5">
      <code>new $collectionType()</code>
      <code>new $collectionType()</code>
      <code>new $entityType($config['input_filter_specs'][$inputFilterName])</code>
      <code>new $entityType($config['input_filter_specs'][$validator])</code>
      <code>new $entityType($updated['input_filter_specs'][$validator])</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement occurrences="3">
      <code>$collection</code>
      <code>$inputFilter</code>
      <code>new $collectionType()</code>
    </LessSpecificReturnStatement>
    <MixedArgument occurrences="3">
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$validator</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="4">
      <code>$config['api-tools-content-validation'][$controller]</code>
      <code>$config['api-tools-content-validation'][$controller]</code>
      <code>$config['api-tools-content-validation'][$controller]</code>
      <code>$updated['input_filter_specs'][$validator]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="2">
      <code>$config['input_filter_specs'][$validator]</code>
      <code>$config['input_filter_specs'][$validator]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="5">
      <code>$config['input_filter_specs'][$validator]</code>
      <code>$config['input_filter_specs'][$validator]</code>
      <code>$config['input_filter_specs'][$validator]</code>
      <code>$config['input_filter_specs'][$validator]</code>
      <code>$updated['input_filter_specs'][$validator]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="5">
      <code>$inputFilter['input_filter_name']</code>
      <code>$return['input_filter_name']</code>
      <code>$validator</code>
      <code>$validator</code>
      <code>$validator</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>enqueue</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1">
      <code>false|InputFilterCollection|InputFilterEntity</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Model/InputFilterModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>InputFilterModelFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="7">
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
      <code>\ZF\Configuration\ConfigResourceFactory::class</code>
      <code>\ZF\Configuration\ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="6">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>\ZF\Configuration\ConfigResourceFactory</code>
      <code>\ZF\Configuration\ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/ModuleEntity.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;namespace . '\\Module'</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="1">
      <code>null === $this-&gt;isVendor</code>
    </DocblockTypeContradiction>
    <InvalidScalarArgument occurrences="1">
      <code>is_object($value) ? get_class($value) : gettype($value)</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="2">
      <code>determineVendorStatus</code>
      <code>exchangeArray</code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="2">
      <code>$this-&gt;name</code>
      <code>$this-&gt;namespace</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>int</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>max($this-&gt;versions)</code>
    </MixedReturnStatement>
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>is_bool($isVendor) ? $isVendor : null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Model/ModuleModel.php">
    <DocblockTypeContradiction occurrences="3">
      <code>! $module instanceof ApiToolsProviderInterface &amp;&amp; ! $module instanceof ApiToolsModuleInterface</code>
      <code>empty(static::$valueGenerator)</code>
    </DocblockTypeContradiction>
    <ImplicitToStringCast occurrences="1">
      <code>string</code>
    </ImplicitToStringCast>
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
    <MissingParamType occurrences="1">
      <code>$flag</code>
    </MissingParamType>
    <MixedArgument occurrences="10">
      <code>$application['modules']</code>
      <code>$application['modules']</code>
      <code>$application['modules']</code>
      <code>$application['modules']</code>
      <code>$application['modules']</code>
      <code>$controller</code>
      <code>$dir</code>
      <code>$modules[$module]</code>
      <code>$services['rest']</code>
      <code>$services['rpc']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="3">
      <code>$moduleName</code>
      <code>$moduleName</code>
      <code>$moduleName</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="1">
      <code>$config['api-tools-versioning']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$application['modules'][]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="5">
      <code>$application</code>
      <code>$config</code>
      <code>$controller</code>
      <code>$dir</code>
      <code>$services[]</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>int</code>
      <code>null|ModuleEntity</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$modules[$moduleName]</code>
    </MixedReturnStatement>
    <MixedReturnTypeCoercion occurrences="2">
      <code>ModuleEntity[]</code>
      <code>array_values($modules)</code>
    </MixedReturnTypeCoercion>
    <PossiblyNullArgument occurrences="2">
      <code>$services['rest']</code>
      <code>$services['rpc']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="2">
      <code>$services['rest']</code>
      <code>$services['rpc']</code>
    </PossiblyNullArrayAccess>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$modules</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($this-&gt;modules)</code>
    </RedundantConditionGivenDocblockType>
    <UnresolvableInclude occurrences="2">
      <code>require sprintf('%s/config/application.config.php', $path)</code>
      <code>require sprintf('%s/config/application.config.php', $path)</code>
    </UnresolvableInclude>
  </file>
  <file src="src/Model/ModuleModelFactory.php">
    <MixedArgument occurrences="1">
      <code>$container-&gt;get('ModuleManager')</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$container-&gt;has('config') ? $container-&gt;get('config') : []</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Model/ModulePathSpec.php">
    <InvalidArgument occurrences="1">
      <code>$replace</code>
    </InvalidArgument>
    <MixedArgument occurrences="1">
      <code>$pathSpec</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$pathSpec</code>
      <code>$this-&gt;moduleSourcePathSpec</code>
      <code>$this-&gt;moduleSourcePathSpec</code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion occurrences="1">
      <code>$psr</code>
    </MixedPropertyTypeCoercion>
  </file>
  <file src="src/Model/ModulePathSpecFactory.php">
    <MixedArgument occurrences="3">
      <code>$config['module_path']</code>
      <code>$config['module_path']</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="3">
      <code>array</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="3">
      <code>$config['api-tools-admin']</code>
      <code>$config['module_path']</code>
      <code>isset($config['path_spec']) ? $config['path_spec'] : 'psr-0'</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Model/ModuleResource.php">
    <MixedArgument occurrences="2">
      <code>$data['name']</code>
      <code>$recursive</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$recursive</code>
      <code>$version</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType occurrences="3">
      <code>$data</code>
      <code>$id</code>
      <code>$id</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullReference occurrences="1">
      <code>getQuery</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="3">
      <code>ModuleResource</code>
      <code>ModuleResource</code>
      <code>ModuleResource</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getQuery</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Model/ModuleResourceFactory.php">
    <MixedArgument occurrences="2">
      <code>$container-&gt;get(ModuleModel::class)</code>
      <code>$container-&gt;get(ModulePathSpec::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Model/ModuleVersioningModel.php">
    <MissingReturnType occurrences="1">
      <code>recursiveCopy</code>
    </MissingReturnType>
    <MixedArgument occurrences="14">
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools-content-negotiation'][$key]</code>
      <code>$config['api-tools-content-validation']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-mvc-auth']['authorization']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['controllers']</code>
      <code>$config['input_filter_specs']</code>
      <code>$config['service_manager']</code>
      <code>$dir</code>
      <code>$file</code>
      <code>$mediatype</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="1">
      <code>$config['api-tools-content-negotiation'][$key]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$newValues[$k][$index]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$newValues[$k][$index]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="6">
      <code>$dir</code>
      <code>$file</code>
      <code>$index</code>
      <code>$mediatype</code>
      <code>$v</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedOperand occurrences="1">
      <code>$this-&gt;getModuleNameFilter()-&gt;filter($module)</code>
    </MixedOperand>
    <PossiblyInvalidArgument occurrences="2">
      <code>$versions</code>
      <code>$versions</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$moduleNameFilter</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="7">
      <code>(int) $defaultVersion</code>
      <code>(int) $version</code>
      <code>(string) $moduleName</code>
      <code>(string) $moduleName</code>
      <code>(string) $pathSpecType</code>
      <code>(string) $srcPath</code>
      <code>(string)$configDirPath</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;moduleNameFilter instanceof FilterChain</code>
    </RedundantConditionGivenDocblockType>
    <UnsafeInstantiation occurrences="1"/>
  </file>
  <file src="src/Model/ModuleVersioningModelFactory.php">
    <MissingParamType occurrences="1">
      <code>$module</code>
    </MissingParamType>
    <MixedArgument occurrences="2">
      <code>$documentation</code>
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$documentation</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/ModuleVersioningModelFactoryFactory.php">
    <MixedArgument occurrences="4">
      <code>$container-&gt;get(ConfigResourceFactory::class)</code>
      <code>$container-&gt;get(ModulePathSpec::class)</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="2">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/NewRestServiceEntity.php">
    <MissingPropertyType occurrences="1">
      <code>$serviceName</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>exchangeArray</code>
      <code>getArrayCopy</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;normalizeServiceNameForIdentifier($this-&gt;serviceName)</code>
      <code>$this-&gt;normalizeServiceNameForRoute($this-&gt;serviceName)</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment occurrences="1">
      <code>$return['service_name']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="3">
      <code>$return</code>
      <code>$return['service_name']</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/RestServiceEntity.php">
    <DeprecatedClass occurrences="1">
      <code>\Laminas\Hydrator\ArraySerializable::class</code>
    </DeprecatedClass>
    <MissingParamType occurrences="4">
      <code>$name</code>
      <code>$name</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
    </MissingParamType>
    <MissingPropertyType occurrences="23">
      <code>$acceptWhitelist</code>
      <code>$collectionClass</code>
      <code>$collectionHttpMethods</code>
      <code>$collectionName</code>
      <code>$collectionQueryWhitelist</code>
      <code>$contentTypeWhitelist</code>
      <code>$controllerServiceName</code>
      <code>$documentation</code>
      <code>$entityClass</code>
      <code>$entityHttpMethods</code>
      <code>$entityIdentifierName</code>
      <code>$filters</code>
      <code>$hydratorName</code>
      <code>$inputFilters</code>
      <code>$module</code>
      <code>$pageSize</code>
      <code>$pageSizeParam</code>
      <code>$resourceClass</code>
      <code>$routeIdentifierName</code>
      <code>$routeMatch</code>
      <code>$routeName</code>
      <code>$selector</code>
      <code>$serviceName</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="4">
      <code>exchangeArray</code>
      <code>getArrayCopy</code>
      <code>normalizeServiceNameForIdentifier</code>
      <code>normalizeServiceNameForRoute</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAssignment occurrences="2">
      <code>$this-&gt;filters['identifier']</code>
      <code>$this-&gt;filters['route']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="4">
      <code>$array['documentation']</code>
      <code>$array['input_filters']</code>
      <code>$legacyIdentifierName</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/RestServiceModel.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;events</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement occurrences="1">
      <code>$this-&gt;fetch($controllerService, false)</code>
    </FalsableReturnStatement>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>$this</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArgument occurrences="1">
      <code>$key</code>
    </InvalidArgument>
    <InvalidFalsableReturnType occurrences="1">
      <code>RestServiceEntity</code>
    </InvalidFalsableReturnType>
    <InvalidReturnStatement occurrences="1">
      <code>$services</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>RestServiceEntity[]</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="2">
      <code>$r</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MissingParamType occurrences="1">
      <code>$serviceName</code>
    </MissingParamType>
    <MissingReturnType occurrences="19">
      <code>createContentNegotiationConfig</code>
      <code>createFactoryClass</code>
      <code>createHalConfig</code>
      <code>createRestConfig</code>
      <code>deleteAuthorizationConfig</code>
      <code>deleteContentNegotiationConfig</code>
      <code>deleteContentValidationConfig</code>
      <code>deleteHalConfig</code>
      <code>deleteRestConfig</code>
      <code>deleteRoute</code>
      <code>deleteServiceManagerConfig</code>
      <code>deleteVersioningConfig</code>
      <code>getRouteInfo</code>
      <code>mergeContentNegotiationConfig</code>
      <code>mergeHalConfig</code>
      <code>updateContentNegotiationConfig</code>
      <code>updateHalConfig</code>
      <code>updateRestConfig</code>
      <code>updateRoute</code>
    </MissingReturnType>
    <MixedArgument occurrences="43">
      <code>$collectionClass</code>
      <code>$collectionConfig</code>
      <code>$configKey</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-versioning']['uri']</code>
      <code>$config['api-tools-versioning']['uri']</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$details-&gt;getArrayCopy()</code>
      <code>$details-&gt;routeIdentifierName</code>
      <code>$details-&gt;routeMatch</code>
      <code>$details-&gt;serviceName</code>
      <code>$entityClass</code>
      <code>$entityConfig</code>
      <code>$filter-&gt;filter($serviceName)</code>
      <code>$filter-&gt;filter($this-&gt;module)</code>
      <code>$filter-&gt;filter($this-&gt;module)</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$resourceClass</code>
      <code>$restConfig</code>
      <code>$route</code>
      <code>$route</code>
      <code>$routeConfig['options']['route']</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$service-&gt;resourceClass</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="3">
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="10">
      <code>$config[$collectionClass]</code>
      <code>$config[$entityClass]</code>
      <code>$config[$entityClass]</code>
      <code>$config['accept_whitelist']</code>
      <code>$config['content_type_whitelist']</code>
      <code>$config['controllers']</code>
      <code>$config['router']['routes'][$routeName]['options']['route']</code>
      <code>$restConfig['listener']</code>
      <code>$restConfig['listener']</code>
      <code>$routeConfig['options']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$restConfig['controllerServiceName']</code>
      <code>$restConfig['module']</code>
      <code>$restConfig['resource_class']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="5">
      <code>$config['router']['routes'][$routeName]</code>
      <code>$data[$entityClass]</code>
      <code>$halConfig[$collectionClass]</code>
      <code>$halConfig[$entityClass]</code>
      <code>$patch[$configKey]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="59">
      <code>$acceptWhitelist</code>
      <code>$collectionClass</code>
      <code>$collectionClass</code>
      <code>$collectionClass</code>
      <code>$collectionConfig</code>
      <code>$collectionUpdate['entity_identifier_name']</code>
      <code>$collectionUpdate['route_identifier_name']</code>
      <code>$collectionUpdate['route_name']</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$configKey</code>
      <code>$configKey</code>
      <code>$config['api-tools-hal']['metadata_map'][$entityClass]['hydrator']</code>
      <code>$contentTypeWhitelist</code>
      <code>$controller</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$data[$entityClass]['hydrator']</code>
      <code>$entity</code>
      <code>$entityClass</code>
      <code>$entityClass</code>
      <code>$entityClass</code>
      <code>$entityConfig</code>
      <code>$entityUpdate['entity_identifier_name']</code>
      <code>$entityUpdate['hydrator']</code>
      <code>$entityUpdate['route_identifier_name']</code>
      <code>$entityUpdate['route_name']</code>
      <code>$factoryClassName</code>
      <code>$halConfig</code>
      <code>$hydratorName</code>
      <code>$key[2]</code>
      <code>$merge['entity_identifier_name']</code>
      <code>$merge['entity_identifier_name']</code>
      <code>$merge['hydrator_name']</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$patch[$configKey]</code>
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$restConfig</code>
      <code>$restConfig['resource_class']</code>
      <code>$route</code>
      <code>$route</code>
      <code>$route</code>
      <code>$routeConfig</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$service</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$whitelist</code>
      <code>$whitelist</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="3">
      <code>RestServiceEntity|false</code>
      <code>string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>exchangeArray</code>
      <code>serviceName</code>
    </MixedMethodCall>
    <MixedOperand occurrences="7">
      <code>$collectionClass</code>
      <code>$collectionClass</code>
      <code>$entityClass</code>
      <code>$entityClass</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="1">
      <code>$entity-&gt;serviceName</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="3">
      <code>$config['api-tools-rest'][$controllerServiceName]['collection_class']</code>
      <code>$config['api-tools-rest'][$controllerServiceName]['entity_class']</code>
      <code>$entity</code>
    </MixedReturnStatement>
    <NullableReturnStatement occurrences="2">
      <code>null</code>
      <code>null</code>
    </NullableReturnStatement>
    <PossiblyFalseArgument occurrences="12">
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
    </PossiblyFalseArgument>
    <PossiblyFalseReference occurrences="1">
      <code>resourceClass</code>
    </PossiblyFalseReference>
    <PossiblyInvalidPropertyFetch occurrences="1">
      <code>$service-&gt;resourceClass</code>
    </PossiblyInvalidPropertyFetch>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$events</code>
      <code>$renderer</code>
      <code>$routeNameFilter</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $version</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$this-&gt;renderer instanceof PhpRenderer</code>
      <code>$this-&gt;routeNameFilter instanceof FilterChain</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/RestServiceModelFactory.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>RestServiceModel</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1">
      <code>$model</code>
    </InvalidReturnStatement>
    <MixedArrayAssignment occurrences="2">
      <code>$this-&gt;models[$type][$module]</code>
      <code>$this-&gt;models[$type][$module]</code>
    </MixedArrayAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>RestServiceModel</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;models[$type][$module]</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$moduleEntity</code>
    </PossiblyNullArgument>
    <UndefinedMethod occurrences="1">
      <code>setSharedManager</code>
    </UndefinedMethod>
  </file>
  <file src="src/Model/RestServiceModelFactoryFactory.php">
    <MixedArgument occurrences="6">
      <code>$container-&gt;get(ConfigResourceFactory::class)</code>
      <code>$container-&gt;get(ModuleModel::class)</code>
      <code>$container-&gt;get(ModulePathSpec::class)</code>
      <code>$sharedEvents</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$loaded</code>
      <code>$modules</code>
      <code>$sharedEvents</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getLoadedModules</code>
    </MixedMethodCall>
    <UndefinedClass occurrences="4">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>DoctrineRestServiceModel</code>
      <code>[DoctrineRestServiceModel::class, 'onFetch']</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/RestServiceResource.php">
    <DeprecatedMethod occurrences="1">
      <code>add</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="2">
      <code>! $inputFilters instanceof InputFilterCollection</code>
      <code>is_array($data)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>$entity</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="1">
      <code>$e-&gt;getCode()</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="2">
      <code>injectDocumentation</code>
      <code>injectInputFilters</code>
    </MissingReturnType>
    <MixedArgument occurrences="10">
      <code>$documentation</code>
      <code>$entity-&gt;controllerServiceName</code>
      <code>$id</code>
      <code>$inputFilter</code>
      <code>$inputFilter['input_filter_name']</code>
      <code>$recursive</code>
      <code>$recursive</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$version ?: null</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$inputFilter['input_filter_name']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$inputFilter['input_filter_name']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="6">
      <code>$documentation</code>
      <code>$inputFilter</code>
      <code>$moduleName</code>
      <code>$recursive</code>
      <code>$this-&gt;moduleName</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$moduleName</code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType occurrences="4">
      <code>$data</code>
      <code>$data</code>
      <code>$id</code>
      <code>$id</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseReference occurrences="2">
      <code>controllerServiceName</code>
      <code>exchangeArray</code>
    </PossiblyFalseReference>
    <PossiblyInvalidPropertyFetch occurrences="1">
      <code>$entity-&gt;controllerServiceName</code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullReference occurrences="1">
      <code>getQuery</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="5">
      <code>$model</code>
      <code>$moduleName</code>
      <code>RestServiceResource</code>
      <code>RestServiceResource</code>
      <code>RestServiceResource</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition occurrences="1">
      <code>$entity instanceof RestServiceEntity</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>$inputFilters instanceof InputFilterCollection</code>
      <code>$this-&gt;model instanceof RestServiceModel</code>
      <code>null !== $this-&gt;moduleName</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getQuery</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Model/RestServiceResourceFactory.php">
    <MixedArgument occurrences="3">
      <code>$container-&gt;get(DocumentationModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Model/RpcServiceEntity.php">
    <MissingParamType occurrences="1">
      <code>$name</code>
    </MissingParamType>
    <MissingPropertyType occurrences="11">
      <code>$acceptWhitelist</code>
      <code>$contentTypeWhitelist</code>
      <code>$controllerClass</code>
      <code>$controllerServiceName</code>
      <code>$documentation</code>
      <code>$httpMethods</code>
      <code>$inputFilters</code>
      <code>$routeMatch</code>
      <code>$routeName</code>
      <code>$selector</code>
      <code>$serviceName</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="1">
      <code>exchangeArray</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$name</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$array['controller_class']</code>
      <code>$array['documentation']</code>
      <code>$array['input_filters']</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/RpcServiceModel.php">
    <FalsableReturnStatement occurrences="2">
      <code>$this-&gt;fetch($controllerService)</code>
      <code>false</code>
    </FalsableReturnStatement>
    <InvalidArgument occurrences="1">
      <code>$key</code>
    </InvalidArgument>
    <InvalidFalsableReturnType occurrences="1">
      <code>RpcServiceEntity</code>
    </InvalidFalsableReturnType>
    <InvalidReturnStatement occurrences="1">
      <code>$services</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="2">
      <code>RpcServiceEntity[]</code>
      <code>true</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="7">
      <code>deleteAuthorizationConfig</code>
      <code>deleteContentNegotiationConfig</code>
      <code>deleteContentValidationConfig</code>
      <code>deleteControllersConfig</code>
      <code>deleteRouteConfig</code>
      <code>deleteRpcConfig</code>
      <code>deleteVersioningConfig</code>
    </MissingReturnType>
    <MixedArgument occurrences="21">
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-versioning']['uri']</code>
      <code>$config['api-tools-versioning']['uri']</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$data['route_name']</code>
      <code>$entity-&gt;controllerServiceName</code>
      <code>$entity-&gt;controllerServiceName</code>
      <code>$routeConfig['options']['route']</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="3">
      <code>$controllerService</code>
      <code>$controllerService</code>
      <code>$controllerService</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="9">
      <code>$config[$routeName]</code>
      <code>$config['options']</code>
      <code>$contentNegotiationConfig['accept_whitelist']</code>
      <code>$contentNegotiationConfig['content_type_whitelist']</code>
      <code>$contentNegotiationConfig['controllers']</code>
      <code>$routeConfig['options']</code>
      <code>$rpcConfig['http_methods']</code>
      <code>$rpcConfig['route_name']</code>
      <code>$rpcConfig['service_name']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="4">
      <code>$config['api-tools-content-negotiation'][$headerType]</code>
      <code>$config['api-tools-content-negotiation']['controllers']</code>
      <code>$config['api-tools-rpc'][$controllerService]</code>
      <code>$config['router']['routes']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$config['router']['routes'][$routeName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="16">
      <code>$config</code>
      <code>$config</code>
      <code>$contentNegotiationConfig</code>
      <code>$controllerService</code>
      <code>$data['accept_whitelist']</code>
      <code>$data['content_type_whitelist']</code>
      <code>$data['http_methods']</code>
      <code>$data['route_name']</code>
      <code>$data['selector']</code>
      <code>$data['service_name']</code>
      <code>$routeConfig</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$rpcConfig</code>
      <code>$serviceName</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>false|string</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="1">
      <code>$entity-&gt;serviceName</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="2">
      <code>$config['options']['route']</code>
      <code>$filter-&gt;filter($string)</code>
    </MixedReturnStatement>
    <PossiblyFalseArgument occurrences="1">
      <code>strrpos($entity-&gt;controllerServiceName, '\\')</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidPropertyFetch occurrences="1">
      <code>$controllerData-&gt;service</code>
    </PossiblyInvalidPropertyFetch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$filter</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;filter instanceof FilterChain</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/RpcServiceModelFactory.php">
    <MixedInferredReturnType occurrences="1">
      <code>RpcServiceModel</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;models[$module]</code>
    </MixedReturnStatement>
    <PossiblyNullArgument occurrences="1">
      <code>$moduleEntity</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Model/RpcServiceModelFactoryFactory.php">
    <MixedArgument occurrences="6">
      <code>$container-&gt;get('SharedEventManager')</code>
      <code>$container-&gt;get(ConfigResourceFactory::class)</code>
      <code>$container-&gt;get(ModuleModel::class)</code>
      <code>$container-&gt;get(ModulePathSpec::class)</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="2">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Model/RpcServiceResource.php">
    <DeprecatedMethod occurrences="1">
      <code>add</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="2">
      <code>! $inputFilters instanceof InputFilterCollection</code>
      <code>is_array($data)</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement occurrences="1">
      <code>$model-&gt;fetch($id)</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>ApiProblem|RpcServiceEntity</code>
    </InvalidFalsableReturnType>
    <InvalidReturnStatement occurrences="1">
      <code>$entity</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>true</code>
    </InvalidReturnType>
    <InvalidScalarArgument occurrences="2">
      <code>$e-&gt;getCode()</code>
      <code>$e-&gt;getCode()</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="3">
      <code>injectControllerClass</code>
      <code>injectDocumentation</code>
      <code>injectInputFilters</code>
    </MissingReturnType>
    <MixedArgument occurrences="15">
      <code>$controller</code>
      <code>$controllerServiceName</code>
      <code>$controllerServiceName</code>
      <code>$documentation</code>
      <code>$inputFilter</code>
      <code>$inputFilter['input_filter_name']</code>
      <code>$recursive</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$version ?: null</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="1">
      <code>$inputFilter['input_filter_name']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$inputFilter['input_filter_name']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="9">
      <code>$controller</code>
      <code>$controllerServiceName</code>
      <code>$documentation</code>
      <code>$inputFilter</code>
      <code>$moduleName</code>
      <code>$recursive</code>
      <code>$this-&gt;moduleName</code>
      <code>$value</code>
      <code>$version</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$moduleName</code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType occurrences="5">
      <code>$data</code>
      <code>$data</code>
      <code>$id</code>
      <code>$id</code>
      <code>$id</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$creationData['http_methods']</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference occurrences="1">
      <code>getQuery</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="5">
      <code>$model</code>
      <code>$moduleName</code>
      <code>RpcServiceResource</code>
      <code>RpcServiceResource</code>
      <code>RpcServiceResource</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>$inputFilters instanceof InputFilterCollection</code>
      <code>$this-&gt;model instanceof RpcServiceModel</code>
      <code>null !== $this-&gt;moduleName</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getQuery</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Model/RpcServiceResourceFactory.php">
    <MixedArgument occurrences="4">
      <code>$container-&gt;get('ControllerManager')</code>
      <code>$container-&gt;get(DocumentationModel::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Model/ValidatorMetadataModel.php">
    <MissingClosureParamType occurrences="3">
      <code>$defaults</code>
      <code>$key</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="2">
      <code>$defaults</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$this-&gt;defaults</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;processedMetadata[$plugin]</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$processedMetadata</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($this-&gt;processedMetadata)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/ValidatorMetadataModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>ValidatorMetadataModelFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="1">
      <code>$metadata</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['validator_metadata']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$metadata</code>
    </MixedAssignment>
  </file>
  <file src="src/Model/ValidatorsModel.php">
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
    <PropertyNotSetInConstructor occurrences="1">
      <code>ValidatorsModel</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($this-&gt;plugins)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Model/ValidatorsModelFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>ValidatorsModelFactory</code>
    </DeprecatedInterface>
    <MixedArgument occurrences="2">
      <code>$container-&gt;get('ValidatorManager')</code>
    </MixedArgument>
  </file>
  <file src="src/Model/VersioningModel.php">
    <DeprecatedMethod occurrences="4">
      <code>getModuleSourcePath</code>
      <code>locateConfigPath</code>
      <code>locateConfigPath</code>
      <code>normalizeModule</code>
    </DeprecatedMethod>
    <InvalidScalarArgument occurrences="2">
      <code>$path</code>
      <code>$path</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="1">
      <code>$name</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$moduleNameFilter</code>
    </MissingPropertyType>
    <MixedArgument occurrences="1">
      <code>$name</code>
    </MixedArgument>
    <PossiblyFalseArgument occurrences="1">
      <code>$configDirPath</code>
    </PossiblyFalseArgument>
  </file>
  <file src="src/Model/VersioningModelFactory.php">
    <DeprecatedClass occurrences="2">
      <code>VersioningModel</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="1">
      <code>getDocsConfig</code>
    </DeprecatedMethod>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>VersioningModel</code>
    </ImplementedReturnTypeMismatch>
    <MissingParamType occurrences="1">
      <code>$module</code>
    </MissingParamType>
    <MixedArgument occurrences="2">
      <code>$documentation</code>
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$documentation</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>VersioningModel</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;models[$module]</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Model/VersioningModelFactoryFactory.php">
    <DeprecatedClass occurrences="3">
      <code>VersioningModelFactory</code>
      <code>VersioningModelFactory::class</code>
    </DeprecatedClass>
    <MixedArgument occurrences="4">
      <code>$container-&gt;get(ConfigResourceFactory::class)</code>
      <code>$container-&gt;get(ModulePathSpec::class)</code>
      <code>ConfigResourceFactory::class</code>
      <code>ConfigResourceFactory::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="2">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
  </file>
  <file src="src/Module.php">
    <MissingConstructor occurrences="3">
      <code>$mvcEvent</code>
      <code>$sm</code>
      <code>$urlHelper</code>
    </MissingConstructor>
    <MissingReturnType occurrences="3">
      <code>disableOpCache</code>
      <code>init</code>
      <code>onBootstrap</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$_SERVER['SERVER_SOFTWARE']</code>
      <code>$services-&gt;get(Listener\DisableHttpCacheListener::class)</code>
      <code>$services-&gt;get(Listener\EnableHalRenderCollectionsListener::class)</code>
      <code>$services-&gt;get(Listener\InjectModuleResourceLinksListener::class)</code>
      <code>$services-&gt;get(Listener\NormalizeMatchedControllerServiceNameListener::class)</code>
      <code>$services-&gt;get(Listener\NormalizeMatchedInputFilterNameListener::class)</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="1">
      <code>array|\Traversable</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>attach</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="1">
      <code>include __DIR__ . '/../config/module.config.php'</code>
    </MixedReturnStatement>
  </file>
  <file src="test/Controller/AuthenticationControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsAuthenticationController</code>
      <code>testLegacyFactoryReturnsAuthenticationController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'model', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'model', $controller)</code>
      <code>$this-&gt;assertInstanceOf(AuthenticationController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(AuthenticationController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/AuthenticationControllerTest.php">
    <ArgumentTypeCoercion occurrences="17">
      <code>'Laminas\ApiTools\Admin\Model\ModuleModel'</code>
      <code>'Laminas\ApiTools\ApiProblem\ApiProblemResponse'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\Hal\Collection'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\Http\PhpEnvironment\Response'</code>
      <code>'Laminas\Http\PhpEnvironment\Response'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$moduleModel</code>
    </InvalidArgument>
    <MissingParamType occurrences="3">
      <code>$method</code>
      <code>$postData</code>
      <code>$postData</code>
    </MissingParamType>
    <MissingReturnType occurrences="15">
      <code>invalidRequestMethods</code>
      <code>postRequestData</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddAuthenticationMapRequest</code>
      <code>testDeleteAuthenticationRequest</code>
      <code>testGetAllAuthenticationRequest</code>
      <code>testGetAuthenticationMapRequest</code>
      <code>testGetAuthenticationRequest</code>
      <code>testGetWrongAuthenticationMapRequest</code>
      <code>testPostAuthenticationRequest</code>
      <code>testProcessWithInvalidRequestMethodReturnsApiProblemModel</code>
      <code>testPutAuthenticationRequest</code>
      <code>testRemoveAuthenticationMapRequest</code>
      <code>testUpdateAuthenticationMapRequest</code>
    </MissingReturnType>
    <MixedArgument occurrences="11">
      <code>$collection</code>
      <code>$config['router']</code>
      <code>$metadata</code>
      <code>$method</code>
      <code>$postData</code>
      <code>$postData</code>
      <code>$router</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;localFile</code>
      <code>require $this-&gt;globalFile</code>
      <code>require $this-&gt;localFile</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$config['api-tools-mvc-auth']</code>
      <code>$config['router']</code>
      <code>$metadata['name']</code>
      <code>$params['authentication_adapter']</code>
      <code>$params['authentication_adapter']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="27">
      <code>$apiProblem</code>
      <code>$collection</code>
      <code>$config</code>
      <code>$config</code>
      <code>$entity</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$params</code>
      <code>$params</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$router</code>
      <code>$self</code>
      <code>$self</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="60">
      <code>authenticationAction</code>
      <code>authenticationAction</code>
      <code>authenticationAction</code>
      <code>authenticationAction</code>
      <code>authenticationAction</code>
      <code>authenticationAction</code>
      <code>get</code>
      <code>get</code>
      <code>getApiProblem</code>
      <code>getCollection</code>
      <code>getEntity</code>
      <code>getEntity</code>
      <code>getLinks</code>
      <code>getLinks</code>
      <code>getRoute</code>
      <code>getRoute</code>
      <code>getRouteParams</code>
      <code>getRouteParams</code>
      <code>getStatusCode</code>
      <code>getStatusCode</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>mappingAction</code>
      <code>mappingAction</code>
      <code>mappingAction</code>
      <code>mappingAction</code>
      <code>mappingAction</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>set</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$apiProblem-&gt;status</code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;routeMatch</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidMethodCall occurrences="19">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="19">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="30">
      <code>$this-&gt;assertEmpty(array_diff_key($metadata, $postData))</code>
      <code>$this-&gt;assertEquals($postData['name'], $params['authentication_adapter'])</code>
      <code>$this-&gt;assertEquals('api-tools/api/authentication', $self-&gt;getRoute())</code>
      <code>$this-&gt;assertEquals('api-tools/api/authentication', $self-&gt;getRoute())</code>
      <code>$this-&gt;assertEquals('testbasic', $metadata['name'])</code>
      <code>$this-&gt;assertEquals('testbasic', $params['authentication_adapter'])</code>
      <code>$this-&gt;assertEquals('testoauth2mongo', $result-&gt;getVariable('authentication'))</code>
      <code>$this-&gt;assertEquals('testoauth2pdo', $result-&gt;getVariable('authentication'))</code>
      <code>$this-&gt;assertEquals(204, $result-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(204, $result-&gt;getStatusCode())</code>
      <code>$this-&gt;assertEquals(4, count($collection))</code>
      <code>$this-&gt;assertEquals(405, $apiProblem-&gt;status)</code>
      <code>$this-&gt;assertFalse($result-&gt;getVariable('authentication'))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ApiProblem\ApiProblemResponse', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Collection', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\Http\PhpEnvironment\Response', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\Http\PhpEnvironment\Response', $result)</code>
    </ReservedWord>
    <UndefinedDocblockClass occurrences="6">
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedDocblockClass>
    <UndefinedThisPropertyAssignment occurrences="14">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;localFile</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="23">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;localFile</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="3">
      <code>require $this-&gt;globalFile</code>
      <code>require $this-&gt;globalFile</code>
      <code>require $this-&gt;localFile</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Controller/AuthenticationTypeControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsAuthenticationTypeController</code>
      <code>testLegacyFactoryReturnsAuthenticationTypeController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;listener, 'authListener', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;listener, 'authListener', $controller)</code>
      <code>$this-&gt;assertInstanceOf(AuthenticationTypeController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(AuthenticationTypeController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;listener</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/AuthenticationTypeControllerTest.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>'Laminas\ApiTools\ApiProblem\ApiProblemResponse'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
    </ArgumentTypeCoercion>
    <MissingParamType occurrences="6">
      <code>$expected</code>
      <code>$global</code>
      <code>$globalFile</code>
      <code>$local</code>
      <code>$localFile</code>
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="8">
      <code>getController</code>
      <code>getOldAuthConfig</code>
      <code>invalidRequestMethods</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testGetAuthenticationRequest</code>
      <code>testGetAuthenticationWithOldConfiguration</code>
      <code>testProcessWithInvalidRequestMethodReturnsApiProblemModel</code>
    </MissingReturnType>
    <MixedArgument occurrences="9">
      <code>$adapterConfig['adapter']</code>
      <code>$adapterConfig['adapter']</code>
      <code>$config['api-tools-mvc-auth']['authentication']['adapters']</code>
      <code>$method</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;localFile</code>
      <code>$this-&gt;localFile</code>
      <code>require $globalFile</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$adapterConfig['adapter']</code>
      <code>$adapterConfig['adapter']</code>
      <code>$config['api-tools-mvc-auth']</code>
      <code>$config['api-tools-mvc-auth']</code>
      <code>$config['api-tools-mvc-auth']['authentication']['adapters']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="11">
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapterConfig</code>
      <code>$adapterConfig</code>
      <code>$apiProblem</code>
      <code>$config</code>
      <code>$controller</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$types</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="11">
      <code>authTypeAction</code>
      <code>authTypeAction</code>
      <code>authTypeAction</code>
      <code>getApiProblem</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>setEvent</code>
      <code>setEvent</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
    </MixedMethodCall>
    <MixedOperand occurrences="4">
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="1">
      <code>$apiProblem-&gt;status</code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument occurrences="2">
      <code>$routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidMethodCall occurrences="3">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="3">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertEquals($adapters, $result-&gt;getVariable('auth-types'))</code>
      <code>$this-&gt;assertEquals($expected, $types)</code>
      <code>$this-&gt;assertEquals(405, $apiProblem-&gt;status)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ApiProblem\ApiProblemResponse', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
    </ReservedWord>
    <UndefinedDocblockClass occurrences="2">
      <code>$routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedDocblockClass>
    <UndefinedThisPropertyAssignment occurrences="5">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;localFile</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="7">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;globalFile</code>
      <code>$this-&gt;localFile</code>
      <code>$this-&gt;localFile</code>
      <code>$this-&gt;localFile</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="3">
      <code>require $globalFile</code>
      <code>require $localFile</code>
      <code>require $this-&gt;localFile</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Controller/AuthorizationControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsAuthorizationController</code>
      <code>testLegacyFactoryReturnsAuthorizationController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;authFactory, 'factory', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;authFactory, 'factory', $controller)</code>
      <code>$this-&gt;assertInstanceOf(AuthorizationController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(AuthorizationController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;authFactory</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;authFactory</code>
      <code>$this-&gt;authFactory</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/ConfigControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsConfigControllerComposingConfigResource</code>
      <code>testLegacyFactoryReturnsConfigControllerComposingConfigResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;configResource, 'config', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;configResource, 'config', $controller)</code>
      <code>$this-&gt;assertInstanceOf(ConfigController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(ConfigController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;configResource</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;configResource</code>
      <code>$this-&gt;configResource</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/ConfigControllerTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\ApiTools\ApiProblem\ApiProblemResponse'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="4">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="1">
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="8">
      <code>invalidRequestMethods</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testProcessGetRequestWithGenericJsonMediaTypeReturnsFlattenedConfiguration</code>
      <code>testProcessGetRequestWithLaminasApiToolsMediaTypeReturnsFullConfiguration</code>
      <code>testProcessPatchRequestWithGenericJsonMediaTypeReturnsUpdatedConfigurationKeys</code>
      <code>testProcessPatchRequestWithLaminasApiToolsMediaTypeReturnsUpdatedConfigurationKeys</code>
      <code>testProcessWithInvalidRequestMethodReturnsApiProblemResponse</code>
    </MissingReturnType>
    <MixedArgument occurrences="14">
      <code>$method</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
    </MixedArgument>
    <MixedAssignment occurrences="6">
      <code>$apiProblem</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>getApiProblem</code>
      <code>processAction</code>
      <code>setRequest</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$apiProblem-&gt;status</code>
    </MixedPropertyFetch>
    <PossiblyInvalidMethodCall occurrences="6">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="6">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="10">
      <code>$this-&gt;assertEquals($config, $result)</code>
      <code>$this-&gt;assertEquals($expected, $result)</code>
      <code>$this-&gt;assertEquals($expected, $result)</code>
      <code>$this-&gt;assertEquals($expected, $result)</code>
      <code>$this-&gt;assertEquals(405, $apiProblem-&gt;status)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ApiProblem\ApiProblemResponse', $result)</code>
      <code>$this-&gt;assertInternalType('array', $result)</code>
      <code>$this-&gt;assertInternalType('array', $result)</code>
      <code>$this-&gt;assertInternalType('array', $result)</code>
      <code>$this-&gt;assertInternalType('array', $result)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="5">
      <code>$this-&gt;configResource</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="14">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;file</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;plugins</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/DashboardControllerFactoryTest.php">
    <DeprecatedMethod occurrences="12">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsDashboardController</code>
      <code>testLegacyFactoryReturnsDashboardController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="14">
      <code>$this-&gt;assertAttributeSame($this-&gt;authenticationModel, 'authentication', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;authenticationModel, 'authentication', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;contentNegotiationModel, 'contentNegotiation', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;contentNegotiationModel, 'contentNegotiation', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;dbAdapterModel, 'dbAdapters', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;dbAdapterModel, 'dbAdapters', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;moduleModel, 'modules', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;moduleModel, 'modules', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;restServiceModelFactory, 'restServicesFactory', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;restServiceModelFactory, 'restServicesFactory', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;rpcServiceModelFactory, 'rpcServicesFactory', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;rpcServiceModelFactory, 'rpcServicesFactory', $controller)</code>
      <code>$this-&gt;assertInstanceOf(DashboardController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(DashboardController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="7">
      <code>$this-&gt;authenticationModel</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;contentNegotiationModel</code>
      <code>$this-&gt;dbAdapterModel</code>
      <code>$this-&gt;moduleModel</code>
      <code>$this-&gt;restServiceModelFactory</code>
      <code>$this-&gt;rpcServiceModelFactory</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="14">
      <code>$this-&gt;authenticationModel</code>
      <code>$this-&gt;authenticationModel</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;contentNegotiationModel</code>
      <code>$this-&gt;contentNegotiationModel</code>
      <code>$this-&gt;dbAdapterModel</code>
      <code>$this-&gt;dbAdapterModel</code>
      <code>$this-&gt;moduleModel</code>
      <code>$this-&gt;moduleModel</code>
      <code>$this-&gt;restServiceModelFactory</code>
      <code>$this-&gt;restServiceModelFactory</code>
      <code>$this-&gt;rpcServiceModelFactory</code>
      <code>$this-&gt;rpcServiceModelFactory</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/FsPermissionsControllerTest.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
    </ArgumentTypeCoercion>
    <MissingParamType occurrences="1">
      <code>$directory</code>
    </MissingParamType>
    <MissingReturnType occurrences="7">
      <code>removeDir</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testReturnsFalseIfConfigAndModuleDirectoriesExistButAreNotWritable</code>
      <code>testReturnsFalseIfNeitherConfigNorModuleDirectoriesExistAndRootIsNotWritable</code>
      <code>testReturnsTrueIfConfigAndModuleDirectoriesExistAndAreWritable</code>
      <code>testReturnsTrueIfNeitherConfigNorModuleDirectoriesExistButRootIsWritable</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$directory</code>
      <code>$directory</code>
      <code>$path-&gt;getPathname()</code>
      <code>$path-&gt;getPathname()</code>
      <code>$this-&gt;pwd</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$path</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>fsPermissionsAction</code>
      <code>fsPermissionsAction</code>
      <code>getPathname</code>
      <code>getPathname</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>isFile</code>
    </MixedMethodCall>
    <MixedOperand occurrences="2">
      <code>$this-&gt;wd</code>
      <code>$this-&gt;wd</code>
    </MixedOperand>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertFalse($fsPerms)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertNotNull($fsPerms)</code>
      <code>$this-&gt;assertNotNull($fsPerms)</code>
      <code>$this-&gt;assertNotNull($fsPerms)</code>
      <code>$this-&gt;assertTrue($fsPerms)</code>
      <code>$this-&gt;assertTrue($fsPerms)</code>
      <code>$this-&gt;markTestSkipped('Cannot test, as either /var/log does not exist or is writable')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;pwd</code>
      <code>$this-&gt;wd</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="5">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;pwd</code>
      <code>$this-&gt;wd</code>
      <code>$this-&gt;wd</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/InputFilterControllerTest.php">
    <ArgumentTypeCoercion occurrences="12">
      <code>'Laminas\ApiTools\Admin\Model\InputFilterCollection'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterEntity'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\Hal\Collection'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\Http\Response'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <MissingReturnType occurrences="6">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddInputFilter</code>
      <code>testGetInputFilter</code>
      <code>testGetInputFilters</code>
      <code>testRemoveInputFilter</code>
    </MissingReturnType>
    <MixedArrayAccess occurrences="5">
      <code>$config['api-tools-content-validation']</code>
      <code>$config['input_filter_specs']</code>
      <code>$this-&gt;config['api-tools-content-validation']</code>
      <code>$this-&gt;config['input_filter_specs']</code>
      <code>$this-&gt;config['input_filter_specs']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$expected['input_filter_name']</code>
      <code>$expected['input_filter_name']</code>
      <code>$expected['input_filter_name']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="2">
      <code>$config['input_filter_specs'][$validator]</code>
      <code>$this-&gt;config['input_filter_specs'][$inputFilterKey]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="19">
      <code>$collection</code>
      <code>$config</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$expected</code>
      <code>$expected</code>
      <code>$expected</code>
      <code>$expected['input_filter_name']</code>
      <code>$expected['input_filter_name']</code>
      <code>$inputFilter</code>
      <code>$inputFilterKey</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$validator</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="21">
      <code>dequeue</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getCollection</code>
      <code>getEntity</code>
      <code>getEntity</code>
      <code>getStatusCode</code>
      <code>indexAction</code>
      <code>indexAction</code>
      <code>indexAction</code>
      <code>indexAction</code>
      <code>setEvent</code>
      <code>setEvent</code>
      <code>setEvent</code>
      <code>setEvent</code>
      <code>setPluginManager</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
    </MixedMethodCall>
    <MixedOperand occurrences="4">
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="3">
      <code>$result-&gt;payload</code>
      <code>$result-&gt;payload</code>
      <code>$result-&gt;payload</code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument occurrences="4">
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidMethodCall occurrences="8">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="8">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="15">
      <code>$this-&gt;assertEquals($expected, $entity-&gt;getArrayCopy())</code>
      <code>$this-&gt;assertEquals($expected, $entity-&gt;getArrayCopy())</code>
      <code>$this-&gt;assertEquals($expected, $inputFilter-&gt;getArrayCopy())</code>
      <code>$this-&gt;assertEquals(204, $result-&gt;getStatusCode())</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterCollection', $collection)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterEntity', $inputFilter)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Collection', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $payload)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\Http\Response', $result)</code>
    </ReservedWord>
    <UndefinedDocblockClass occurrences="4">
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
    </UndefinedDocblockClass>
    <UndefinedThisPropertyAssignment occurrences="7">
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;configFactory</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="8">
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="2">
      <code>include $this-&gt;basePath . '/module.config.php'</code>
      <code>include $this-&gt;basePath . '/module.config.php'</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Controller/ModuleConfigControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsModuleConfigControllerComposingConfigResourceFactory</code>
      <code>testLegacyFactoryReturnsModuleConfigControllerComposingConfigResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;configResourceFactory, 'configFactory', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;configResourceFactory, 'configFactory', $controller)</code>
      <code>$this-&gt;assertInstanceOf(ModuleConfigController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(ModuleConfigController::class, $controller)</code>
    </ReservedWord>
    <UndefinedClass occurrences="1">
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;configResourceFactory</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;configResourceFactory</code>
      <code>$this-&gt;configResourceFactory</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/ModuleCreationControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsModuleCreationController</code>
      <code>testLegacyFactoryReturnsModuleCreationController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'moduleModel', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'moduleModel', $controller)</code>
      <code>$this-&gt;assertInstanceOf(ModuleCreationController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(ModuleCreationController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/ModuleCreationControllerTest.php">
    <ArgumentTypeCoercion occurrences="5">
      <code>'Laminas\ApiTools\Admin\Model\ModuleEntity'</code>
      <code>'Laminas\ApiTools\ApiProblem\ApiProblemResponse'</code>
      <code>'Laminas\ApiTools\ContentNegotiation\ViewModel'</code>
      <code>'Laminas\ApiTools\Hal\Entity'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$moduleManager</code>
    </InvalidArgument>
    <MissingFile occurrences="1">
      <code>require 'module/Foo/Module.php'</code>
    </MissingFile>
    <MissingParamType occurrences="2">
      <code>$dir</code>
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>invalidRequestMethods</code>
      <code>removeDir</code>
      <code>setUp</code>
      <code>testProcessPutRequest</code>
      <code>testProcessWithInvalidRequestMethodReturnsApiProblemResponse</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$dir</code>
      <code>$dir</code>
      <code>$method</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$apiProblem</code>
      <code>$metadata</code>
      <code>$payload</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>apiEnableAction</code>
      <code>getApiProblem</code>
      <code>getEntity</code>
      <code>getEntity</code>
      <code>getName</code>
      <code>getVariable</code>
      <code>setRequest</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$apiProblem-&gt;status</code>
    </MixedPropertyFetch>
    <PossiblyInvalidMethodCall occurrences="2">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="2">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertEquals('Foo', $metadata-&gt;getName())</code>
      <code>$this-&gt;assertEquals(405, $apiProblem-&gt;status)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ModuleEntity', $payload-&gt;getEntity())</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ApiProblem\ApiProblemResponse', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ContentNegotiation\ViewModel', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Hal\Entity', $payload)</code>
    </ReservedWord>
    <UndefinedClass occurrences="1">
      <code>\Foo\Module</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleResource</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="1">
      <code>$this-&gt;controller</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/PackageControllerTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\ApiTools\ApiProblem\ApiProblemResponse'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="1">
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>invalidRequestMethods</code>
      <code>setUp</code>
      <code>testProcessGetRequestReturnsFile</code>
      <code>testProcessPostRequestReturnsToken</code>
      <code>testProcessWithInvalidRequestMethodReturnsApiProblemResponse</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$method</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$apiProblem</code>
      <code>$response</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="19">
      <code>__destruct</code>
      <code>get</code>
      <code>get</code>
      <code>getApiProblem</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getRawBody</code>
      <code>indexAction</code>
      <code>indexAction</code>
      <code>indexAction</code>
      <code>isSuccess</code>
      <code>set</code>
      <code>set</code>
      <code>setEvent</code>
      <code>setRequest</code>
      <code>setRequest</code>
      <code>setRequest</code>
    </MixedMethodCall>
    <MixedOperand occurrences="4">
      <code>$data['format']</code>
      <code>$data['token']</code>
      <code>$result['format']</code>
      <code>$result['token']</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="1">
      <code>$apiProblem-&gt;status</code>
    </MixedPropertyFetch>
    <PossiblyInvalidMethodCall occurrences="2">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="2">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertEquals($content, $response-&gt;getRawBody())</code>
      <code>$this-&gt;assertEquals('application/octet-stream', $response-&gt;getHeaders()-&gt;get('Content-Type')-&gt;getFieldValue())</code>
      <code>$this-&gt;assertEquals(405, $apiProblem-&gt;status)</code>
      <code>$this-&gt;assertEquals(strlen($content), $response-&gt;getHeaders()-&gt;get('Content-Length')-&gt;getFieldValue())</code>
      <code>$this-&gt;assertFalse(file_exists($package))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ApiProblem\ApiProblemResponse', $result)</code>
      <code>$this-&gt;assertInternalType('array', $result)</code>
      <code>$this-&gt;assertTrue($response-&gt;isSuccess())</code>
      <code>$this-&gt;assertTrue(file_exists($package))</code>
      <code>$this-&gt;assertTrue(isset($result['format']))</code>
      <code>$this-&gt;assertTrue(isset($result['token']))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;plugins</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
      <code>$this-&gt;controller</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/SourceControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsSourceController</code>
      <code>testLegacyFactoryReturnsSourceController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'moduleModel', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'moduleModel', $controller)</code>
      <code>$this-&gt;assertInstanceOf(SourceController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(SourceController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/SourceControllerTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Laminas\ApiTools\ApiProblem\View\ApiProblemModel'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$moduleManager</code>
    </InvalidArgument>
    <MissingParamType occurrences="1">
      <code>$method</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>invalidRequestMethods</code>
      <code>setUp</code>
      <code>testProcessGetRequest</code>
      <code>testProcessWithInvalidRequestMethodReturnsApiProblemModel</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$method</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$apiProblem</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>getApiProblem</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>getVariable</code>
      <code>setRequest</code>
      <code>sourceAction</code>
    </MixedMethodCall>
    <MixedPropertyAssignment occurrences="2">
      <code>$request-&gt;getQuery()</code>
      <code>$request-&gt;getQuery()</code>
    </MixedPropertyAssignment>
    <MixedPropertyFetch occurrences="3">
      <code>$apiProblem-&gt;status</code>
      <code>$request-&gt;getQuery()-&gt;class</code>
      <code>$request-&gt;getQuery()-&gt;module</code>
    </MixedPropertyFetch>
    <NoInterfaceProperties occurrences="2">
      <code>$request-&gt;getQuery()-&gt;class</code>
      <code>$request-&gt;getQuery()-&gt;module</code>
    </NoInterfaceProperties>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertEquals($result-&gt;getVariable('class'), $request-&gt;getQuery()-&gt;class)</code>
      <code>$this-&gt;assertEquals($result-&gt;getVariable('module'), $request-&gt;getQuery()-&gt;module)</code>
      <code>$this-&gt;assertEquals(405, $apiProblem-&gt;status)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\ApiProblem\View\ApiProblemModel', $result)</code>
      <code>$this-&gt;assertTrue($result-&gt;getVariable('file') != '')</code>
      <code>$this-&gt;assertTrue($result-&gt;getVariable('source') != '')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;controller</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleResource</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="1">
      <code>$this-&gt;controller</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/StrategyControllerFactoryTest.php">
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsStrategyController</code>
      <code>testLegacyFactoryReturnsStrategyController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container</code>
    </MixedArgument>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="2">
      <code>$this-&gt;assertInstanceOf(StrategyController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(StrategyController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Controller/TestAsset/ConfigWriter.php">
    <MissingPropertyType occurrences="2">
      <code>$writtenConfig</code>
      <code>$writtenFilename</code>
    </MissingPropertyType>
  </file>
  <file src="test/Controller/VersioningControllerFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testInvokableFactoryReturnsVersioningController</code>
      <code>testLegacyFactoryReturnsVersioningController</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="1">
      <code>reveal</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'modelFactory', $controller)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;model, 'modelFactory', $controller)</code>
      <code>$this-&gt;assertInstanceOf(VersioningController::class, $controller)</code>
      <code>$this-&gt;assertInstanceOf(VersioningController::class, $controller)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/InputFilter/Authentication/BasicInputFilterTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="7">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
      <code>$this-&gt;htpasswd</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="1">
      <code>$data['htpasswd']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="4">
      <code>$data['htpasswd']</code>
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="6">
      <code>getMessages</code>
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($filter-&gt;getMessages(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messageKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid(), var_export($filter-&gt;getMessages(), 1))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;htpasswd</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;htpasswd</code>
      <code>$this-&gt;htpasswd</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/InputFilter/Authentication/DigestInputFilterTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="7">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$data['htdigest']</code>
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
      <code>$this-&gt;htdigest</code>
      <code>$this-&gt;htdigest</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$data['htdigest']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="2">
      <code>$data['htdigest']</code>
      <code>$data['htdigest']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="4">
      <code>$data['htdigest']</code>
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="6">
      <code>getMessages</code>
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($filter-&gt;getMessages(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messageKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid(), var_export($filter-&gt;getMessages(), 1))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;htdigest</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;htdigest</code>
      <code>$this-&gt;htdigest</code>
      <code>$this-&gt;htdigest</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/InputFilter/Authentication/OAuth2InputFilterTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="6">
      <code>getMessages</code>
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($filter-&gt;getMessages(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messageKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid(), var_export($filter-&gt;getMessages(), 1))</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/AuthorizationInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$messages</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$data</code>
    </MixedArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($messages, $filter-&gt;getMessages())</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/ContentNegotiationInputFilterTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$messages</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$data</code>
    </MixedArgument>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($filter-&gt;getMessages(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($messages, $filter-&gt;getMessages())</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid(), var_export($filter-&gt;getMessages(), 1))</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/CreateContentNegotiationInputFilterTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$messages</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$data</code>
      <code>$data</code>
    </MixedArgument>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($filter-&gt;getMessages(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($messages, $filter-&gt;getMessages())</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid(), var_export($filter-&gt;getMessages(), 1))</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/DbAdapterInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messageKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/DocumentationInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$messages</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedAssignment occurrences="2">
      <code>$filter</code>
      <code>$filter</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($messages, $filter-&gt;getMessages())</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/InputFilterInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$messages</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>setup</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$validationMessages</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$messages['inputFilter']</code>
      <code>$validationMessages['inputFilter']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$validationMessages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertArrayHasKey('inputFilter', $validationMessages)</code>
      <code>$this-&gt;assertContains($messages['inputFilter'], $validationMessages['inputFilter'])</code>
      <code>$this-&gt;assertFalse($this-&gt;inputFilterInputFilter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($this-&gt;inputFilterInputFilter-&gt;isValid())</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;inputFilterInputFilter</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;inputFilterInputFilter</code>
      <code>$this-&gt;inputFilterInputFilter</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/InputFilter/ModuleInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messageKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/RestService/PatchInputFilterTest.php">
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedInvalidKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsValidFalse</code>
      <code>dataProviderIsValidTrue</code>
      <code>getInputFilter</code>
      <code>testIsValidFalse</code>
      <code>testIsValidTrue</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedInvalidKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="6">
      <code>getMessages</code>
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($filter-&gt;getMessages(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedInvalidKeys, $testKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid(), var_export($filter-&gt;getMessages(), 1))</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/RestService/PostInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedValidationKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsValidFalse</code>
      <code>testIsValidTrue</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedValidationKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedValidationKeys, $messages)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/RpcService/PatchInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messages)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/RpcService/PostInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messages)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/Validator/ModuleNameTest.php">
    <MissingParamType occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>invalidModuleNames</code>
      <code>testInvalidModuleName</code>
      <code>testValidModuleName</code>
      <code>validModuleNames</code>
    </MissingReturnType>
    <ReservedWord occurrences="2">
      <code>$this-&gt;assertFalse($validator-&gt;isValid($name))</code>
      <code>$this-&gt;assertTrue($validator-&gt;isValid($name))</code>
    </ReservedWord>
  </file>
  <file src="test/InputFilter/VersionInputFilterTest.php">
    <MissingParamType occurrences="3">
      <code>$data</code>
      <code>$data</code>
      <code>$expectedMessageKeys</code>
    </MissingParamType>
    <MissingReturnType occurrences="5">
      <code>dataProviderIsInvalid</code>
      <code>dataProviderIsValid</code>
      <code>getInputFilter</code>
      <code>testIsInvalid</code>
      <code>testIsValid</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$expectedMessageKeys</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$filter</code>
      <code>$filter</code>
      <code>$messages</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getMessages</code>
      <code>isValid</code>
      <code>isValid</code>
      <code>setData</code>
      <code>setData</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertEquals($expectedMessageKeys, $messageKeys)</code>
      <code>$this-&gt;assertFalse($filter-&gt;isValid())</code>
      <code>$this-&gt;assertTrue($filter-&gt;isValid())</code>
    </ReservedWord>
  </file>
  <file src="test/Listener/CryptFilterListenerTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Laminas\Http\Request'</code>
      <code>'Laminas\Stdlib\RequestInterface'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;request</code>
    </InvalidArgument>
    <MissingReturnType occurrences="11">
      <code>initRequestMethod</code>
      <code>initRouteMatch</code>
      <code>setUp</code>
      <code>testReturnsNullIfNoContentNegotiationParameterDataPresent</code>
      <code>testReturnsNullIfParameterDataDoesNotContainFilters</code>
      <code>testReturnsNullIfRequestIsNotAnHttpRequest</code>
      <code>testReturnsNullIfRequestMethodIsNotPut</code>
      <code>testReturnsNullIfRouteMatchDoesNotContainMatchingController</code>
      <code>testReturnsNullIfRouteMatchesAreNull</code>
      <code>testReturnsTrueIfProcessesParameterData</code>
      <code>testUpdatesParameterDataIfAnyCompressionOrEncryptionFiltersDetected</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$filter</code>
      <code>$filter</code>
      <code>$filter['options']</code>
      <code>$this-&gt;getRouteMatchClass()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$data['filters']</code>
      <code>$filter['name']</code>
      <code>$filter['options']</code>
      <code>$filter['options']</code>
      <code>$filter['options']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="3">
      <code>$data</code>
      <code>$filter</code>
      <code>$filters</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="29">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>getParam</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>onRoute</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setRequest</code>
      <code>setRouteMatch</code>
      <code>setRouteMatch</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$filter['name']</code>
    </MixedOperand>
    <ReservedWord occurrences="14">
      <code>$this-&gt;assertArrayHasKey('adapter', $filter['options'])</code>
      <code>$this-&gt;assertArrayHasKey('name', $filter)</code>
      <code>$this-&gt;assertArrayHasKey('options', $filter)</code>
      <code>$this-&gt;assertEquals('BlockCipher', $filter['options']['adapter'])</code>
      <code>$this-&gt;assertEquals('Gz', $filter['options']['adapter'])</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertTrue($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;assertTrue($this-&gt;listener-&gt;onRoute($this-&gt;event))</code>
      <code>$this-&gt;fail('Unrecognized filter: ' . $filter['name'])</code>
    </ReservedWord>
    <TooManyArguments occurrences="1">
      <code>disableOriginalConstructor</code>
    </TooManyArguments>
    <UndefinedThisPropertyAssignment occurrences="4">
      <code>$this-&gt;event</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="21">
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Listener/DisableHttpCacheListenerTest.php">
    <MissingClosureParamType occurrences="6">
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="6">
      <code>setUp</code>
      <code>testListenerDoesNothingIfNoRouteMatchPresent</code>
      <code>testListenerDoesNothingIfRequestIsNotAGetOrHeadRequest</code>
      <code>testListenerDoesNothingIfRouteMatchNotForAdminApi</code>
      <code>testListenerInjectsCacheBustHeadersForGetRequests</code>
      <code>testListenerInjectsCacheBustHeadersForHeadRequests</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;getRouteMatchClass()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="73">
      <code>addHeader</code>
      <code>addHeader</code>
      <code>addHeader</code>
      <code>addHeader</code>
      <code>addHeader</code>
      <code>addHeader</code>
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>getHeaders</code>
      <code>getHeaders</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getRequest</code>
      <code>getRequest</code>
      <code>getRequest</code>
      <code>getRequest</code>
      <code>getRequest</code>
      <code>getResponse</code>
      <code>getResponse</code>
      <code>getResponse</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>isGet</code>
      <code>isGet</code>
      <code>isGet</code>
      <code>isHead</code>
      <code>isHead</code>
      <code>isHead</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <ReservedWord occurrences="5">
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="5">
      <code>$this-&gt;event</code>
      <code>$this-&gt;headers</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;response</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="17">
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;headers</code>
      <code>$this-&gt;headers</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;request</code>
      <code>$this-&gt;response</code>
      <code>$this-&gt;response</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Listener/EnableHalRenderCollectionsListenerTest.php">
    <MissingReturnType occurrences="5">
      <code>setUp</code>
      <code>testListenerDoesNothingIfEventHasNoRouteMatch</code>
      <code>testListenerDoesNothingIfRouteMatchControllerParamDoesNotMatchAdminNamespace</code>
      <code>testListenerDoesNothingIfRouteMatchHasNoControllerParam</code>
      <code>testListenerEnablesCollectionRenderingOnHalPluginWhenControllerMatchesAdminNamespace</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;getRouteMatchClass()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="34">
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getTarget</code>
      <code>getTarget</code>
      <code>getTarget</code>
      <code>getTarget</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;event</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="7">
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Listener/InjectModuleResourceLinksListenerFactoryTest.php">
    <DeprecatedMethod occurrences="1">
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="1">
      <code>testFactoryReturnsTheListenerWithViewHelpersContainerComposed</code>
    </MissingReturnType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="2">
      <code>$this-&gt;assertAttributeSame($viewHelpers, 'viewHelpers', $listener)</code>
      <code>$this-&gt;assertInstanceOf(InjectModuleResourceLinksListener::class, $listener)</code>
    </ReservedWord>
  </file>
  <file src="test/Listener/InjectModuleResourceLinksListenerTest.php">
    <DeprecatedMethod occurrences="4">
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="3">
      <code>! $links-&gt;reveal() === $entity-&gt;getLinks()</code>
      <code>! $links-&gt;reveal() === $entity-&gt;getLinks()</code>
      <code>! $links-&gt;reveal() === $entity-&gt;getLinks()</code>
    </DocblockTypeContradiction>
    <MissingClosureParamType occurrences="9">
      <code>$args</code>
      <code>$args</code>
      <code>$args</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$halEntity</code>
      <code>$halEntity</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="3">
      <code>function (...$args) {</code>
      <code>function (...$args) {</code>
      <code>function (...$args) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="9">
      <code>$entity</code>
      <code>$entity</code>
      <code>$entityType</code>
      <code>$entityType</code>
      <code>$id</code>
      <code>$id</code>
      <code>$listener</code>
      <code>$serviceType</code>
      <code>$serviceType</code>
    </MissingParamType>
    <MissingReturnType occurrences="21">
      <code>initRequiredConditions</code>
      <code>inputFilterEntitiesForOnRenderEntity</code>
      <code>serviceEntities</code>
      <code>serviceEntitiesForOnRenderEntity</code>
      <code>setUp</code>
      <code>testInjectsModuleEntityWithModuleResourceRelationalLinksAndAttachesRenderEntityListener</code>
      <code>testListenerDoesNothingIfEventHasNoRouteMatch</code>
      <code>testListenerDoesNothingIfResultIsNotAHalJsonModel</code>
      <code>testMemoizesRouteMatchAndAttachesRenderCollectionEntityListener</code>
      <code>testOnHalRenderEventsExitsEarlyIfNoRouteMatchPresentInListener</code>
      <code>testOnHalRenderEventsExitsEarlyIfRouteMatchDoesNotContainControllerServiceName</code>
      <code>testOnHalRenderEventsUpdatesControllerServiceNameInRouteMatch</code>
      <code>testOnRenderCollectionEntityDoesNothingForUnknownEntityType</code>
      <code>testOnRenderCollectionEntityInjectsServiceRelationalLinks</code>
      <code>testOnRenderCollectionEntityNormalizesInputFilterEntityName</code>
      <code>testOnRenderCollectionEntityReplacesModuleEntityWithHalEntityContainingRelationalLinks</code>
      <code>testOnRenderEntityInjectsLinksBasedOnInputFilterName</code>
      <code>testOnRenderEntityInjectsLinksBasedOnServiceName</code>
      <code>testRegistersAlternateUrlHelperAndAttachesHalPluginListenersIfHalJsonModelDetected</code>
      <code>testUpdatesInputFilterEntityWithNormalizedInputFilterNameAndAttachesRenderEntityListener</code>
      <code>testUpdatesServiceEntityWithNormalizedControllerNameAndAttachesRenderEntityListener</code>
    </MissingReturnType>
    <MixedArgument occurrences="12">
      <code>$entity</code>
      <code>$entity</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$serviceType</code>
      <code>$this-&gt;getRouteMatchClass()</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$entity['input_filter_name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="10">
      <code>$helper</code>
      <code>$helper</code>
      <code>$helper</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="7">
      <code>$listener($this-&gt;event-&gt;reveal())</code>
      <code>$listener($this-&gt;event-&gt;reveal())</code>
      <code>$listener($this-&gt;event-&gt;reveal())</code>
      <code>$listener($this-&gt;event-&gt;reveal())</code>
      <code>$listener($this-&gt;event-&gt;reveal())</code>
      <code>$listener($this-&gt;event-&gt;reveal())</code>
      <code>$listener($this-&gt;event-&gt;reveal())</code>
    </MixedFunctionCall>
    <MixedMethodCall occurrences="150">
      <code>attach</code>
      <code>attach</code>
      <code>attach</code>
      <code>attach</code>
      <code>attach</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>call</code>
      <code>exchangeArray</code>
      <code>exchangeArray</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>getEventManager</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getPayload</code>
      <code>getPayload</code>
      <code>getPayload</code>
      <code>getResult</code>
      <code>getResult</code>
      <code>getResult</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>injectSelfLink</code>
      <code>injectSelfLink</code>
      <code>isCollection</code>
      <code>isCollection</code>
      <code>isCollection</code>
      <code>isCollection</code>
      <code>isCollection</code>
      <code>isEntity</code>
      <code>isEntity</code>
      <code>isEntity</code>
      <code>isEntity</code>
      <code>isEntity</code>
      <code>new $entityType()</code>
      <code>new $entityType()</code>
      <code>onHalRenderEvents</code>
      <code>onHalRenderEvents</code>
      <code>onHalRenderEvents</code>
      <code>onRenderCollectionEntity</code>
      <code>onRenderCollectionEntity</code>
      <code>onRenderCollectionEntity</code>
      <code>onRenderCollectionEntity</code>
      <code>onRenderEntity</code>
      <code>onRenderEntity</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setPayload</code>
      <code>setPayload</code>
      <code>setPayload</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$serviceType</code>
    </MixedOperand>
    <PossiblyInvalidPropertyFetch occurrences="1">
      <code>$foundEntity-&gt;controllerServiceName</code>
    </PossiblyInvalidPropertyFetch>
    <ReservedWord occurrences="20">
      <code>$this-&gt;assertAttributeEmpty('urlHelper', $listener)</code>
      <code>$this-&gt;assertAttributeEmpty('urlHelper', $listener)</code>
      <code>$this-&gt;assertAttributeInstanceOf(Closure::class, 'urlHelper', $listener)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;routeMatch-&gt;reveal(), 'routeMatch', $listener)</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onHalRenderEvents($event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onHalRenderEvents($event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onHalRenderEvents($event))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRenderCollectionEntity($event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRenderCollectionEntity($event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRenderCollectionEntity($event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRenderCollectionEntity($event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRenderEntity($event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($this-&gt;listener-&gt;onRenderEntity($event-&gt;reveal()))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="9">
      <code>$this-&gt;event</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;hal</code>
      <code>$this-&gt;helpers</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;serverUrlHelper</code>
      <code>$this-&gt;urlHelper</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="55">
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;hal</code>
      <code>$this-&gt;hal</code>
      <code>$this-&gt;hal</code>
      <code>$this-&gt;helpers</code>
      <code>$this-&gt;helpers</code>
      <code>$this-&gt;helpers</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;listener</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;result</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;serverUrlHelper</code>
      <code>$this-&gt;serverUrlHelper</code>
      <code>$this-&gt;serverUrlHelper</code>
      <code>$this-&gt;urlHelper</code>
      <code>$this-&gt;urlHelper</code>
      <code>$this-&gt;urlHelper</code>
      <code>$this-&gt;urlHelper</code>
      <code>$this-&gt;urlHelper</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Listener/NormalizeMatchedControllerServiceNameListenerTest.php">
    <MissingReturnType occurrences="4">
      <code>setUp</code>
      <code>testListenerDoesNothingIfEventHasNoRouteMatch</code>
      <code>testListenerDoesNothingIfRouteMatchHasNoControllerServiceName</code>
      <code>testListenerReplacesDashesWithBackslashesInMatchedControllerServiceName</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;getRouteMatchClass()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="22">
      <code>getParam</code>
      <code>getParam</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;event</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="5">
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Listener/NormalizeMatchedInputFilterNameListenerTest.php">
    <MissingReturnType occurrences="4">
      <code>setUp</code>
      <code>testListenerDoesNothingIfEventHasNoRouteMatch</code>
      <code>testListenerDoesNothingIfRouteMatchHasNoInputFilterName</code>
      <code>testListenerReplacesDashesWithBackslashesInMatchedInputFilterName</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;event-&gt;reveal()</code>
      <code>$this-&gt;getRouteMatchClass()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="22">
      <code>getParam</code>
      <code>getParam</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
      <code>$this-&gt;assertNull($listener($this-&gt;event-&gt;reveal()))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;event</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="5">
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;event</code>
      <code>$this-&gt;routeMatch</code>
      <code>$this-&gt;routeMatch</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/AbstractPluginManagerModelTest.php">
    <MissingPropertyType occurrences="3">
      <code>$model</code>
      <code>$namespace</code>
      <code>$plugins</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>setUp</code>
      <code>testFetchAllReturnsListOfAvailablePlugins</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$services</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$service</code>
      <code>$services</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>fetchAll</code>
    </MixedMethodCall>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertContains($this-&gt;namespace, $service)</code>
      <code>$this-&gt;assertGreaterThan(0, count($services))</code>
    </ReservedWord>
  </file>
  <file src="test/Model/AuthenticationEntityTest.php">
    <DeprecatedMethod occurrences="15">
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEmpty</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="11">
      <code>testCanSetBasicParametersDuringInstantiation</code>
      <code>testCanSetDigestParametersDuringInstantiation</code>
      <code>testCanSetOAuth2ParametersDuringInstantiation</code>
      <code>testCanSpecifyOauth2TypeDuringInstantiation</code>
      <code>testCanSpecifyRealmDuringInstantiation</code>
      <code>testCanSpecifyTypeDuringInstantiation</code>
      <code>testIsBasicByDefault</code>
      <code>testRealmHasADefaultValue</code>
      <code>testSerializationOfBasicAuthReturnsOnlyKeysSpecificToType</code>
      <code>testSerializationOfDigestAuthReturnsOnlyKeysSpecificToType</code>
      <code>testSerializationOfOauth2AuthReturnsOnlyKeysSpecificToType</code>
    </MissingReturnType>
    <ReservedWord occurrences="27">
      <code>$this-&gt;assertAttributeEmpty('htdigest', $entity)</code>
      <code>$this-&gt;assertAttributeEmpty('htdigest', $entity)</code>
      <code>$this-&gt;assertAttributeEmpty('htpasswd', $entity)</code>
      <code>$this-&gt;assertAttributeEmpty('htpasswd', $entity)</code>
      <code>$this-&gt;assertAttributeEmpty('realm', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('/api', 'digestDomains', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('/api/oauth', 'routeMatch', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('api', 'realm', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('laminascon', 'realm', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('me', 'username', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('sqlite::memory:', 'dsn', $entity)</code>
      <code>$this-&gt;assertAttributeEquals('too', 'password', $entity)</code>
      <code>$this-&gt;assertAttributeEquals(3600, 'nonceTimeout', $entity)</code>
      <code>$this-&gt;assertAttributeEquals(__DIR__ . '/htdigest', 'htdigest', $entity)</code>
      <code>$this-&gt;assertAttributeEquals(__DIR__ . '/htpasswd', 'htpasswd', $entity)</code>
      <code>$this-&gt;assertFalse($entity-&gt;isBasic())</code>
      <code>$this-&gt;assertFalse($entity-&gt;isBasic())</code>
      <code>$this-&gt;assertFalse($entity-&gt;isDigest())</code>
      <code>$this-&gt;assertFalse($entity-&gt;isDigest())</code>
      <code>$this-&gt;assertFalse($entity-&gt;isOAuth2())</code>
      <code>$this-&gt;assertFalse($entity-&gt;isOAuth2())</code>
      <code>$this-&gt;assertTrue($entity-&gt;isBasic())</code>
      <code>$this-&gt;assertTrue($entity-&gt;isDigest())</code>
      <code>$this-&gt;assertTrue($entity-&gt;isOAuth2())</code>
    </ReservedWord>
  </file>
  <file src="test/Model/AuthenticationModelFactoryTest.php">
    <DeprecatedMethod occurrences="7">
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfConfigServiceIsMissing</code>
      <code>testFactoryReturnsAuthenticationModelComposingConfigResourcesAndModuleModel</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$globalConfig</code>
      <code>$globalConfig</code>
      <code>$localConfig</code>
      <code>$localConfig</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$globalConfig</code>
      <code>$localConfig</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="12">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="9">
      <code>$this-&gt;assertAttributeEquals('config/autoload/global.php', 'fileName', $globalConfig)</code>
      <code>$this-&gt;assertAttributeEquals('config/autoload/local.php', 'fileName', $localConfig)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'globalConfig', $model)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'localConfig', $model)</code>
      <code>$this-&gt;assertAttributeSame($moduleModel, 'modules', $model)</code>
      <code>$this-&gt;assertAttributeSame($writer, 'writer', $globalConfig)</code>
      <code>$this-&gt;assertAttributeSame($writer, 'writer', $localConfig)</code>
      <code>$this-&gt;assertInstanceOf(AuthenticationModel::class, $model)</code>
      <code>$this-&gt;expectExceptionMessage('config service is not present')</code>
    </ReservedWord>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/AuthenticationModelTest.php">
    <ArgumentTypeCoercion occurrences="6">
      <code>'Laminas\ApiTools\Admin\Exception\InvalidArgumentException'</code>
      <code>'Laminas\ApiTools\Admin\Exception\InvalidArgumentException'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthenticationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthenticationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ModuleEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ModuleModel'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$moduleModel</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="2">
      <code>1</code>
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="23">
      <code>$authKey</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$key</code>
      <code>$key</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
    </MissingParamType>
    <MissingReturnType occurrences="34">
      <code>assertAuthenticationConfigContains</code>
      <code>assertAuthenticationConfigEquals</code>
      <code>assertAuthenticationConfigExists</code>
      <code>createConfigMocks</code>
      <code>createModelFromConfigArrays</code>
      <code>getAuthAdapters</code>
      <code>getDataForAuthAdapters</code>
      <code>getOldAuthenticationConfig</code>
      <code>removeConfigMocks</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddAuthenticationMap</code>
      <code>testAddInvalidAuthenticationMap</code>
      <code>testAttemptingToCreateOAuth2ConfigurationWithInvalidDsnRaisesException</code>
      <code>testAttemptingToCreateOAuth2ConfigurationWithInvalidMongoDsnRaisesException</code>
      <code>testAttemptingToUpdateOAuth2ConfigurationWithInvalidDsnRaisesException</code>
      <code>testCanRetrieveAuthenticationConfig</code>
      <code>testCreateAuthenticationAdapter</code>
      <code>testCreatesBothGlobalAndLocalConfigWhenNoneExistedPreviously</code>
      <code>testCreatingOAuth2ConfigurationWritesToEachConfigFile</code>
      <code>testCreatingOAuth2ConfigurationWritesToEachConfigFileForMongo</code>
      <code>testCustomAuthAdapters</code>
      <code>testFetchAllAuthenticationAdapter</code>
      <code>testFetchAuthenticationAdapter</code>
      <code>testGetAuthenticationMap</code>
      <code>testRemoveAuthenticationAdapter</code>
      <code>testRemoveAuthenticationMap</code>
      <code>testRemoveDeletesConfigurationFromBothLocalAndGlobalConfigFiles</code>
      <code>testRemovingOAuth2ConfigurationRemovesConfigurationFromEachFile</code>
      <code>testRemovingOAuth2MongoConfigurationRemovesConfigurationFromEachFile</code>
      <code>testTransformAuthPerApis</code>
      <code>testUpdateAuthenticationAdapter</code>
      <code>testUpdateAuthenticationMap</code>
      <code>testUpdatesGlobalAndLocalConfigWhenUpdating</code>
    </MissingReturnType>
    <MixedArgument occurrences="59">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config['api-tools-mvc-auth']</code>
      <code>$config['api-tools-mvc-auth']['authentication']</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global['api-tools-mvc-auth']['authentication']</code>
      <code>$global['router']</code>
      <code>$global['router']['routes']</code>
      <code>$global['router']['routes']</code>
      <code>$global['router']['routes']['oauth']</code>
      <code>$global['router']['routes']['oauth']['options']</code>
      <code>$key</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local['api-tools-mvc-auth']['authentication']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$model-&gt;fromOAuth2RegexToArray($config)</code>
      <code>$model-&gt;fromOAuth2RegexToArray($config)</code>
      <code>$model-&gt;fromOAuth2RegexToArray($config)</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>MongoClient::VERSION</code>
      <code>MongoClient::VERSION</code>
      <code>MongoClient::VERSION</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="44">
      <code>$adapter['oauth2_route']</code>
      <code>$config[$key]</code>
      <code>$config['api-tools-mvc-auth']['authentication']</code>
      <code>$config['api-tools-mvc-auth']['authentication']</code>
      <code>$config['api-tools-mvc-auth']['authentication']</code>
      <code>$data[2]</code>
      <code>$data[2]['oauth2_route']</code>
      <code>$global['api-tools-mvc-auth']</code>
      <code>$global['api-tools-mvc-auth']['authentication']</code>
      <code>$global['api-tools-mvc-auth']['authentication']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$global['router']</code>
      <code>$local['api-tools-mvc-auth']</code>
      <code>$local['api-tools-mvc-auth']['authentication']</code>
      <code>$local['api-tools-mvc-auth']['authentication']</code>
      <code>$local['api-tools-mvc-auth']['authentication']</code>
      <code>$local['api-tools-mvc-auth']['authentication']</code>
      <code>$local['api-tools-mvc-auth']['authentication']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$local['api-tools-oauth2']</code>
      <code>$result['name']</code>
      <code>$result['name']</code>
      <code>$result['name']</code>
      <code>$result[0]</code>
      <code>$result[0]['name']</code>
      <code>$result[1]</code>
      <code>$result[1]</code>
      <code>$result[1]['name']</code>
      <code>$result[2]['name']</code>
      <code>$result[3]['name']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$data[2]</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="2">
      <code>$config['api-tools-mvc-auth']['authentication'][$authKey]</code>
      <code>$config['api-tools-mvc-auth']['authentication'][$key]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="60">
      <code>$adapter</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$data</code>
      <code>$data</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$name</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="45">
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>createAuthenticationAdapter</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetchAllAuthenticationAdapter</code>
      <code>fetchAllAuthenticationAdapter</code>
      <code>fetchAuthenticationAdapter</code>
      <code>fetchAuthenticationAdapter</code>
      <code>fromOAuth2RegexToArray</code>
      <code>fromOAuth2RegexToArray</code>
      <code>fromOAuth2RegexToArray</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>getAuthenticationMap</code>
      <code>remove</code>
      <code>remove</code>
      <code>removeAuthenticationAdapter</code>
      <code>removeAuthenticationMap</code>
      <code>removeAuthenticationMap</code>
      <code>saveAuthenticationMap</code>
      <code>saveAuthenticationMap</code>
      <code>saveAuthenticationMap</code>
      <code>saveAuthenticationMap</code>
      <code>toFile</code>
      <code>toFile</code>
      <code>transformAuthPerApis</code>
      <code>update</code>
      <code>update</code>
      <code>updateAuthenticationAdapter</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($global, 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="74">
      <code>$this-&gt;assertArrayHasKey($key, $config)</code>
      <code>$this-&gt;assertArrayHasKey($key, $config['api-tools-mvc-auth']['authentication'])</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-mvc-auth', $config)</code>
      <code>$this-&gt;assertArrayHasKey('authentication', $config['api-tools-mvc-auth'])</code>
      <code>$this-&gt;assertArrayHasKey('oauth', $global['router']['routes'])</code>
      <code>$this-&gt;assertArrayHasKey('options', $global['router']['routes']['oauth'])</code>
      <code>$this-&gt;assertArrayHasKey('route', $global['router']['routes']['oauth']['options'])</code>
      <code>$this-&gt;assertArrayHasKey('router', $global)</code>
      <code>$this-&gt;assertArrayHasKey('routes', $global['router'])</code>
      <code>$this-&gt;assertArrayNotHasKey('db', $local['api-tools-oauth2'])</code>
      <code>$this-&gt;assertArrayNotHasKey('http', $global['api-tools-mvc-auth']['authentication'])</code>
      <code>$this-&gt;assertArrayNotHasKey('http', $local['api-tools-mvc-auth']['authentication'])</code>
      <code>$this-&gt;assertArrayNotHasKey('oauth', $global['router']['routes'])</code>
      <code>$this-&gt;assertArrayNotHasKey('storage', $local['api-tools-oauth2'])</code>
      <code>$this-&gt;assertEquals($adapter, $result)</code>
      <code>$this-&gt;assertEquals($data[2], $result)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $entity-&gt;getArrayCopy())</code>
      <code>$this-&gt;assertEquals($expected, $entity-&gt;getArrayCopy())</code>
      <code>$this-&gt;assertEquals($global['api-tools-mvc-auth']['authentication']['map']['Foo'], $result)</code>
      <code>$this-&gt;assertEquals($global['api-tools-mvc-auth']['authentication']['map']['Status\V1'], $result)</code>
      <code>$this-&gt;assertEquals($name, $model-&gt;transformAuthPerApis())</code>
      <code>$this-&gt;assertEquals($name, $result['name'])</code>
      <code>$this-&gt;assertEquals($result['name'], $model-&gt;getAuthenticationMap('Foo', 1))</code>
      <code>$this-&gt;assertEquals($result['name'], $model-&gt;getAuthenticationMap('Foo', 2))</code>
      <code>$this-&gt;assertEquals($value, $config[$key])</code>
      <code>$this-&gt;assertEquals('/oauth', $result[1]['route'])</code>
      <code>$this-&gt;assertEquals('custom', $result[0]['oauth2_type'])</code>
      <code>$this-&gt;assertEquals('custom', $result[1]['type'])</code>
      <code>$this-&gt;assertEquals('oauth2', $result['type'])</code>
      <code>$this-&gt;assertEquals('test1', $model-&gt;getAuthenticationMap('Foo'))</code>
      <code>$this-&gt;assertEquals('test1', $model-&gt;getAuthenticationMap('User', 1))</code>
      <code>$this-&gt;assertEquals('test1', $result[0]['name'])</code>
      <code>$this-&gt;assertEquals('test2', $result[1]['name'])</code>
      <code>$this-&gt;assertEquals('test3', $result['name'])</code>
      <code>$this-&gt;assertEquals('test3', $result[2]['name'])</code>
      <code>$this-&gt;assertEquals('test4', $model-&gt;getAuthenticationMap('Status', 1))</code>
      <code>$this-&gt;assertEquals('test4', $result[3]['name'])</code>
      <code>$this-&gt;assertEquals(4, count($result))</code>
      <code>$this-&gt;assertFalse($model-&gt;fetch())</code>
      <code>$this-&gt;assertFalse($model-&gt;getAuthenticationMap('Foo'))</code>
      <code>$this-&gt;assertFalse($model-&gt;getAuthenticationMap('Status', 1))</code>
      <code>$this-&gt;assertFalse($result)</code>
      <code>$this-&gt;assertFalse($result)</code>
      <code>$this-&gt;assertFalse(isset($global['router']['routes']['oauth']))</code>
      <code>$this-&gt;assertFalse(isset($local['router']['routes']['oauth']))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthenticationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthenticationEntity', $entity)</code>
      <code>$this-&gt;assertTrue(! isset($config['api-tools-mvc-auth']['authentication']['adapters']['test4']))</code>
      <code>$this-&gt;assertTrue(! isset($config['api-tools-mvc-auth']['authentication']['map']['Foo']))</code>
      <code>$this-&gt;assertTrue(! isset($config['api-tools-mvc-auth']['authentication']['map']['Status\V1']))</code>
      <code>$this-&gt;assertTrue($model-&gt;removeAuthenticationAdapter('test4'))</code>
      <code>$this-&gt;assertTrue($model-&gt;removeAuthenticationMap('Foo'))</code>
      <code>$this-&gt;assertTrue($model-&gt;removeAuthenticationMap('Status', 1))</code>
      <code>$this-&gt;assertTrue($model-&gt;saveAuthenticationMap('test1', 'Foo'))</code>
      <code>$this-&gt;assertTrue($model-&gt;saveAuthenticationMap('test1', 'User', 1))</code>
      <code>$this-&gt;assertTrue($model-&gt;saveAuthenticationMap('test4', 'Status', 1))</code>
      <code>$this-&gt;assertTrue(in_array($adapter['oauth2_route'], $model-&gt;fromOAuth2RegexToArray($config)))</code>
      <code>$this-&gt;assertTrue(in_array($data[2]['oauth2_route'], $model-&gt;fromOAuth2RegexToArray($config)))</code>
      <code>$this-&gt;assertTrue(is_array($result))</code>
      <code>$this-&gt;assertTrue(is_array($result))</code>
      <code>$this-&gt;assertTrue(is_array($result))</code>
      <code>$this-&gt;assertTrue(is_array($result))</code>
      <code>$this-&gt;expectExceptionCode(422)</code>
      <code>$this-&gt;expectExceptionCode(422)</code>
      <code>$this-&gt;expectExceptionMessage('DSN')</code>
      <code>$this-&gt;expectExceptionMessage('DSN')</code>
    </ReservedWord>
    <UndefinedClass occurrences="3">
      <code>MongoClient</code>
      <code>MongoClient</code>
      <code>MongoClient</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="4">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="28">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="20">
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/AuthorizationEntityTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Traversable'</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="9">
      <code>getSeedValuesForEntity</code>
      <code>testAddingARestServiceWithoutHttpMethodsProvidesDefaults</code>
      <code>testAddingAnRpcServiceWithoutHttpMethodsProvidesDefaults</code>
      <code>testCanAddARestServiceAtATime</code>
      <code>testCanAddAnRpcServiceAtATime</code>
      <code>testCanRetrieveNamedServices</code>
      <code>testEntityIsIterable</code>
      <code>testIteratingEntityReturnsAKeyForEachActionOfRpcController</code>
      <code>testIteratingEntityReturnsAKeyForEachOfRestEntityAndCollection</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$values</code>
      <code>$values</code>
      <code>$values</code>
    </MixedArgument>
    <MixedAssignment occurrences="18">
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$keys[]</code>
      <code>$keys[]</code>
      <code>$keys[]</code>
      <code>$keys[]</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
      <code>$values</code>
      <code>$values</code>
      <code>$values</code>
    </MixedAssignment>
    <ReservedWord occurrences="15">
      <code>$this-&gt;assertContains('Foo\V1\Rest\Session\Controller::__collection__', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rest\Session\Controller::__collection__', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rest\Session\Controller::__entity__', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rest\Session\Controller::__entity__', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rpc\Message\Controller::message', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rpc\Message\Controller::message', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rpc\Message\Controller::translate', $keys)</code>
      <code>$this-&gt;assertContains('Foo\V1\Rpc\Message\Controller::translate', $keys)</code>
      <code>$this-&gt;assertInstanceOf('Traversable', $entity)</code>
      <code>$this-&gt;assertTrue($entity-&gt;has('Foo\V1\Rest\Session\Controller::__entity__'))</code>
      <code>$this-&gt;assertTrue($entity-&gt;has('Foo\V1\Rpc\Message\Controller::message'))</code>
      <code>$this-&gt;assertTrue($entity-&gt;has('Foo\V1\Rpc\Message\Controller::message'))</code>
    </ReservedWord>
  </file>
  <file src="test/Model/AuthorizationModelFactoryFactoryTest.php">
    <DeprecatedMethod occurrences="3">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="4">
      <code>missingDependencies</code>
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfAnyDependenciesAreMissing</code>
      <code>testFactoryReturnsAuthorizatoinModelFactory</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$presence</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="16">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>will</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="5">
      <code>$this-&gt;assertAttributeSame($configResourceFactory-&gt;reveal(), 'configFactory', $modelFactory)</code>
      <code>$this-&gt;assertAttributeSame($moduleModel-&gt;reveal(), 'moduleModel', $modelFactory)</code>
      <code>$this-&gt;assertAttributeSame($modulePathSpec-&gt;reveal(), 'modules', $modelFactory)</code>
      <code>$this-&gt;assertInstanceOf(AuthorizationModelFactory::class, $modelFactory)</code>
      <code>$this-&gt;expectExceptionMessage('missing one or more dependencies')</code>
    </ReservedWord>
    <UndefinedClass occurrences="9">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/AuthorizationModelTest.php">
    <ArgumentTypeCoercion occurrences="7">
      <code>'Laminas\ApiTools\Admin\Model\AuthorizationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthorizationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthorizationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthorizationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthorizationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\AuthorizationEntity'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <MissingParamType occurrences="1">
      <code>$module</code>
    </MissingParamType>
    <MissingReturnType occurrences="12">
      <code>assertDefaultPrivileges</code>
      <code>cleanUpAssets</code>
      <code>mapConfigToPayload</code>
      <code>mapEntityToConfig</code>
      <code>setUpModel</code>
      <code>tearDown</code>
      <code>testAccuratelyRepresentsExistingPrivileges</code>
      <code>testCanUpdatePrivileges</code>
      <code>testFetchAcceptsVersionAndReturnsAuthorizationListByVersion</code>
      <code>testFetchReturnsEmptyAuthorizationEntityWhenNoServicesPresent</code>
      <code>testFetchReturnsPopulatedAuthorizationEntityWhenServicesArePresent</code>
      <code>testUsesIndexAsActionForRpcServicesIfActionCannotBeDetermined</code>
    </MissingReturnType>
    <MixedArgument occurrences="15">
      <code>$action</code>
      <code>$config['api-tools-mvc-auth']['authorization']</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$spec</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="7">
      <code>$config['api-tools-mvc-auth']</code>
      <code>$config['api-tools-mvc-auth']</code>
      <code>$config['api-tools-mvc-auth']</code>
      <code>$newPrivileges[$serviceName]</code>
      <code>$value['actions']</code>
      <code>$value['collection']</code>
      <code>$value['entity']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="3">
      <code>$newPrivileges[$serviceName]</code>
      <code>$normalized[$matches['service']]['actions'][$matches['action']]</code>
      <code>$normalized[$matches['service']]['actions']['index']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="1">
      <code>$newPrivileges[$serviceName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="35">
      <code>$action</code>
      <code>$actual[]</code>
      <code>$actual[]</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config[$newKey]</code>
      <code>$config[$newKey]</code>
      <code>$config[$newKey]</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$expected</code>
      <code>$flag</code>
      <code>$method</code>
      <code>$newPrivileges</code>
      <code>$normalized[$matches['service']][$type]</code>
      <code>$normalized[$matches['service']]['actions'][$matches['action']]</code>
      <code>$normalized[$matches['service']]['actions']['index']</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$privileges</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$serviceName</code>
      <code>$spec</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="14">
      <code>factory</code>
      <code>factory</code>
      <code>factory</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>getArrayCopy</code>
      <code>has</code>
      <code>update</code>
    </MixedMethodCall>
    <ReservedWord occurrences="17">
      <code>$this-&gt;assertEquals($config, $entity)</code>
      <code>$this-&gt;assertEquals($expected, $actual)</code>
      <code>$this-&gt;assertEquals($expected, $actual)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($newPrivileges, $entity-&gt;getArrayCopy())</code>
      <code>$this-&gt;assertEquals(0, count($entity))</code>
      <code>$this-&gt;assertEquals(6, count($entity))</code>
      <code>$this-&gt;assertEquals(6, count($entity))</code>
      <code>$this-&gt;assertEquals(9, count($entity))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthorizationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthorizationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthorizationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthorizationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthorizationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\AuthorizationEntity', $entity)</code>
      <code>$this-&gt;assertTrue($entity-&gt;has('AuthConfDefaults\V1\Rpc\Bat\Controller::index'))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="7">
      <code>$this-&gt;model</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="11">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ContentNegotiationModelFactoryTest.php">
    <DeprecatedMethod occurrences="4">
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfConfigServiceIsMissing</code>
      <code>testFactoryReturnsConfiguredContentNegotiationModel</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="16">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>shouldNotBeCalled</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertAttributeEquals('config/autoload/global.php', 'fileName', $config)</code>
      <code>$this-&gt;assertAttributeEquals([], 'config', $config)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'globalConfig', $model)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;writer, 'writer', $config)</code>
      <code>$this-&gt;assertInstanceOf(ContentNegotiationModel::class, $model)</code>
      <code>$this-&gt;expectExceptionMessage('config service is not present')</code>
    </ReservedWord>
    <UndefinedClass occurrences="3">
      <code>ConfigWriter</code>
      <code>ConfigWriter</code>
      <code>\ZF\Configuration\ConfigWriter</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ContentNegotiationResourceFactoryTest.php">
    <DeprecatedMethod occurrences="1">
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfContentNegotiationModelIsNotInContainer</code>
      <code>testFactoryReturnsConfiguredContentNegotiationResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="10">
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertAttributeSame($model, 'model', $resource)</code>
      <code>$this-&gt;assertInstanceOf(ContentNegotiationResource::class, $resource)</code>
      <code>$this-&gt;expectExceptionMessage(ContentNegotiationModel::class . ' service is not present')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ContentNegotiationResourceTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Laminas\ApiTools\Admin\Model\ContentNegotiationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ContentNegotiationEntity'</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="7">
      <code>createConfigMocks</code>
      <code>createModelFromConfigArray</code>
      <code>createResourceFromConfigArray</code>
      <code>removeConfigMocks</code>
      <code>setUp</code>
      <code>testCreateShouldAcceptContentNameAndReturnNewEntity</code>
      <code>testUpdateShouldAcceptContentNameAndSelectorsAndReturnUpdatedEntity</code>
    </MissingReturnType>
    <MixedArgument occurrences="12">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;createModelFromConfigArray($global)</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$resource</code>
      <code>$resource</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>create</code>
      <code>create</code>
      <code>patch</code>
      <code>setInputFilter</code>
      <code>setInputFilter</code>
      <code>setInputFilter</code>
      <code>toFile</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="3">
      <code>$entity-&gt;config</code>
      <code>$entity-&gt;name</code>
      <code>$entity-&gt;name</code>
    </MixedPropertyFetch>
    <ReservedWord occurrences="5">
      <code>$this-&gt;assertEquals($data['selectors'], $entity-&gt;config)</code>
      <code>$this-&gt;assertEquals('Test', $entity-&gt;name)</code>
      <code>$this-&gt;assertEquals('Test', $entity-&gt;name)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ContentNegotiationEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ContentNegotiationEntity', $entity)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="6">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ContentNegotiationTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Laminas\ApiTools\Admin\Model\ContentNegotiationEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ContentNegotiationEntity'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="2">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="3">
      <code>$contentName</code>
      <code>$contentName</code>
      <code>$contentName</code>
    </MissingParamType>
    <MissingReturnType occurrences="13">
      <code>assertContentConfigContains</code>
      <code>assertContentConfigEquals</code>
      <code>assertContentConfigExists</code>
      <code>createConfigMocks</code>
      <code>createModelFromConfigArray</code>
      <code>removeConfigMocks</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCreateContentNegotiation</code>
      <code>testFetchAllContentNegotiation</code>
      <code>testFetchContentNegotiation</code>
      <code>testRemoveContentNegotiation</code>
      <code>testUpdateContentNegotiation</code>
    </MissingReturnType>
    <MixedArgument occurrences="21">
      <code>$arrayCopy</code>
      <code>$arrayCopy</code>
      <code>$config</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']['selectors']</code>
      <code>$contentName</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global['api-tools-content-negotiation']['selectors']</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="8">
      <code>$arrayCopy['content_name']</code>
      <code>$arrayCopy['selectors']</code>
      <code>$config[$key]</code>
      <code>$config['api-tools-content-negotiation']['selectors']</code>
      <code>$config['api-tools-content-negotiation']['selectors']</code>
      <code>$config['api-tools-content-negotiation']['selectors']</code>
      <code>$config['api-tools-content-negotiation']['selectors']</code>
      <code>$global['api-tools-content-negotiation']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="3">
      <code>$config['api-tools-content-negotiation']['selectors'][$contentName]</code>
      <code>$config['api-tools-content-negotiation']['selectors'][$contentName]</code>
      <code>$config['api-tools-content-negotiation']['selectors'][$contentName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="16">
      <code>$arrayCopy</code>
      <code>$config</code>
      <code>$config</code>
      <code>$content</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$result</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="12">
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>fetch</code>
      <code>fetchAll</code>
      <code>getArrayCopy</code>
      <code>remove</code>
      <code>toFile</code>
      <code>update</code>
    </MixedMethodCall>
    <ReservedWord occurrences="15">
      <code>$this-&gt;assertArrayHasKey($contentName, $config['api-tools-content-negotiation']['selectors'])</code>
      <code>$this-&gt;assertArrayHasKey($key, $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-content-negotiation', $config)</code>
      <code>$this-&gt;assertArrayHasKey('content_name', $arrayCopy)</code>
      <code>$this-&gt;assertArrayHasKey('selectors', $arrayCopy)</code>
      <code>$this-&gt;assertArrayHasKey('selectors', $config['api-tools-content-negotiation'])</code>
      <code>$this-&gt;assertArrayNotHasKey('Json', $global['api-tools-content-negotiation']['selectors'])</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($toCreate, $arrayCopy['selectors'])</code>
      <code>$this-&gt;assertEquals($value, $config[$key])</code>
      <code>$this-&gt;assertEquals('Json', $arrayCopy['content_name'])</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ContentNegotiationEntity', $content)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ContentNegotiationEntity', $value)</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-content-negotiation']['selectors'][$contentName])</code>
      <code>$this-&gt;assertInternalType('array', $result)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="10">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="4">
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/DbAdapterModelFactoryTest.php">
    <DeprecatedMethod occurrences="6">
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfConfigServiceIsMissing</code>
      <code>testFactoryReturnsDbAdapterModelComposingConfigResources</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$globalConfig</code>
      <code>$globalConfig</code>
      <code>$localConfig</code>
      <code>$localConfig</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$globalConfig</code>
      <code>$localConfig</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="8">
      <code>$this-&gt;assertAttributeEquals('config/autoload/global.php', 'fileName', $globalConfig)</code>
      <code>$this-&gt;assertAttributeEquals('config/autoload/local.php', 'fileName', $localConfig)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'globalConfig', $model)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'localConfig', $model)</code>
      <code>$this-&gt;assertAttributeSame($writer, 'writer', $globalConfig)</code>
      <code>$this-&gt;assertAttributeSame($writer, 'writer', $localConfig)</code>
      <code>$this-&gt;assertInstanceOf(DbAdapterModel::class, $model)</code>
      <code>$this-&gt;expectExceptionMessage('config service is not present')</code>
    </ReservedWord>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/DbAdapterModelTest.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>'Laminas\ApiTools\Admin\Model\DbAdapterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbAdapterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbAdapterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbAdapterEntity'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="5">
      <code>$adapterName</code>
      <code>$adapterName</code>
      <code>$adapterName</code>
      <code>$driver</code>
      <code>$driver</code>
    </MissingParamType>
    <MissingReturnType occurrences="18">
      <code>assertDbConfigContains</code>
      <code>assertDbConfigEquals</code>
      <code>assertDbConfigExists</code>
      <code>createConfigMocks</code>
      <code>createModelFromConfigArrays</code>
      <code>postgresDbTypes</code>
      <code>removeConfigMocks</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCanRetrieveIndividualAdapterDetails</code>
      <code>testCanRetrieveListOfAllConfiguredAdapters</code>
      <code>testCreateDoesNotCreateEmptyDsnEntry</code>
      <code>testCreatesBothGlobalAndLocalDbConfigWhenNoneExistedPreviously</code>
      <code>testCreatesNewEntriesInBothGlobalAndLocalDbConfigWhenConfigExistedPreviously</code>
      <code>testCreatingPostgresConfigDoesNotIncludeCharset</code>
      <code>testRemoveDeletesConfigurationFromBothLocalAndGlobalConfigFiles</code>
      <code>testUpdatesLocalDbConfigWhenUpdating</code>
      <code>testUpdatingPostgresConfigDoesNotAllowCharset</code>
    </MissingReturnType>
    <MixedArgument occurrences="30">
      <code>$adapterName</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config['db']</code>
      <code>$config['db']['adapters']</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global['db']['adapters']</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local['db']['adapters']</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="10">
      <code>$adapter['adapter_name']</code>
      <code>$adapter['adapter_name']</code>
      <code>$adapter['adapter_name']</code>
      <code>$config[$key]</code>
      <code>$config['db']['adapters']</code>
      <code>$config['db']['adapters']</code>
      <code>$config['db']['adapters']</code>
      <code>$config['db']['adapters']</code>
      <code>$global['db']</code>
      <code>$local['db']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="3">
      <code>$config['db']['adapters'][$adapterName]</code>
      <code>$config['db']['adapters'][$adapterName]</code>
      <code>$config['db']['adapters'][$adapterName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="33">
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapter</code>
      <code>$adapterNames[]</code>
      <code>$adapters</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$global</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$local</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$model</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="18">
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>fetch</code>
      <code>fetchAll</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>remove</code>
      <code>toFile</code>
      <code>toFile</code>
      <code>update</code>
      <code>update</code>
    </MixedMethodCall>
    <ReservedWord occurrences="18">
      <code>$this-&gt;assertArrayHasKey($adapterName, $config['db']['adapters'])</code>
      <code>$this-&gt;assertArrayHasKey($key, $config)</code>
      <code>$this-&gt;assertArrayHasKey('adapters', $config['db'])</code>
      <code>$this-&gt;assertArrayHasKey('db', $config)</code>
      <code>$this-&gt;assertArrayNotHasKey('Db\New', $global['db']['adapters'])</code>
      <code>$this-&gt;assertArrayNotHasKey('Db\New', $local['db']['adapters'])</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $entity)</code>
      <code>$this-&gt;assertEquals($expected, $entity)</code>
      <code>$this-&gt;assertEquals($localSeedConfig['db']['adapters']['Db\New'], $adapter)</code>
      <code>$this-&gt;assertEquals($value, $config[$key])</code>
      <code>$this-&gt;assertEquals('Db\New', $adapter['adapter_name'])</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbAdapterEntity', $adapter)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbAdapterEntity', $adapter)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbAdapterEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbAdapterEntity', $entity)</code>
      <code>$this-&gt;assertInternalType('array', $config['db']['adapters'][$adapterName])</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="4">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="20">
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configPath</code>
      <code>$this-&gt;configWriter</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;globalConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
      <code>$this-&gt;localConfigPath</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="11">
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;globalConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
      <code>include $this-&gt;localConfigPath</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/DbAdapterResourceFactoryTest.php">
    <DeprecatedMethod occurrences="1">
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfDbAdapterModelIsNotInContainer</code>
      <code>testFactoryReturnsConfiguredDbAdapterResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="10">
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertAttributeSame($model, 'model', $resource)</code>
      <code>$this-&gt;assertInstanceOf(DbAdapterResource::class, $resource)</code>
      <code>$this-&gt;expectExceptionMessage(DbAdapterModel::class . ' service is not present')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/DbAutodiscoveryModelFactoryTest.php">
    <DeprecatedMethod occurrences="1">
      <code>assertAttributeEquals</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfConfigServiceIsMissing</code>
      <code>testFactoryReturnsDbAutodiscoveryModelComposingConfigAndContainer</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>WriterInterface::class</code>
    </MixedArgument>
    <MixedMethodCall occurrences="9">
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertAttributeEquals([], 'config', $model)</code>
      <code>$this-&gt;assertInstanceOf(DbAutodiscoveryModel::class, $model)</code>
      <code>$this-&gt;expectExceptionMessage('config service is not present')</code>
    </ReservedWord>
    <UndefinedClass occurrences="1">
      <code>WriterInterface</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/DbConnectedRestServiceModelTest.php">
    <ArgumentTypeCoercion occurrences="6">
      <code>'BarConf\V1\Rest\Barbaz\BarbazEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity'</code>
      <code>'ReflectionClass'</code>
    </ArgumentTypeCoercion>
    <InvalidScalarArgument occurrences="2">
      <code>1</code>
      <code>1</code>
    </InvalidScalarArgument>
    <MissingFile occurrences="7">
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/src/BarConf/V1/Rest/Barbaz/BarbazEntity.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="18">
      <code>cleanUpAssets</code>
      <code>getCreationPayload</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCreateServiceDoesNotCreateResourceClass</code>
      <code>testCreateServiceReturnsDbConnectedRestServiceEntity</code>
      <code>testCreateServiceWithUnderscoreInNameNormalizesClassNamesToCamelCase</code>
      <code>testCreateServiceWritesDbConnectedConfigurationUsingResourceClassAsKey</code>
      <code>testCreateServiceWritesHalConfigurationWithHydrator</code>
      <code>testCreateServiceWritesRestConfigurationWithEntityAndCollectionClass</code>
      <code>testDeleteServiceRecursive</code>
      <code>testDeleteServiceRemovesDbConnectedConfigurationForEntity</code>
      <code>testEntityCreatedViaCreateServiceIsAnArrayObjectExtension</code>
      <code>testOnFetchWillRecastEntityToDbConnectedIfDbConnectedConfigurationExists</code>
      <code>testOnFetchWillRetainResourceClassIfEventFetchFlagIsFalse</code>
      <code>testUpdateServiceReturnsUpdatedDbConnectedRestServiceEntity</code>
      <code>testUpdateServiceUpdatesDbConnectedConfiguration</code>
      <code>testUpdateServiceUpdatesEntityIdentifierNameAndHydrator</code>
    </MissingReturnType>
    <MixedArgument occurrences="37">
      <code>$asArray</code>
      <code>$asArray</code>
      <code>$asArray</code>
      <code>$asArray</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-rest']</code>
      <code>$halConfig</code>
      <code>$originalEntity-&gt;resourceClass</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$restConfig</code>
      <code>$restConfig</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;entityClass</code>
      <code>$result-&gt;resourceClass</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="33">
      <code>$asArray[$key]</code>
      <code>$asArray[$key]</code>
      <code>$asArray[$key]</code>
      <code>$asArray['resource_class']</code>
      <code>$asArray['table_service']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$halConfig['hydrator']</code>
      <code>$resourceConfig['adapter_name']</code>
      <code>$resourceConfig['controller_service_name']</code>
      <code>$resourceConfig['entity_identifier_name']</code>
      <code>$resourceConfig['hydrator_name']</code>
      <code>$resourceConfig['hydrator_name']</code>
      <code>$resourceConfig['hydrator_name']</code>
      <code>$resourceConfig['table_name']</code>
      <code>$resourceConfig['table_name']</code>
      <code>$resourceConfig['table_service']</code>
      <code>$restConfig['collection_class']</code>
      <code>$restConfig['entity_class']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="3">
      <code>$config['api-tools']['db-connected'][$result-&gt;resourceClass]</code>
      <code>$config['api-tools-hal']['metadata_map'][$result-&gt;entityClass]</code>
      <code>$config['api-tools-rest'][$result-&gt;controllerServiceName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="37">
      <code>$asArray</code>
      <code>$asArray</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$halConfig</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$originalEntity</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$resourceConfig</code>
      <code>$restConfig</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="25">
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>deleteService</code>
      <code>deleteService</code>
      <code>exchangeArray</code>
      <code>exchangeArray</code>
      <code>exchangeArray</code>
      <code>exchangeArray</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>onFetch</code>
      <code>onFetch</code>
      <code>updateService</code>
      <code>updateService</code>
      <code>updateService</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$entity-&gt;resourceClass</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="27">
      <code>$originalEntity-&gt;resourceClass</code>
      <code>$result-&gt;adapterName</code>
      <code>$result-&gt;collectionClass</code>
      <code>$result-&gt;collectionClass</code>
      <code>$result-&gt;collectionClass</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;entityClass</code>
      <code>$result-&gt;entityClass</code>
      <code>$result-&gt;entityClass</code>
      <code>$result-&gt;entityClass</code>
      <code>$result-&gt;hydratorName</code>
      <code>$result-&gt;hydratorName</code>
      <code>$result-&gt;hydratorName</code>
      <code>$result-&gt;resourceClass</code>
      <code>$result-&gt;resourceClass</code>
      <code>$result-&gt;resourceClass</code>
      <code>$result-&gt;resourceClass</code>
      <code>$result-&gt;routeName</code>
      <code>$result-&gt;routeName</code>
      <code>$result-&gt;tableName</code>
      <code>$result-&gt;tableName</code>
      <code>$result-&gt;tableService</code>
      <code>$result-&gt;tableService</code>
      <code>$result-&gt;tableService</code>
    </MixedPropertyFetch>
    <PossiblyNullArgument occurrences="2">
      <code>var_export($asArray, 1)</code>
      <code>var_export($asArray, 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="75">
      <code>$this-&gt;assertArrayHasKey($key, $asArray)</code>
      <code>$this-&gt;assertArrayHasKey($key, $asArray)</code>
      <code>$this-&gt;assertArrayHasKey($result-&gt;controllerServiceName, $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey($result-&gt;entityClass, $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey($result-&gt;resourceClass, $config['api-tools']['db-connected'])</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\V1\Rest\Barbaz\BarbazResource', $config['api-tools']['db-connected'])</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\V1\Rest\Barbaz\BarbazResource', $config['api-tools']['db-connected'])</code>
      <code>$this-&gt;assertArrayHasKey('adapter_name', $resourceConfig)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-rest', $config)</code>
      <code>$this-&gt;assertArrayHasKey('collection_class', $restConfig)</code>
      <code>$this-&gt;assertArrayHasKey('controller_service_name', $resourceConfig)</code>
      <code>$this-&gt;assertArrayHasKey('db-connected', $config['api-tools'])</code>
      <code>$this-&gt;assertArrayHasKey('db-connected', $config['api-tools'])</code>
      <code>$this-&gt;assertArrayHasKey('db-connected', $config['api-tools'])</code>
      <code>$this-&gt;assertArrayHasKey('db-connected', $config['api-tools'])</code>
      <code>$this-&gt;assertArrayHasKey('entity_class', $restConfig)</code>
      <code>$this-&gt;assertArrayHasKey('hydrator', $halConfig)</code>
      <code>$this-&gt;assertArrayHasKey('hydrator_name', $resourceConfig)</code>
      <code>$this-&gt;assertArrayHasKey('hydrator_name', $resourceConfig)</code>
      <code>$this-&gt;assertArrayHasKey('metadata_map', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertArrayHasKey('resource_class', $asArray)</code>
      <code>$this-&gt;assertArrayHasKey('table_name', $resourceConfig)</code>
      <code>$this-&gt;assertArrayHasKey('table_name', $resourceConfig)</code>
      <code>$this-&gt;assertArrayHasKey('table_service', $asArray)</code>
      <code>$this-&gt;assertArrayHasKey('table_service', $resourceConfig)</code>
      <code>$this-&gt;assertArrayNotHasKey($originalEntity-&gt;resourceClass, $config['api-tools']['db-connected'])</code>
      <code>$this-&gt;assertEquals($entity-&gt;resourceClass . '\\Table', $asArray['table_service'])</code>
      <code>$this-&gt;assertEquals($newProps['adapter_name'], $resourceConfig['adapter_name'])</code>
      <code>$this-&gt;assertEquals($newProps['adapter_name'], $result-&gt;adapterName)</code>
      <code>$this-&gt;assertEquals($newProps['entity_identifier_name'], $resourceConfig['entity_identifier_name'])</code>
      <code>$this-&gt;assertEquals($newProps['hydrator_name'], $resourceConfig['hydrator_name'])</code>
      <code>$this-&gt;assertEquals($newProps['hydrator_name'], $resourceConfig['hydrator_name'])</code>
      <code>$this-&gt;assertEquals($newProps['hydrator_name'], $result-&gt;hydratorName)</code>
      <code>$this-&gt;assertEquals($newProps['table_service'], $resourceConfig['table_service'])</code>
      <code>$this-&gt;assertEquals($newProps['table_service'], $result-&gt;tableService)</code>
      <code>$this-&gt;assertEquals($result-&gt;collectionClass, $restConfig['collection_class'])</code>
      <code>$this-&gt;assertEquals($result-&gt;controllerServiceName, $resourceConfig['controller_service_name'])</code>
      <code>$this-&gt;assertEquals($result-&gt;entityClass, $restConfig['entity_class'])</code>
      <code>$this-&gt;assertEquals($result-&gt;hydratorName, $halConfig['hydrator'])</code>
      <code>$this-&gt;assertEquals($result-&gt;hydratorName, $resourceConfig['hydrator_name'])</code>
      <code>$this-&gt;assertEquals($value, $asArray[$key])</code>
      <code>$this-&gt;assertEquals('ArrayObject', $parent-&gt;getName())</code>
      <code>$this-&gt;assertEquals('BarConf\Rest\Barbaz\BarbazResource', $asArray['resource_class'])</code>
      <code>$this-&gt;assertEquals('BarConf\Rest\Barbaz\BarbazResource', $result-&gt;resourceClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\BarBaz\BarBazCollection', $result-&gt;collectionClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\BarBaz\BarBazEntity', $result-&gt;entityClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\BarBaz\BarBazResource', $result-&gt;resourceClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\BarBaz\BarBazResource\Table', $result-&gt;tableService)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\BarBaz\Controller', $result-&gt;controllerServiceName)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Barbaz\BarbazCollection', $result-&gt;collectionClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Barbaz\BarbazEntity', $result-&gt;entityClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Barbaz\BarbazResource', $result-&gt;resourceClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Barbaz\BarbazResource\Table', $result-&gt;tableService)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Barbaz\Controller', $result-&gt;controllerServiceName)</code>
      <code>$this-&gt;assertEquals('bar-conf.rest.bar-baz', $result-&gt;routeName)</code>
      <code>$this-&gt;assertEquals('bar-conf.rest.barbaz', $result-&gt;routeName)</code>
      <code>$this-&gt;assertEquals('bar_baz', $result-&gt;tableName)</code>
      <code>$this-&gt;assertEquals('barbaz', $resourceConfig['table_name'])</code>
      <code>$this-&gt;assertEquals('barbaz', $resourceConfig['table_name'])</code>
      <code>$this-&gt;assertEquals('barbaz', $result-&gt;tableName)</code>
      <code>$this-&gt;assertFalse(file_exists($barbazPath))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('ReflectionClass', $parent)</code>
      <code>$this-&gt;assertTrue(file_exists($barbazPath))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="8">
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="15">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;module</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/DoctrineAdapterEntityTest.php">
    <MissingReturnType occurrences="2">
      <code>testCanRepresentAnOdmEntity</code>
      <code>testCanRepresentAnOrmEntity</code>
    </MissingReturnType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertArrayHasKey('adapter_name', $serialized)</code>
      <code>$this-&gt;assertArrayHasKey('adapter_name', $serialized)</code>
      <code>$this-&gt;assertEquals('doctrine.documentmanager.test', $serialized['adapter_name'])</code>
      <code>$this-&gt;assertEquals('doctrine.entitymanager.test', $serialized['adapter_name'])</code>
    </ReservedWord>
  </file>
  <file src="test/Model/DoctrineAdapterModelFactoryTest.php">
    <DeprecatedMethod occurrences="6">
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeInstanceOf</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfConfigServiceIsMissing</code>
      <code>testFactoryReturnsDoctrineAdapterModelComposingConfigResources</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$globalConfig</code>
      <code>$globalConfig</code>
      <code>$localConfig</code>
      <code>$localConfig</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$globalConfig</code>
      <code>$localConfig</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="10">
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="8">
      <code>$this-&gt;assertAttributeEquals('config/autoload/doctrine.global.php', 'fileName', $globalConfig)</code>
      <code>$this-&gt;assertAttributeEquals('config/autoload/doctrine.local.php', 'fileName', $localConfig)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'globalConfig', $model)</code>
      <code>$this-&gt;assertAttributeInstanceOf(ConfigResource::class, 'localConfig', $model)</code>
      <code>$this-&gt;assertAttributeSame($writer, 'writer', $globalConfig)</code>
      <code>$this-&gt;assertAttributeSame($writer, 'writer', $localConfig)</code>
      <code>$this-&gt;assertInstanceOf(DoctrineAdapterModel::class, $model)</code>
      <code>$this-&gt;expectExceptionMessage('config service is not present')</code>
    </ReservedWord>
    <UndefinedClass occurrences="1">
      <code>ConfigWriter</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/DoctrineAdapterModelTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Laminas\ApiTools\Admin\Model\DoctrineAdapterEntity'</code>
      <code>'Laminas\Config\Writer\WriterInterface'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="4">
      <code>getGlobalConfig</code>
      <code>getLocalConfig</code>
      <code>getMockWriter</code>
      <code>testFetchAllReturnsMixOfOrmAndOdmAdapters</code>
    </MissingReturnType>
    <MixedArgument occurrences="7">
      <code>$data</code>
      <code>$data['adapter_name']</code>
      <code>$data['adapter_name']</code>
      <code>$this-&gt;getGlobalConfig()</code>
      <code>$this-&gt;getLocalConfig()</code>
      <code>$this-&gt;getMockWriter()</code>
      <code>$this-&gt;getMockWriter()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="4">
      <code>$data['adapter_name']</code>
      <code>$data['adapter_name']</code>
      <code>$data['adapter_name']</code>
      <code>$data['adapter_name']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$adapter</code>
      <code>$data</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getArrayCopy</code>
    </MixedMethodCall>
    <PossiblyInvalidIterator occurrences="1">
      <code>$adapters</code>
    </PossiblyInvalidIterator>
    <ReservedWord occurrences="5">
      <code>$this-&gt;assertArrayHasKey('adapter_name', $data)</code>
      <code>$this-&gt;assertContains('documentmanager', $data['adapter_name'])</code>
      <code>$this-&gt;assertContains('entitymanager', $data['adapter_name'])</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DoctrineAdapterEntity', $adapter)</code>
      <code>$this-&gt;assertInternalType('array', $adapters)</code>
    </ReservedWord>
  </file>
  <file src="test/Model/DoctrineAdapterResourceFactoryTest.php">
    <DeprecatedMethod occurrences="3">
      <code>assertAttributeEquals</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="3">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfDoctrineAdapterModelIsNotInContainer</code>
      <code>testFactoryReturnsConfiguredDoctrineAdapterResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="13">
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="5">
      <code>$this-&gt;assertAttributeSame($model, 'model', $resource)</code>
      <code>$this-&gt;assertAttributeSame($this-&gt;container-&gt;reveal(), 'serviceLocator', $resource)</code>
      <code>$this-&gt;assertInstanceOf(DoctrineAdapterResource::class, $resource)</code>
      <code>$this-&gt;expectExceptionMessage(DoctrineAdapterModel::class . ' service is not present')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/DocumentationModelTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\ApiTools\Configuration\ModuleUtils'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="2">
      <code>$mockModuleUtils</code>
      <code>$mockModuleUtils</code>
    </InvalidArgument>
    <MissingPropertyType occurrences="2">
      <code>$actualDocData</code>
      <code>$docModel</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>setup</code>
      <code>testFetchRestDocumentation</code>
    </MissingReturnType>
    <MixedArrayAccess occurrences="1">
      <code>$this-&gt;actualDocData['Doc\\V1\\Rest\\FooBar\\Controller']</code>
    </MixedArrayAccess>
    <MixedMethodCall occurrences="1">
      <code>fetchDocumentation</code>
    </MixedMethodCall>
    <ReservedWord occurrences="1"/>
  </file>
  <file src="test/Model/FiltersModelTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingPropertyType occurrences="1">
      <code>$config</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="4">
      <code>getConfig</code>
      <code>setUp</code>
      <code>testEachPluginIsAKeyArrayPair</code>
      <code>testFetchAllReturnsListOfAvailablePlugins</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$allConfig</code>
      <code>$filters</code>
      <code>$service</code>
      <code>$this-&gt;config</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$allConfig['filter_metadata']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="7">
      <code>$allConfig</code>
      <code>$filters</code>
      <code>$filters</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$service</code>
      <code>$service</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>fetchAll</code>
      <code>fetchAll</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($metadata, 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertContains('\\Filter\\', $service)</code>
      <code>$this-&gt;assertGreaterThan(0, count($filters))</code>
      <code>$this-&gt;assertInternalType('string', $service)</code>
      <code>$this-&gt;markTestSkipped('Cannot find module config file!')</code>
      <code>$this-&gt;markTestSkipped('Module config file does not contain filter_metadata!')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;model</code>
      <code>$this-&gt;plugins</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/HydratorsModelTest.php">
    <MissingReturnType occurrences="2">
      <code>setUp</code>
      <code>testFetchAllReturnsListOfAvailablePlugins</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$services</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$service</code>
      <code>$services</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>fetchAll</code>
    </MixedMethodCall>
    <ReservedWord occurrences="2">
      <code>$this-&gt;assertContains($this-&gt;namespace, $service)</code>
      <code>$this-&gt;assertGreaterThan(-1, count($services))</code>
    </ReservedWord>
  </file>
  <file src="test/Model/InputFilterModelTest.php">
    <ArgumentTypeCoercion occurrences="5">
      <code>'Laminas\ApiTools\Admin\Model\InputFilterCollection'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterEntity'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="2">
      <code>1</code>
      <code>1</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="8">
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAddInputFilterExistingController</code>
      <code>testAddInputFilterNewController</code>
      <code>testControllerExists</code>
      <code>testFetch</code>
      <code>testModuleExists</code>
      <code>testRemoveInputFilter</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$result</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="5">
      <code>$config['api-tools-content-validation']</code>
      <code>$inputFilter['foo']</code>
      <code>$result['bar']</code>
      <code>$result['bar']</code>
      <code>$this-&gt;config['input_filter_specs']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="5">
      <code>$config</code>
      <code>$inputFilter</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>controllerExists</code>
      <code>dequeue</code>
      <code>fetch</code>
      <code>moduleExists</code>
      <code>remove</code>
      <code>update</code>
      <code>update</code>
    </MixedMethodCall>
    <MixedOperand occurrences="4">
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
    </MixedOperand>
    <PossiblyNullArgument occurrences="2">
      <code>var_export($inputFilter, 1)</code>
      <code>var_export($result, 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="12">
      <code>$this-&gt;assertEquals($inputfilter['bar'], $result['bar'])</code>
      <code>$this-&gt;assertEquals(1, count($result))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterCollection', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterEntity', $inputFilter)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\InputFilterEntity', $result)</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;controllerExists('InputFilter', 'InputFilter\V1\Rest\Foo\Controller'))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;moduleExists('InputFilter'))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="6">
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;configFactory</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="9">
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;basePath</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="2">
      <code>include $this-&gt;basePath . '/module.config.php'</code>
      <code>include $this-&gt;basePath . '/module.config.php'</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/ModuleEntityTest.php">
    <MissingReturnType occurrences="1">
      <code>testCanSetAndRetrieveModuleDefaultVersion</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/ModuleModelFactoryTest.php">
    <DeprecatedMethod occurrences="3">
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="4">
      <code>setUp</code>
      <code>testFactoryCanConfigureShortArrayNotationFlag</code>
      <code>testFactoryRaisesExceptionForMissingModuleManagerInContainer</code>
      <code>testFactoryReturnsConfiguredModuleModel</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="21">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="7">
      <code>$this-&gt;assertAttributeEquals(array_keys($config['api-tools-rest']), 'restConfig', $model)</code>
      <code>$this-&gt;assertAttributeEquals(array_keys($config['api-tools-rpc']), 'rpcConfig', $model)</code>
      <code>$this-&gt;assertAttributeSame($moduleManager, 'moduleManager', $model)</code>
      <code>$this-&gt;assertInstanceOf(ModuleModel::class, $model)</code>
      <code>$this-&gt;assertInstanceOf(ModuleModel::class, $model)</code>
      <code>$this-&gt;assertTrue($flag, 'useShortArrayNotation flag was not enabled')</code>
      <code>$this-&gt;expectExceptionMessage('ModuleManager service is not present')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ModuleModelTest.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>'Exception'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="3">
      <code>$moduleManager</code>
      <code>$moduleManager</code>
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="8">
      <code>1</code>
      <code>1</code>
      <code>1</code>
      <code>1</code>
      <code>1</code>
      <code>1</code>
      <code>1</code>
      <code>1</code>
    </InvalidScalarArgument>
    <MissingParamType occurrences="5">
      <code>$module</code>
      <code>$modulePath</code>
      <code>$spec</code>
      <code>$version</code>
      <code>$version</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$modulePath</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="22">
      <code>getPathSpec</code>
      <code>invalidModules</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testAttemptingToCreateModuleThatAlreadyExistsRaises409Exception</code>
      <code>testCanRetrieveListOfAllApiToolsModulesAndTheirServices</code>
      <code>testCreateModulePSR4</code>
      <code>testDefaultApiVersionIsSetProperly</code>
      <code>testDeleteModule</code>
      <code>testDeleteModuleRecursively</code>
      <code>testEmptyArraysAreReturnedWhenGettingServicesForApiToolsModulesWithNoServices</code>
      <code>testEnabledModulesOnlyReturnsThoseThatImplementApiToolsProviderInterface</code>
      <code>testNullIsReturnedWhenGettingServicesForNonApiToolsModules</code>
      <code>testRestAndRpcControllersAreDiscoveredWhenGettingServicesForApiToolsModules</code>
      <code>testReturnFalseWhenTryingToCreateAModuleThatAlreadyExistsInConfiguration</code>
      <code>testUpdateExistingApiModule</code>
      <code>testUpdateModule</code>
      <code>testUpdateModuleWithOtherInterfaces</code>
      <code>testVendorModulesAreMarkedAccordingly</code>
      <code>testWritesShortArrayNotationToApplicationModulesConfigurationWhenRequested</code>
      <code>testWritesShortArrayNotationToNewModuleConfigurationWhenRequested</code>
      <code>testWritesToModuleConfigFileOnModuleCreationWhenModuleConfigFileExists</code>
    </MissingReturnType>
    <MixedArgument occurrences="16">
      <code>$config</code>
      <code>$config</code>
      <code>$modulePath</code>
      <code>$modules</code>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
      <code>$spec</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;modulePath</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['modules']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="1">
      <code>$expected[$name]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="21">
      <code>$config</code>
      <code>$config</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$moduleNames[]</code>
      <code>$modules</code>
      <code>$modules</code>
      <code>$modules</code>
      <code>$name</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$pathSpec</code>
      <code>$unique[]</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="35">
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>createModule</code>
      <code>deleteModule</code>
      <code>deleteModule</code>
      <code>getModule</code>
      <code>getModule</code>
      <code>getModule</code>
      <code>getModules</code>
      <code>getModules</code>
      <code>getNamespace</code>
      <code>getNamespace</code>
      <code>getNamespace</code>
      <code>getRestServices</code>
      <code>getRestServices</code>
      <code>getRestServices</code>
      <code>getRestServices</code>
      <code>getRpcServices</code>
      <code>getRpcServices</code>
      <code>getRpcServices</code>
      <code>getRpcServices</code>
      <code>isVendor</code>
      <code>isVendor</code>
      <code>setUseShortArrayNotation</code>
      <code>setUseShortArrayNotation</code>
      <code>updateModule</code>
      <code>updateModule</code>
      <code>updateModule</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="8">
      <code>var_export($config, 1)</code>
      <code>var_export($config, 1)</code>
      <code>var_export($expectedMetadata['rest'], 1)</code>
      <code>var_export($expectedMetadata['rpc'], 1)</code>
      <code>var_export($expectedMetadata['vendor'], 1)</code>
      <code>var_export($module-&gt;getRestServices(), 1)</code>
      <code>var_export($module-&gt;getRpcServices(), 1)</code>
      <code>var_export($module-&gt;isVendor(), 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="52">
      <code>$this-&gt;assertArrayHasKey('modules', $config, var_export($config, 1))</code>
      <code>$this-&gt;assertArrayHasKey('modules', $config, var_export($config, 1))</code>
      <code>$this-&gt;assertContains($module-&gt;getNamespace(), $expected)</code>
      <code>$this-&gt;assertContains('Foo', $modules)</code>
      <code>$this-&gt;assertContains('return [', $contents)</code>
      <code>$this-&gt;assertContains('return [', $contents)</code>
      <code>$this-&gt;assertEquals($expected['rest'], $module-&gt;getRestServices())</code>
      <code>$this-&gt;assertEquals($expected['rpc'], $module-&gt;getRpcServices())</code>
      <code>$this-&gt;assertEquals($moduleNames, $test)</code>
      <code>$this-&gt;assertEquals([], $module-&gt;getRestServices())</code>
      <code>$this-&gt;assertEquals([], $module-&gt;getRpcServices())</code>
      <code>$this-&gt;assertEquals(count($expected), count($modules))</code>
      <code>$this-&gt;assertFalse($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertFalse($this-&gt;model-&gt;updateModule($module))</code>
      <code>$this-&gt;assertInternalType('array', $modules)</code>
      <code>$this-&gt;assertNotContains($module, $config['modules'])</code>
      <code>$this-&gt;assertNotContains('array(', $contents)</code>
      <code>$this-&gt;assertNotContains('array(', $contents)</code>
      <code>$this-&gt;assertNull($this-&gt;model-&gt;getModule($module))</code>
      <code>$this-&gt;assertTrue($module-&gt;isVendor())</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec, $version))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;createModule($module, $pathSpec, $version))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;deleteModule($module, $modulePath, false))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;deleteModule($module, $modulePath, true))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;updateModule($module))</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;updateModule($module))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/Module.php"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/Module.php"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/config/module.config.php"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/config/module.config.php"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/src/$module/Module.php"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/src/$module/V$version/Rest"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/src/$module/V$version/Rpc"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/src/V$version/Rest"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/src/V$version/Rpc"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/view"))</code>
      <code>$this-&gt;assertTrue(file_exists("$modulePath/module/$module/view"))</code>
      <code>$this-&gt;assertTrue(file_exists(sprintf('%s/module/%s', $modulePath, $module)))</code>
      <code>$this-&gt;expectExceptionCode(409)</code>
      <code>$this-&gt;expectExceptionMessage('exists')</code>
      <code>$this-&gt;markTestSkipped('Running from a vendor directory.')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleManager</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="18">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleManager</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="3">
      <code>include "$modulePath/config/modules.config.php"</code>
      <code>include $modulePath . '/config/application.config.php'</code>
      <code>include $modulePath . '/config/application.config.php'</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/ModulePathSpecFactoryTest.php">
    <DeprecatedMethod occurrences="3">
      <code>assertAttributeEquals</code>
      <code>assertAttributeEquals</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="4">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfConfiguredModulePathIsNotADirectory</code>
      <code>testFactoryRaisesExceptionIfModuleUtilsServiceIsMissing</code>
      <code>testFactoryReturnsConfiguredModulePathSpec</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="23">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertAttributeEquals('%modulePath%/src', 'moduleSourcePathSpec', $pathSpec)</code>
      <code>$this-&gt;assertAttributeEquals(realpath(__DIR__), 'applicationPath', $pathSpec)</code>
      <code>$this-&gt;assertAttributeSame($moduleUtils, 'modules', $pathSpec)</code>
      <code>$this-&gt;assertInstanceOf(ModulePathSpec::class, $pathSpec)</code>
      <code>$this-&gt;expectExceptionMessage('Invalid module path')</code>
      <code>$this-&gt;expectExceptionMessage(ModuleUtils::class . ' service is not present')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ModulePathSpecTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'Laminas\ApiTools\Configuration\ModuleUtils'</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>\PHPUnit_Framework_MockObject_MockObject</code>
    </DeprecatedClass>
    <InvalidArgument occurrences="3">
      <code>$this-&gt;getModuleUtils()</code>
      <code>$this-&gt;getModuleUtils()</code>
      <code>$this-&gt;getModuleUtils()</code>
    </InvalidArgument>
    <InvalidReturnStatement occurrences="1">
      <code>$utils</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>\PHPUnit_Framework_MockObject_MockObject</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="3">
      <code>testApiPathsPsr0</code>
      <code>testApiPathsPsr4</code>
      <code>testDefaultValuesArePSR0</code>
    </MissingReturnType>
    <ReservedWord occurrences="18">
      <code>$this-&gt;assertEquals($basePath . 'Rest/', $pathSpec-&gt;getRestPath('ModuleName', 2))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rest/', $pathSpec-&gt;getRestPath('ModuleName', 2))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rest/ServiceName', $pathSpec-&gt;getRestPath('ModuleName', 2, 'ServiceName'))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rest/ServiceName', $pathSpec-&gt;getRestPath('ModuleName', 2, 'ServiceName'))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rpc/', $pathSpec-&gt;getRpcPath('ModuleName', 2))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rpc/', $pathSpec-&gt;getRpcPath('ModuleName', 2))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rpc/ServiceName', $pathSpec-&gt;getRpcPath('ModuleName', 2, 'ServiceName'))</code>
      <code>$this-&gt;assertEquals($basePath . 'Rpc/ServiceName', $pathSpec-&gt;getRpcPath('ModuleName', 2, 'ServiceName'))</code>
      <code>$this-&gt;assertEquals('.', $pathSpec-&gt;getApplicationPath())</code>
      <code>$this-&gt;assertEquals('/app/ModuleName', $pathSpec-&gt;getModulePath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('/app/ModuleName/config', $pathSpec-&gt;getModuleConfigPath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('/app/ModuleName/src/ModuleName', $pathSpec-&gt;getModuleSourcePath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('/app/ModuleName/src/ModuleName', $pathSpec-&gt;getModuleSourcePath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('/app/ModuleName/src/ModuleName/V1/Rest/', $pathSpec-&gt;getRestPath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('/app/ModuleName/src/ModuleName/V1/Rpc/', $pathSpec-&gt;getRpcPath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('/app/ModuleName/view', $pathSpec-&gt;getModuleViewPath('ModuleName'))</code>
      <code>$this-&gt;assertEquals('psr-0', $pathSpec-&gt;getPathSpec())</code>
    </ReservedWord>
  </file>
  <file src="test/Model/ModuleResourceFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="1">
      <code>testFactoryReturnsConfiguredModuleResource</code>
    </MissingReturnType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="3">
      <code>$this-&gt;assertAttributeSame($model, 'modules', $resource)</code>
      <code>$this-&gt;assertAttributeSame($pathSpec, 'modulePathSpec', $resource)</code>
      <code>$this-&gt;assertInstanceOf(ModuleResource::class, $resource)</code>
    </ReservedWord>
  </file>
  <file src="test/Model/ModuleResourceTest.php">
    <ArgumentTypeCoercion occurrences="8">
      <code>$moduleClass</code>
      <code>'Laminas\ApiTools\Admin\Model\ModuleEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ModuleEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ModuleEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\ModuleEntity'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="6">
      <code>$moduleManager</code>
      <code>$moduleManager</code>
      <code>$moduleManager</code>
      <code>$moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <InvalidStringClass occurrences="2">
      <code>new $moduleClass</code>
      <code>new $moduleClass</code>
    </InvalidStringClass>
    <MissingClosureParamType occurrences="1">
      <code>$class</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="8">
      <code>seedApplicationConfig</code>
      <code>setUp</code>
      <code>setupModuleAutoloader</code>
      <code>tearDown</code>
      <code>testCreateReturnsModuleWithSpecifiedVersion</code>
      <code>testCreateReturnsModuleWithVersion1</code>
      <code>testFetchModuleInjectsVersions</code>
      <code>testFetchNewlyCreatedModuleInjectsVersion</code>
    </MissingReturnType>
    <MixedArgument occurrences="5">
      <code>$class</code>
      <code>$class</code>
      <code>$modulePath</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;modulePath</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
      <code>$modulePath</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="8">
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>create</code>
      <code>getNamespace</code>
      <code>getNamespace</code>
      <code>getVersions</code>
      <code>getVersions</code>
    </MixedMethodCall>
    <MixedOperand occurrences="3">
      <code>$module-&gt;getNamespace()</code>
      <code>$module-&gt;getNamespace()</code>
      <code>$this-&gt;modulePath</code>
    </MixedOperand>
    <PossiblyUndefinedMethod occurrences="2">
      <code>getVersions</code>
      <code>getVersions</code>
    </PossiblyUndefinedMethod>
    <ReservedWord occurrences="8">
      <code>$this-&gt;assertEquals([1, 2, 3], $module-&gt;getVersions())</code>
      <code>$this-&gt;assertEquals([1], $module-&gt;getVersions())</code>
      <code>$this-&gt;assertEquals([1], $module-&gt;getVersions())</code>
      <code>$this-&gt;assertEquals([2], $module-&gt;getVersions())</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ModuleEntity', $module)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ModuleEntity', $module)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ModuleEntity', $module)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\ModuleEntity', $module)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="4">
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;resource</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="7">
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;modulePath</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ModuleVersioningModelFactoryFactoryTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="1">
      <code>$dependencies</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>missingDependencies</code>
      <code>setUp</code>
      <code>testFactoryRaisesExceptionWhenMissingDependencies</code>
      <code>testFactoryReturnsConfiguredModuleVersioningModelFactory</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$dependency</code>
      <code>$presence</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="12">
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($configResourceFactory, 'configFactory', $versioningFactory)</code>
      <code>$this-&gt;assertAttributeSame($pathSpec, 'moduleUtils', $versioningFactory)</code>
      <code>$this-&gt;assertInstanceOf(ModuleVersioningModelFactory::class, $versioningFactory)</code>
      <code>$this-&gt;expectExceptionMessage('missing one or more dependencies')</code>
    </ReservedWord>
    <UndefinedClass occurrences="5">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/RestServiceModelFactoryFactoryTest.php">
    <DeprecatedMethod occurrences="4">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="1">
      <code>$dependencies</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>missingDependencies</code>
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfDependenciesAreMissing</code>
      <code>testFactoryReturnsConfiguredRestServiceModelFactoryAndAttachesSharedListeners</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$dependency</code>
      <code>$presence</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="22">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>will</code>
      <code>will</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertAttributeSame($configResourceFactory, 'configFactory', $restFactory)</code>
      <code>$this-&gt;assertAttributeSame($moduleModel, 'moduleModel', $restFactory)</code>
      <code>$this-&gt;assertAttributeSame($pathSpec, 'modules', $restFactory)</code>
      <code>$this-&gt;assertAttributeSame($sharedEvents-&gt;reveal(), 'sharedEventManager', $restFactory)</code>
      <code>$this-&gt;assertInstanceOf(RestServiceModelFactory::class, $restFactory)</code>
      <code>$this-&gt;expectExceptionMessage('missing one or more dependencies')</code>
    </ReservedWord>
    <UndefinedClass occurrences="8">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>DoctrineRestServiceModel</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/RestServiceModelTest.php">
    <ArgumentTypeCoercion occurrences="17">
      <code>$resourceClass</code>
      <code>'Laminas\ApiTools\Admin\Exception\RuntimeException'</code>
      <code>'Laminas\ApiTools\Admin\Exception\RuntimeException'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Rest\Exception\CreationException'</code>
      <code>'Laminas\ApiTools\Rest\Exception\CreationException'</code>
      <code>'Laminas\ApiTools\Rest\Exception\CreationException'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
      <code>'ReflectionClass'</code>
      <code>'ReflectionClass'</code>
      <code>'ReflectionClass'</code>
      <code>'ReflectionClass'</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>new VersioningModel($this-&gt;resource-&gt;factory('BarConf'))</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="11">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>createVersion</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="2">
      <code>1</code>
      <code>1</code>
    </InvalidScalarArgument>
    <MissingClosureParamType occurrences="1">
      <code>$e</code>
    </MissingClosureParamType>
    <MissingFile occurrences="17">
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="48">
      <code>cleanUpAssets</code>
      <code>getCreationPayload</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCanCreateControllerServiceNameFromServiceName</code>
      <code>testCanCreateControllerServiceNameFromServiceNameSpace</code>
      <code>testCanDeleteAService</code>
      <code>testCanDeleteAServicePSR4</code>
      <code>testCanDeleteAServiceRecursive</code>
      <code>testCanDeleteAServiceRecursivePSR4</code>
      <code>testCanFetchServiceAfterCreation</code>
      <code>testCanRemoveAllHttpVerbsWhenUpdating</code>
      <code>testCanUpdateContentNegotiationConfigForExistingService</code>
      <code>testCanUpdateHalConfigForExistingService</code>
      <code>testCanUpdateHalConfigForExistingServiceAndProvideNewEntityAndCollectionClasses</code>
      <code>testCanUpdateRestConfigForExistingService</code>
      <code>testCanUpdateRouteForExistingService</code>
      <code>testCreateCollectionClassCreatesClassFileWithNamedCollectionClass</code>
      <code>testCreateCollectionClassReturnsClassNameCreated</code>
      <code>testCreateContentNegotiationConfigWritesContentNegotiationConfiguration</code>
      <code>testCreateEntityClassCreatesClassFileWithNamedEntityClass</code>
      <code>testCreateEntityClassReturnsClassNameCreated</code>
      <code>testCreateHalConfigWritesHalConfiguration</code>
      <code>testCreateResourceClassAddsInvokableToConfiguration</code>
      <code>testCreateResourceClassCreateFactory</code>
      <code>testCreateResourceClassCreatesClassFileWithNamedResourceClass</code>
      <code>testCreateResourceClassCreatesClassFileWithNamedResourceClassPSR4</code>
      <code>testCreateResourceClassReturnsClassNameCreated</code>
      <code>testCreateRestConfigWritesRestConfiguration</code>
      <code>testCreateRouteReturnsNewRouteName</code>
      <code>testCreateRouteWritesRouteConfiguration</code>
      <code>testCreateRouteWritesVersioningConfiguration</code>
      <code>testCreateServiceReturnsRestServiceEntityOnSuccess</code>
      <code>testCreateServiceUsesDefaultContentNegotiation</code>
      <code>testCreateServiceWithUrlAlreadyExist</code>
      <code>testDeletingAServiceRemovesAllRelatedConfigKeys</code>
      <code>testDeletingNewerVersionOfServiceDoesNotRemoveRouteOrVersioningConfiguration</code>
      <code>testFetchListenersCanReturnAlternateEntities</code>
      <code>testFetchServiceUsesEntityAndCollectionClassesDiscoveredInRestConfiguration</code>
      <code>testRejectInvalidRestServiceName1</code>
      <code>testRejectInvalidRestServiceName2</code>
      <code>testRejectInvalidRestServiceName3</code>
      <code>testServiceExistsThrowExceptionAndLeaveConfigAsIs</code>
      <code>testUpdateHalConfigShouldKeepExistingKeysIntact</code>
      <code>testUpdateHalConfigShouldNotRemoveIsCollectionKey</code>
      <code>testUpdateRestWillUpdateCollectionName</code>
      <code>testUpdateServiceReturnsUpdatedRepresentation</code>
      <code>testUpdateServiceWithUrlAlreadyExist</code>
    </MissingReturnType>
    <MixedArgument occurrences="122">
      <code>$collectionClass</code>
      <code>$collectionClass</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionName</code>
      <code>$collectionName</code>
      <code>$collectionName</code>
      <code>$collectionName</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config['accept_whitelist']</code>
      <code>$config['api-tools-content-negotiation']['accept_whitelist']</code>
      <code>$config['api-tools-content-negotiation']['content_type_whitelist']</code>
      <code>$config['api-tools-content-negotiation']['controllers']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['content_type_whitelist']</code>
      <code>$config['controllers']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']['routes']</code>
      <code>$config['router']['routes']</code>
      <code>$config['router']['routes']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']['factories']</code>
      <code>$details</code>
      <code>$details</code>
      <code>$entityClass</code>
      <code>$entityClass</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityName</code>
      <code>$entityName</code>
      <code>$entityName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;routeName</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$routeConfig</code>
      <code>$routeConfig['options']</code>
      <code>$routeName</code>
      <code>$routes</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$services</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;resource-&gt;factory('BarConf')</code>
      <code>$this-&gt;resource-&gt;factory('BazConf')</code>
      <code>$this-&gt;resource-&gt;factory('BazConf')</code>
      <code>$this-&gt;resource-&gt;factory('BazConf')</code>
      <code>$values</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="95">
      <code>$collectionConfig['is_collection']</code>
      <code>$collectionConfig['route_identifier_name']</code>
      <code>$collectionConfig['route_identifier_name']</code>
      <code>$collectionConfig['route_name']</code>
      <code>$collectionConfig['route_name']</code>
      <code>$config[$collectionName]</code>
      <code>$config[$collectionName]</code>
      <code>$config[$collectionName]</code>
      <code>$config[$collectionName]</code>
      <code>$config[$entityName]</code>
      <code>$config[$entityName]</code>
      <code>$config[$entityName]</code>
      <code>$config['BarConf\Rest\Foo\FooCollection']</code>
      <code>$config['BarConf\Rest\Foo\FooEntity']</code>
      <code>$config['accept_whitelist']</code>
      <code>$config['accept_whitelist']</code>
      <code>$config['accept_whitelist']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['content_type_whitelist']</code>
      <code>$config['content_type_whitelist']</code>
      <code>$config['content_type_whitelist']</code>
      <code>$config['controllers']</code>
      <code>$config['controllers']</code>
      <code>$config['controllers']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$entityConfig['entity_identifier_name']</code>
      <code>$entityConfig['entity_identifier_name']</code>
      <code>$entityConfig['hydrator']</code>
      <code>$entityConfig['hydrator']</code>
      <code>$entityConfig['route_identifier_name']</code>
      <code>$entityConfig['route_identifier_name']</code>
      <code>$entityConfig['route_identifier_name']</code>
      <code>$entityConfig['route_identifier_name']</code>
      <code>$entityConfig['route_name']</code>
      <code>$entityConfig['route_name']</code>
      <code>$entityConfig['route_name']</code>
      <code>$entityConfig['route_name']</code>
      <code>$routeConfig['options']</code>
      <code>$routeConfig['options']</code>
      <code>$routes[$routeName]</code>
      <code>$test[$key]</code>
      <code>$test[$key]</code>
      <code>$test['collection_http_methods']</code>
      <code>$test['entity_http_methods']</code>
      <code>$values[$key]</code>
      <code>$values[$key]</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="6">
      <code>$payload['collection_name']</code>
      <code>$payload['route_identifier_name']</code>
      <code>$payload['route_match']</code>
      <code>$payload['route_match']</code>
      <code>$payload['service_name']</code>
      <code>$payload['service_name']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="17">
      <code>$config[$collectionName]</code>
      <code>$config[$collectionName]</code>
      <code>$config[$collectionName]</code>
      <code>$config[$collectionName]</code>
      <code>$config[$entityName]</code>
      <code>$config[$entityName]</code>
      <code>$config[$entityName]</code>
      <code>$config['accept_whitelist'][$original-&gt;controllerServiceName]</code>
      <code>$config['api-tools-rest'][$original-&gt;controllerServiceName]</code>
      <code>$config['api-tools-rest'][$original-&gt;controllerServiceName]</code>
      <code>$config['api-tools-rest'][$original-&gt;controllerServiceName]</code>
      <code>$config['content_type_whitelist'][$original-&gt;controllerServiceName]</code>
      <code>$config['controllers'][$original-&gt;controllerServiceName]</code>
      <code>$config['router']['routes'][$original-&gt;routeName]</code>
      <code>$config['service_manager']['factories'][$resourceClass]</code>
      <code>$modulePath[$pathSpec]</code>
      <code>$routes[$routeName]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="118">
      <code>$collectionClass</code>
      <code>$collectionClass</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionConfig</code>
      <code>$collectionName</code>
      <code>$collectionName</code>
      <code>$collectionName</code>
      <code>$collectionName</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config2</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$details</code>
      <code>$entityClass</code>
      <code>$entityClass</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityConfig</code>
      <code>$entityName</code>
      <code>$entityName</code>
      <code>$entityName</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$original</code>
      <code>$pathSpec</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$payload</code>
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$routeConfig</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routeName</code>
      <code>$routes</code>
      <code>$routes</code>
      <code>$second</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$serviceType</code>
      <code>$services</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$updated</code>
      <code>$values</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="77">
      <code>attach</code>
      <code>createCollectionClass</code>
      <code>createCollectionClass</code>
      <code>createContentNegotiationConfig</code>
      <code>createControllerServiceName</code>
      <code>createControllerServiceName</code>
      <code>createEntityClass</code>
      <code>createEntityClass</code>
      <code>createHalConfig</code>
      <code>createResourceClass</code>
      <code>createResourceClass</code>
      <code>createResourceClass</code>
      <code>createResourceClass</code>
      <code>createRestConfig</code>
      <code>createRoute</code>
      <code>createRoute</code>
      <code>createRoute</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>deleteService</code>
      <code>deleteService</code>
      <code>deleteService</code>
      <code>deleteService</code>
      <code>exchangeArray</code>
      <code>exchangeArray</code>
      <code>factory</code>
      <code>factory</code>
      <code>factory</code>
      <code>factory</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>fetch</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getEventManager</code>
      <code>getPathSpec</code>
      <code>updateContentNegotiationConfig</code>
      <code>updateHalConfig</code>
      <code>updateHalConfig</code>
      <code>updateHalConfig</code>
      <code>updateHalConfig</code>
      <code>updateRestConfig</code>
      <code>updateRestConfig</code>
      <code>updateRestConfig</code>
      <code>updateRoute</code>
      <code>updateService</code>
      <code>updateService</code>
    </MixedMethodCall>
    <MixedOperand occurrences="6">
      <code>$resourceClass</code>
      <code>$resourceClass</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
    </MixedOperand>
    <MixedPropertyFetch occurrences="51">
      <code>$details-&gt;acceptWhitelist</code>
      <code>$details-&gt;collectionClass</code>
      <code>$details-&gt;collectionHttpMethods</code>
      <code>$details-&gt;collectionName</code>
      <code>$details-&gt;collectionQueryWhitelist</code>
      <code>$details-&gt;contentTypeWhitelist</code>
      <code>$details-&gt;entityClass</code>
      <code>$details-&gt;entityHttpMethods</code>
      <code>$details-&gt;pageSize</code>
      <code>$details-&gt;pageSizeParam</code>
      <code>$details-&gt;routeIdentifierName</code>
      <code>$details-&gt;routeIdentifierName</code>
      <code>$details-&gt;selector</code>
      <code>$original-&gt;collectionClass</code>
      <code>$original-&gt;collectionClass</code>
      <code>$original-&gt;collectionClass</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;controllerServiceName</code>
      <code>$original-&gt;entityClass</code>
      <code>$original-&gt;entityClass</code>
      <code>$original-&gt;routeIdentifierName</code>
      <code>$original-&gt;routeName</code>
      <code>$original-&gt;routeName</code>
      <code>$result-&gt;acceptWhitelist</code>
      <code>$result-&gt;acceptWhitelist</code>
      <code>$result-&gt;collectionClass</code>
      <code>$result-&gt;contentTypeWhitelist</code>
      <code>$result-&gt;contentTypeWhitelist</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;entityClass</code>
      <code>$result-&gt;module</code>
      <code>$result-&gt;resourceClass</code>
      <code>$result-&gt;routeName</code>
      <code>$result-&gt;serviceName</code>
      <code>$service-&gt;collectionClass</code>
      <code>$service-&gt;collectionClass</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;controllerServiceName</code>
      <code>$service-&gt;entityClass</code>
      <code>$service-&gt;entityClass</code>
      <code>$service-&gt;hydratorName</code>
      <code>$service-&gt;module</code>
      <code>$service-&gt;resourceClass</code>
      <code>$service-&gt;routeMatch</code>
      <code>$service-&gt;routeName</code>
      <code>$service-&gt;serviceName</code>
    </MixedPropertyFetch>
    <PossiblyInvalidArgument occurrences="1">
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="2">
      <code>var_export($config, 1)</code>
      <code>var_export($config, 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="193">
      <code>$this-&gt;assertArrayHasKey($collectionName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($collectionName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($collectionName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($collectionName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($entityName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($entityName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($entityName, $config)</code>
      <code>$this-&gt;assertArrayHasKey($key, $values)</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;controllerServiceName, $config['accept_whitelist'])</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;controllerServiceName, $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;controllerServiceName, $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;controllerServiceName, $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;controllerServiceName, $config['content_type_whitelist'])</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;controllerServiceName, $config['controllers'])</code>
      <code>$this-&gt;assertArrayHasKey($original-&gt;routeName, $config['router']['routes'])</code>
      <code>$this-&gt;assertArrayHasKey($resourceClass, $config['service_manager']['factories'])</code>
      <code>$this-&gt;assertArrayHasKey($routeName, $routes)</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\Rest\Foo\Controller', $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\Rest\Foo\FooCollection', $config)</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\Rest\Foo\FooEntity', $config)</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\V1\Rest\Foo\Controller', $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey('accept_whitelist', $config)</code>
      <code>$this-&gt;assertArrayHasKey('accept_whitelist', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-content-negotiation', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-content-negotiation', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-rest', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-rest', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-rest', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-rest', $config)</code>
      <code>$this-&gt;assertArrayHasKey('bar-conf.rest.foo', $config['router']['routes'], 'Route DELETED')</code>
      <code>$this-&gt;assertArrayHasKey('content_type_whitelist', $config)</code>
      <code>$this-&gt;assertArrayHasKey('content_type_whitelist', $config)</code>
      <code>$this-&gt;assertArrayHasKey('controllers', $config)</code>
      <code>$this-&gt;assertArrayHasKey('controllers', $config)</code>
      <code>$this-&gt;assertArrayHasKey('entity_identifier_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('entity_identifier_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('factories', $config['service_manager'])</code>
      <code>$this-&gt;assertArrayHasKey('hydrator', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('hydrator', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('is_collection', $collectionConfig)</code>
      <code>$this-&gt;assertArrayHasKey('metadata_map', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertArrayHasKey('metadata_map', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertArrayHasKey('metadata_map', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertArrayHasKey('metadata_map', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertArrayHasKey('metadata_map', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertArrayHasKey('options', $routeConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route', $routeConfig['options'])</code>
      <code>$this-&gt;assertArrayHasKey('route_identifier_name', $collectionConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_identifier_name', $collectionConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_identifier_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_identifier_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_identifier_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_identifier_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_name', $collectionConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_name', $collectionConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('route_name', $entityConfig)</code>
      <code>$this-&gt;assertArrayHasKey('router', $config)</code>
      <code>$this-&gt;assertArrayHasKey('router', $config)</code>
      <code>$this-&gt;assertArrayHasKey('router', $config)</code>
      <code>$this-&gt;assertArrayHasKey('routes', $config['router'])</code>
      <code>$this-&gt;assertArrayHasKey('routes', $config['router'])</code>
      <code>$this-&gt;assertArrayHasKey('routes', $config['router'])</code>
      <code>$this-&gt;assertArrayHasKey('service_manager', $config)</code>
      <code>$this-&gt;assertArrayNotHasKey('BarConf\V1\Rest\Foo\Controller', $config['api-tools-content-negotiation']['accept_whitelist'], 'Content Negotiation accept whitelist entry not deleted')</code>
      <code>$this-&gt;assertArrayNotHasKey('BarConf\V1\Rest\Foo\Controller', $config['api-tools-content-negotiation']['content_type_whitelist'], 'Content Negotiation content-type whitelist entry not deleted')</code>
      <code>$this-&gt;assertArrayNotHasKey('BarConf\V1\Rest\Foo\Controller', $config['api-tools-rest'], 'REST entry not deleted')</code>
      <code>$this-&gt;assertArrayNotHasKey('BarConf\V1\Rest\Foo\FooResource', $services, 'Service entry not deleted')</code>
      <code>$this-&gt;assertArrayNotHasKey('BarConf\V2\Rest\Foo\Controller', $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayNotHasKey('BarConf\\V1\\Rest\\Foo\\Controller', $config['api-tools-content-negotiation']['controllers'], 'Content Negotiation controllers entry not deleted')</code>
      <code>$this-&gt;assertArrayNotHasKey('bar-conf.rest.foo', $config['router']['routes'], 'Route not deleted')</code>
      <code>$this-&gt;assertArrayNotHasKey('hydrator', $collectionConfig)</code>
      <code>$this-&gt;assertArrayNotHasKey('hydrator', $collectionConfig)</code>
      <code>$this-&gt;assertContains($routeName, $routes)</code>
      <code>$this-&gt;assertContains('bar-conf.rest.foo', $config['api-tools-versioning']['uri'], 'Versioning DELETED')</code>
      <code>$this-&gt;assertEquals($config, $config2)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $routes[$routeName])</code>
      <code>$this-&gt;assertEquals($options['entity_identifier_name'], $entityConfig['entity_identifier_name'])</code>
      <code>$this-&gt;assertEquals($options['entity_identifier_name'], $entityConfig['entity_identifier_name'])</code>
      <code>$this-&gt;assertEquals($options['hydrator_name'], $entityConfig['hydrator'])</code>
      <code>$this-&gt;assertEquals($options['hydrator_name'], $entityConfig['hydrator'])</code>
      <code>$this-&gt;assertEquals($options['route_identifier_name'], $collectionConfig['route_identifier_name'])</code>
      <code>$this-&gt;assertEquals($options['route_identifier_name'], $collectionConfig['route_identifier_name'])</code>
      <code>$this-&gt;assertEquals($options['route_identifier_name'], $entityConfig['route_identifier_name'])</code>
      <code>$this-&gt;assertEquals($options['route_identifier_name'], $entityConfig['route_identifier_name'])</code>
      <code>$this-&gt;assertEquals($options['route_name'], $collectionConfig['route_name'])</code>
      <code>$this-&gt;assertEquals($options['route_name'], $collectionConfig['route_name'])</code>
      <code>$this-&gt;assertEquals($options['route_name'], $entityConfig['route_name'])</code>
      <code>$this-&gt;assertEquals($options['route_name'], $entityConfig['route_name'])</code>
      <code>$this-&gt;assertEquals($options['selector'], $config['controllers'][$original-&gt;controllerServiceName])</code>
      <code>$this-&gt;assertEquals($original-&gt;routeIdentifierName, $entityConfig['route_identifier_name'])</code>
      <code>$this-&gt;assertEquals($original-&gt;routeIdentifierName, $entityConfig['route_identifier_name'])</code>
      <code>$this-&gt;assertEquals($original-&gt;routeName, $entityConfig['route_name'])</code>
      <code>$this-&gt;assertEquals($original-&gt;routeName, $entityConfig['route_name'])</code>
      <code>$this-&gt;assertEquals($resourceClass . 'Factory', $config['service_manager']['factories'][$resourceClass])</code>
      <code>$this-&gt;assertEquals($value, $test[$key])</code>
      <code>$this-&gt;assertEquals($value, $test[$key])</code>
      <code>$this-&gt;assertEquals($value, $values[$key])</code>
      <code>$this-&gt;assertEquals('/api/bar/foo', $routeConfig['options']['route'])</code>
      <code>$this-&gt;assertEquals('/api/foo[/:foo_id]', $service-&gt;routeMatch)</code>
      <code>$this-&gt;assertEquals('BarConf', $result-&gt;module)</code>
      <code>$this-&gt;assertEquals('BarConf', $service-&gt;module)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\Controller', $result-&gt;controllerServiceName)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\Controller', $service-&gt;controllerServiceName)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\Controller', $this-&gt;codeRest-&gt;createControllerServiceName('Foo'))</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooCollection', $collectionClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooCollection', $result-&gt;collectionClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooCollection', $service-&gt;collectionClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooEntity', $entityClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooEntity', $result-&gt;entityClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooEntity', $service-&gt;entityClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooResource', $resourceClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooResource', $result-&gt;resourceClass)</code>
      <code>$this-&gt;assertEquals('BarConf\V1\Rest\Foo\FooResource', $service-&gt;resourceClass)</code>
      <code>$this-&gt;assertEquals('LaminasTest\ApiTools\Admin\Model\TestAsset\Collection', $service-&gt;collectionClass)</code>
      <code>$this-&gt;assertEquals('LaminasTest\ApiTools\Admin\Model\TestAsset\Entity', $service-&gt;entityClass)</code>
      <code>$this-&gt;assertEquals('Laminas\ApiTools\Rest\AbstractResourceListener', $parent-&gt;getName())</code>
      <code>$this-&gt;assertEquals('Laminas\ApiTools\Rest\AbstractResourceListener', $parent-&gt;getName())</code>
      <code>$this-&gt;assertEquals('Laminas\Hydrator\ObjectProperty', $service-&gt;hydratorName)</code>
      <code>$this-&gt;assertEquals('Laminas\Paginator\Paginator', $parent-&gt;getName())</code>
      <code>$this-&gt;assertEquals('bar-conf.rest.foo', $result-&gt;routeName)</code>
      <code>$this-&gt;assertEquals('bar-conf.rest.foo', $service-&gt;routeName)</code>
      <code>$this-&gt;assertEquals('bar-conf.rest.foo-bar', $routeName)</code>
      <code>$this-&gt;assertEquals('foo', $result-&gt;serviceName)</code>
      <code>$this-&gt;assertEquals('foo', $service-&gt;serviceName)</code>
      <code>$this-&gt;assertEquals(0, strpos($value, $values[$key]))</code>
      <code>$this-&gt;assertEquals([], $test['collection_http_methods'])</code>
      <code>$this-&gt;assertEquals([], $test['entity_http_methods'])</code>
      <code>$this-&gt;assertFalse($r-&gt;getParentClass())</code>
      <code>$this-&gt;assertFalse(file_exists($fooPath))</code>
      <code>$this-&gt;assertFalse(file_exists($fooPath))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $service)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $service)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $updated)</code>
      <code>$this-&gt;assertInstanceOf('ReflectionClass', $r)</code>
      <code>$this-&gt;assertInstanceOf('ReflectionClass', $r)</code>
      <code>$this-&gt;assertInstanceOf('ReflectionClass', $r)</code>
      <code>$this-&gt;assertInstanceOf('ReflectionClass', $r)</code>
      <code>$this-&gt;assertInternalType('array', $config)</code>
      <code>$this-&gt;assertInternalType('array', $config)</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-content-negotiation'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-hal'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-rest'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-versioning'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-versioning'])</code>
      <code>$this-&gt;assertInternalType('array', $config['router']['routes'])</code>
      <code>$this-&gt;assertInternalType('array', $config['router']['routes'])</code>
      <code>$this-&gt;assertInternalType('array', $config['service_manager'])</code>
      <code>$this-&gt;assertNotContains('bar-conf.rest.foo', $config['api-tools-versioning']['uri'], 'Versioning not deleted')</code>
      <code>$this-&gt;assertTrue($collectionConfig['is_collection'])</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRest-&gt;deleteService($service-&gt;controllerServiceName))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRest-&gt;deleteService($service-&gt;controllerServiceName))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRest-&gt;deleteService($service-&gt;controllerServiceName))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRest-&gt;deleteService($service-&gt;controllerServiceName, true))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRest-&gt;deleteService($service-&gt;controllerServiceName, true))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRest-&gt;deleteService($serviceName))</code>
      <code>$this-&gt;assertTrue($versioningModel-&gt;createVersion('BarConf', 2))</code>
      <code>$this-&gt;assertTrue(file_exists($fooPath))</code>
      <code>$this-&gt;assertTrue(file_exists($fooPath))</code>
      <code>$this-&gt;assertTrue(file_exists($path))</code>
      <code>$this-&gt;assertTrue(file_exists($path))</code>
      <code>$this-&gt;assertTrue(file_exists($path))</code>
      <code>$this-&gt;assertTrue(file_exists($path))</code>
      <code>$this-&gt;assertTrue(file_exists($path))</code>
      <code>$this-&gt;expectExceptionCode(404)</code>
      <code>$this-&gt;expectExceptionCode(404)</code>
      <code>$this-&gt;expectExceptionMessage('find')</code>
      <code>$this-&gt;expectExceptionMessage('find')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="19">
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="53">
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;codeRest</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="2">
      <code>include $path</code>
      <code>include $path . '/config/module.config.php'</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/RestServiceResourceFactoryTest.php">
    <DeprecatedMethod occurrences="3">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="4">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionWhenMissingInputFilterModelInContainer</code>
      <code>testFactoryRaisesExceptionWhenMissingRestServicModelFactoryInContainer</code>
      <code>testFactoryReturnsConfiguredRestServiceResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="23">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertAttributeSame($documentationModel, 'documentationModel', $resource)</code>
      <code>$this-&gt;assertAttributeSame($inputFilterModel, 'inputFilterModel', $resource)</code>
      <code>$this-&gt;assertAttributeSame($restFactory, 'restFactory', $resource)</code>
      <code>$this-&gt;assertInstanceOf(RestServiceResource::class, $resource)</code>
      <code>$this-&gt;expectExceptionMessage('missing its ' . InputFilterModel::class. ' dependency')</code>
      <code>$this-&gt;expectExceptionMessage('missing its ' . RestServiceModelFactory::class. ' dependency')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/RestServiceResourceTest.php">
    <ArgumentTypeCoercion occurrences="6">
      <code>'Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\DocumentationModel'</code>
      <code>'Laminas\ApiTools\Admin\Model\InputFilterModel'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RestServiceModelFactory'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="4">
      <code>$this-&gt;docs</code>
      <code>$this-&gt;filter</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;restServiceModelFactory</code>
    </InvalidArgument>
    <MissingFile occurrences="1">
      <code>include __DIR__ . '/TestAsset/module/BarConf/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="5">
      <code>cleanUpAssets</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCreateReturnsRestServiceEntityWithControllerServiceNamePopulated</code>
      <code>testPatchOfADbConnectedServiceUpdatesDbConnectedConfiguration</code>
    </MissingReturnType>
    <MixedArgument occurrences="10">
      <code>$configResourceFactory</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$id</code>
      <code>$moduleManager</code>
      <code>$modulePathSpec</code>
      <code>$this-&gt;docs</code>
      <code>$this-&gt;filter</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="8">
      <code>$agConfig['entity_identifier_name']</code>
      <code>$agConfig['hydrator_name']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$halConfig['entity_identifier_name']</code>
      <code>$halConfig['hydrator']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="10">
      <code>$agConfig</code>
      <code>$config</code>
      <code>$configResourceFactory</code>
      <code>$controllerServiceName</code>
      <code>$entity</code>
      <code>$halConfig</code>
      <code>$id</code>
      <code>$moduleManager</code>
      <code>$modulePathSpec</code>
      <code>$writer</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>create</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$entity-&gt;controllerServiceName</code>
    </MixedPropertyFetch>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertArrayHasKey('BarConf\\V1\\Rest\\Test\\TestEntity', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('BarConf\\V1\\Rest\\Test\\TestResource', $config['api-tools']['db-connected'])</code>
      <code>$this-&gt;assertContains('ObjectProperty', $agConfig['hydrator_name'])</code>
      <code>$this-&gt;assertContains('ObjectProperty', $halConfig['hydrator'])</code>
      <code>$this-&gt;assertContains('\\Test\\', $controllerServiceName)</code>
      <code>$this-&gt;assertEquals('test_id', $agConfig['entity_identifier_name'])</code>
      <code>$this-&gt;assertEquals('test_id', $halConfig['entity_identifier_name'])</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\DbConnectedRestServiceEntity', $entity)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RestServiceEntity', $entity)</code>
      <code>$this-&gt;assertInternalType('array', $config)</code>
      <code>$this-&gt;assertNotEmpty($controllerServiceName)</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="11">
      <code>$this-&gt;configFactory</code>
      <code>$this-&gt;docs</code>
      <code>$this-&gt;filter</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;restServiceModel</code>
      <code>$this-&gt;restServiceModelFactory</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="8">
      <code>$this-&gt;configFactory</code>
      <code>$this-&gt;docs</code>
      <code>$this-&gt;filter</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modules</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/RpcServiceModelFactoryFactoryTest.php">
    <DeprecatedMethod occurrences="4">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="1">
      <code>$dependencies</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>missingDependencies</code>
      <code>setUp</code>
      <code>testFactoryRaisesExceptionIfDependenciesAreMissing</code>
      <code>testFactoryReturnsConfiguredRpcServiceModelFactory</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$dependency</code>
      <code>$presence</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="20">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertAttributeSame($configResourceFactory, 'configFactory', $rpcFactory)</code>
      <code>$this-&gt;assertAttributeSame($moduleModel, 'moduleModel', $rpcFactory)</code>
      <code>$this-&gt;assertAttributeSame($pathSpec, 'modules', $rpcFactory)</code>
      <code>$this-&gt;assertAttributeSame($sharedEvents, 'sharedEventManager', $rpcFactory)</code>
      <code>$this-&gt;assertInstanceOf(RpcServiceModelFactory::class, $rpcFactory)</code>
      <code>$this-&gt;expectExceptionMessage('missing one or more dependencies')</code>
    </ReservedWord>
    <UndefinedClass occurrences="7">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/RpcServiceModelTest.php">
    <ArgumentTypeCoercion occurrences="21">
      <code>$class</code>
      <code>$className</code>
      <code>$className</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Admin\Model\RpcServiceEntity'</code>
      <code>'Laminas\ApiTools\Rest\Exception\CreationException'</code>
      <code>'Laminas\ApiTools\Rest\Exception\CreationException'</code>
      <code>'Laminas\ApiTools\Rest\Exception\CreationException'</code>
      <code>'Laminas\ModuleManager\ModuleManager'</code>
      <code>'Laminas\Mvc\Controller\AbstractActionController'</code>
      <code>'Laminas\Mvc\Controller\AbstractActionController'</code>
      <code>'Laminas\Mvc\Controller\AbstractActionController'</code>
      <code>'stdClass'</code>
      <code>'stdClass'</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>new VersioningModel($this-&gt;resource-&gt;factory('FooConf'))</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="10">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>createVersion</code>
    </DeprecatedMethod>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;moduleManager</code>
    </InvalidArgument>
    <MissingParamType occurrences="5">
      <code>$configData</code>
      <code>$configData</code>
      <code>$data</code>
      <code>$expected</code>
      <code>$selector</code>
    </MissingParamType>
    <MissingReturnType occurrences="27">
      <code>cleanUpAssets</code>
      <code>contentNegotiationSelectors</code>
      <code>setCurrentModule</code>
      <code>setUp</code>
      <code>tearDown</code>
      <code>testCanCreateContentNegotiationSelectorConfiguration</code>
      <code>testCanCreateControllerServiceNameFromResourceNameSpace</code>
      <code>testCanCreateRouteConfiguration</code>
      <code>testCanCreateRpcConfiguration</code>
      <code>testCanGenerateAllArtifactsAtOnceViaCreateService</code>
      <code>testCanRemoveAllHttpVerbsWhenUpdating</code>
      <code>testCanUpdateContentNegotiationSelector</code>
      <code>testCanUpdateContentNegotiationWhitelists</code>
      <code>testCanUpdateHttpMethods</code>
      <code>testCanUpdateRoute</code>
      <code>testCreateControllerRpc</code>
      <code>testCreateControllerRpcPSR4</code>
      <code>testCreateServiceWithUrlAlreadyExist</code>
      <code>testDeleteServiceRecursive</code>
      <code>testDeleteServiceRecursivePSR4</code>
      <code>testDeleteServiceRemovesExpectedConfigurationElements</code>
      <code>testDeletingNewerVersionOfServiceDoesNotRemoveRouteOrVersioningConfiguration</code>
      <code>testRejectSpacesInRpcServiceName1</code>
      <code>testRejectSpacesInRpcServiceName2</code>
      <code>testRejectSpacesInRpcServiceName3</code>
      <code>testServiceExistsThrowExceptionAndLeaveConfigAsIs</code>
      <code>testUpdateServiceWithUrlAlreadyExist</code>
    </MissingReturnType>
    <MixedArgument occurrences="40">
      <code>$config['api-tools-content-negotiation']['accept_whitelist']</code>
      <code>$config['api-tools-content-negotiation']['content_type_whitelist']</code>
      <code>$config['api-tools-content-negotiation']['controllers']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['router']['routes']</code>
      <code>$config['router']['routes']</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;file</code>
      <code>$result-&gt;file</code>
      <code>$result-&gt;routeName</code>
      <code>$result-&gt;routeName</code>
      <code>$services</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;resource-&gt;factory($this-&gt;module)</code>
      <code>$this-&gt;resource-&gt;factory($this-&gt;module)</code>
      <code>$this-&gt;resource-&gt;factory('FooConf')</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="27">
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-content-negotiation']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-rpc']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['controllers']</code>
      <code>$config['controllers']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$service['controller_service_name']</code>
      <code>$service['controller_service_name']</code>
      <code>$service['route_name']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="4">
      <code>$config['api-tools-rpc'][$configData-&gt;controller_service]</code>
      <code>$config['api-tools-rpc'][$configData-&gt;controller_service]</code>
      <code>$config['router']['routes'][$service['route_name']]</code>
      <code>$modulePath[$pathSpec]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="42">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$configFile</code>
      <code>$pathSpec</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$service</code>
      <code>$service</code>
      <code>$service</code>
      <code>$serviceType</code>
      <code>$services</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="50">
      <code>createContentNegotiationConfig</code>
      <code>createController</code>
      <code>createController</code>
      <code>createRoute</code>
      <code>createRpcConfig</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>createService</code>
      <code>deleteService</code>
      <code>deleteService</code>
      <code>deleteService</code>
      <code>factory</code>
      <code>factory</code>
      <code>factory</code>
      <code>fetch</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getArrayCopy</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getModuleConfigFilePath</code>
      <code>getPathSpec</code>
      <code>toFile</code>
      <code>toFile</code>
      <code>toFile</code>
      <code>toFile</code>
      <code>updateContentNegotiationWhitelist</code>
      <code>updateContentNegotiationWhitelist</code>
      <code>updateHttpMethods</code>
      <code>updateHttpMethods</code>
      <code>updateRoute</code>
      <code>updateRoute</code>
      <code>updateSelector</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="14">
      <code>$configData-&gt;config</code>
      <code>$configData-&gt;config</code>
      <code>$configData-&gt;config_file</code>
      <code>$configData-&gt;config_file</code>
      <code>$configData-&gt;controller_service</code>
      <code>$configData-&gt;controller_service</code>
      <code>$result-&gt;class</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;controllerServiceName</code>
      <code>$result-&gt;file</code>
      <code>$result-&gt;routeName</code>
      <code>$result-&gt;routeName</code>
      <code>$result-&gt;service</code>
      <code>$this-&gt;codeRpc-&gt;createController('Baz\Bat\Foo')-&gt;class</code>
    </MixedPropertyFetch>
    <PossiblyFalseArgument occurrences="3">
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidPropertyFetch occurrences="3">
      <code>$result-&gt;class</code>
      <code>$result-&gt;file</code>
      <code>$result-&gt;service</code>
    </PossiblyInvalidPropertyFetch>
    <ReservedWord occurrences="79">
      <code>$this-&gt;assertArrayHasKey($result-&gt;controllerServiceName, $config['api-tools-rpc'])</code>
      <code>$this-&gt;assertArrayHasKey($result-&gt;routeName, $config['router']['routes'], 'Route DELETED')</code>
      <code>$this-&gt;assertArrayNotHasKey($result-&gt;controllerServiceName, $config['api-tools-rpc'])</code>
      <code>$this-&gt;assertArrayNotHasKey($result-&gt;controllerServiceName, $services)</code>
      <code>$this-&gt;assertArrayNotHasKey($result-&gt;routeName, $config['router']['routes'])</code>
      <code>$this-&gt;assertArrayNotHasKey($serviceName, $config['api-tools-rpc'])</code>
      <code>$this-&gt;assertContains($result-&gt;routeName, $config['api-tools-versioning']['uri'], 'Versioning DELETED')</code>
      <code>$this-&gt;assertEquals($className, $result-&gt;class)</code>
      <code>$this-&gt;assertEquals($className, $result-&gt;class)</code>
      <code>$this-&gt;assertEquals($controllerService, $result-&gt;service)</code>
      <code>$this-&gt;assertEquals($controllerService, $result-&gt;service)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $config)</code>
      <code>$this-&gt;assertEquals($expected, $result)</code>
      <code>$this-&gt;assertEquals($expected, $result)</code>
      <code>$this-&gt;assertEquals($methods, $config['api-tools-rpc'][$configData-&gt;controller_service]['http_methods'])</code>
      <code>$this-&gt;assertEquals($methods, $config['api-tools-rpc'][$configData-&gt;controller_service]['http_methods'])</code>
      <code>$this-&gt;assertEquals('foo-conf.rpc.hello-world', $result)</code>
      <code>$this-&gt;assertEquals(realpath($fileName), realpath($result-&gt;file))</code>
      <code>$this-&gt;assertEquals(realpath($fileName), realpath($result-&gt;file))</code>
      <code>$this-&gt;assertFalse(file_exists($servicePath))</code>
      <code>$this-&gt;assertFalse(file_exists($servicePath))</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('Laminas\ApiTools\Admin\Model\RpcServiceEntity', $result)</code>
      <code>$this-&gt;assertInstanceOf('stdClass', $result)</code>
      <code>$this-&gt;assertInstanceOf('stdClass', $result)</code>
      <code>$this-&gt;assertInternalType('array', $config)</code>
      <code>$this-&gt;assertInternalType('array', $config)</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-content-negotiation'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-rpc'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-versioning'])</code>
      <code>$this-&gt;assertInternalType('array', $config['api-tools-versioning'])</code>
      <code>$this-&gt;assertInternalType('array', $config['controllers'])</code>
      <code>$this-&gt;assertInternalType('array', $config['router']['routes'])</code>
      <code>$this-&gt;assertInternalType('array', $config['router']['routes'])</code>
      <code>$this-&gt;assertNotContains($result-&gt;routeName, $config['api-tools-versioning']['uri'])</code>
      <code>$this-&gt;assertObjectHasAttribute('class', $result)</code>
      <code>$this-&gt;assertObjectHasAttribute('class', $result)</code>
      <code>$this-&gt;assertObjectHasAttribute('file', $result)</code>
      <code>$this-&gt;assertObjectHasAttribute('file', $result)</code>
      <code>$this-&gt;assertObjectHasAttribute('service', $result)</code>
      <code>$this-&gt;assertObjectHasAttribute('service', $result)</code>
      <code>$this-&gt;assertTrue($controllerClass-&gt;isSubclassOf('Laminas\Mvc\Controller\AbstractActionController'))</code>
      <code>$this-&gt;assertTrue($controllerClass-&gt;isSubclassOf('Laminas\Mvc\Controller\AbstractActionController'))</code>
      <code>$this-&gt;assertTrue($controllerClass-&gt;isSubclassOf('Laminas\Mvc\Controller\AbstractActionController'))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRpc-&gt;deleteService($service))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRpc-&gt;updateHttpMethods($configData-&gt;controller_service, $methods))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRpc-&gt;updateHttpMethods($configData-&gt;controller_service, $methods))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRpc-&gt;updateRoute($service['controller_service_name'], '/api/hello/world'))</code>
      <code>$this-&gt;assertTrue($this-&gt;codeRpc-&gt;updateSelector('FooConf\Rpc\HelloWorld\Controller', 'MyCustomSelector'))</code>
      <code>$this-&gt;assertTrue($versioningModel-&gt;createVersion('FooConf', 2))</code>
      <code>$this-&gt;assertTrue(file_exists($classFactoryFile))</code>
      <code>$this-&gt;assertTrue(file_exists($classFile))</code>
      <code>$this-&gt;assertTrue(file_exists($servicePath))</code>
      <code>$this-&gt;markTestSkipped('Invalid use case')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="15">
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleEntity</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="49">
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;codeRpc</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;module</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;moduleManager</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;modulePathSpec</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;resource</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
      <code>$this-&gt;writer</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="15">
      <code>include $configData-&gt;config_file</code>
      <code>include $configData-&gt;config_file</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $configFile</code>
      <code>include $path . '/config/module.config.php'</code>
      <code>require_once $fileName</code>
      <code>require_once $fileName</code>
    </UnresolvableInclude>
  </file>
  <file src="test/Model/RpcServiceResourceFactoryTest.php">
    <DeprecatedMethod occurrences="4">
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="5">
      <code>setUp</code>
      <code>testFactoryRaisesExceptionWhenMissingControllerManagerInContainer</code>
      <code>testFactoryRaisesExceptionWhenMissingInputFilterModelInContainer</code>
      <code>testFactoryRaisesExceptionWhenMissingRpcServiceModelFactoryInContainer</code>
      <code>testFactoryReturnsConfiguredRpcServiceResource</code>
    </MissingReturnType>
    <MixedArgument occurrences="4">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="34">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="8">
      <code>$this-&gt;assertAttributeSame($controllerManager, 'controllerManager', $resource)</code>
      <code>$this-&gt;assertAttributeSame($documentationModel, 'documentationModel', $resource)</code>
      <code>$this-&gt;assertAttributeSame($inputFilterModel, 'inputFilterModel', $resource)</code>
      <code>$this-&gt;assertAttributeSame($rpcFactory, 'rpcFactory', $resource)</code>
      <code>$this-&gt;assertInstanceOf(RpcServiceResource::class, $resource)</code>
      <code>$this-&gt;expectExceptionMessage('missing its ' . InputFilterModel::class. ' dependency')</code>
      <code>$this-&gt;expectExceptionMessage('missing its ' . RpcServiceModelFactory::class. ' dependency')</code>
      <code>$this-&gt;expectExceptionMessage('missing its ControllerManager dependency')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/TestAsset/module/AuthConf/Module.php">
    <MissingFile occurrences="1">
      <code>include __DIR__ . '/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="2">
      <code>getAutoloaderConfig</code>
      <code>getConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/TestAsset/module/AuthConfDefaults/Module.php">
    <MissingFile occurrences="1">
      <code>include __DIR__ . '/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="2">
      <code>getAutoloaderConfig</code>
      <code>getConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/TestAsset/module/AuthConfWithConfig/Module.php">
    <MissingFile occurrences="1">
      <code>include __DIR__ . '/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="2">
      <code>getAutoloaderConfig</code>
      <code>getConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/TestAsset/module/BarConf/src/BarConf/Module.php">
    <MissingFile occurrences="1">
      <code>include __DIR__ . '/../../config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="2">
      <code>getAutoloaderConfig</code>
      <code>getConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/TestAsset/module/BazConf/Module.php">
    <MissingReturnType occurrences="2">
      <code>getAutoloaderConfig</code>
      <code>getConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/TestAsset/module/FooConf/src/FooConf/Module.php">
    <MissingFile occurrences="1">
      <code>include __DIR__ . '/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="2">
      <code>getAutoloaderConfig</code>
      <code>getConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Model/ValidatorMetadataModelTest.php">
    <DeprecatedMethod occurrences="5">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="3">
      <code>$plugin</code>
      <code>$plugin</code>
      <code>$plugin</code>
    </MissingParamType>
    <MissingPropertyType occurrences="2">
      <code>$config</code>
      <code>$this-&gt;config</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="8">
      <code>allPlugins</code>
      <code>assertDefaultOptions</code>
      <code>getConfig</code>
      <code>setUp</code>
      <code>testAllPluginsContainDefaultOptions</code>
      <code>testCanFetchAllMetadataAtOnce</code>
      <code>testEachPluginInAllMetadataContainsDefaultOptions</code>
      <code>testFetchingAllMetadataOmitsMagicAllKey</code>
    </MissingReturnType>
    <MixedArgument occurrences="10">
      <code>$allConfig</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$plugin</code>
      <code>$plugin</code>
      <code>$this-&gt;config</code>
      <code>$this-&gt;config['__all__']</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="3">
      <code>$allConfig['validator_metadata']</code>
      <code>$metadata[$plugin]</code>
      <code>$this-&gt;config['__all__']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="2">
      <code>$metadata[$plugin]</code>
      <code>$return[$plugin]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="8">
      <code>$allConfig</code>
      <code>$data</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$plugin</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>fetch</code>
      <code>fetchAll</code>
      <code>fetchAll</code>
      <code>fetchAll</code>
    </MixedMethodCall>
    <ReservedWord occurrences="11">
      <code>$this-&gt;assertArrayHasKey($key, $metadata)</code>
      <code>$this-&gt;assertArrayHasKey($plugin, $metadata)</code>
      <code>$this-&gt;assertArrayHasKey($plugin, $metadata)</code>
      <code>$this-&gt;assertArrayNotHasKey('__all__', $metadata)</code>
      <code>$this-&gt;assertInternalType('array', $metadata)</code>
      <code>$this-&gt;assertInternalType('array', $metadata)</code>
      <code>$this-&gt;assertInternalType('array', $metadata)</code>
      <code>$this-&gt;assertInternalType('array', $metadata)</code>
      <code>$this-&gt;assertInternalType('array', $metadata)</code>
      <code>$this-&gt;markTestSkipped('Cannot find module config file!')</code>
      <code>$this-&gt;markTestSkipped('Module config file does not contain validator_metadata!')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="4">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/ValidatorsModelTest.php">
    <DeprecatedMethod occurrences="2">
      <code>assertInternalType</code>
      <code>assertInternalType</code>
    </DeprecatedMethod>
    <MissingPropertyType occurrences="2">
      <code>$config</code>
      <code>$this-&gt;config</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="4">
      <code>getConfig</code>
      <code>setUp</code>
      <code>testEachPluginIsAKeyArrayPair</code>
      <code>testFetchAllReturnsListOfAvailablePlugins</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$allConfig</code>
      <code>$this-&gt;config</code>
      <code>$validators</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$allConfig['validator_metadata']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="7">
      <code>$allConfig</code>
      <code>$metadata</code>
      <code>$metadata</code>
      <code>$service</code>
      <code>$service</code>
      <code>$validators</code>
      <code>$validators</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>fetchAll</code>
      <code>fetchAll</code>
      <code>fetchAll</code>
    </MixedMethodCall>
    <ReservedWord occurrences="6">
      <code>$this-&gt;assertContains('\\Validator\\', $service)</code>
      <code>$this-&gt;assertGreaterThan(0, count($validators))</code>
      <code>$this-&gt;assertInternalType('array', $metadata)</code>
      <code>$this-&gt;assertInternalType('string', $service)</code>
      <code>$this-&gt;markTestSkipped('Cannot find module config file!')</code>
      <code>$this-&gt;markTestSkipped('Module config file does not contain validator_metadata!')</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;metadata</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;plugins</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="2">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/VersioningModelFactoryFactoryTest.php">
    <DeprecatedClass occurrences="3">
      <code>VersioningModelFactory::class</code>
      <code>new VersioningModelFactoryFactory()</code>
      <code>new VersioningModelFactoryFactory()</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="4">
      <code>$factory</code>
      <code>$factory</code>
      <code>assertAttributeSame</code>
      <code>assertAttributeSame</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="1">
      <code>$dependencies</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>missingDependencies</code>
      <code>setUp</code>
      <code>testFactoryRaisesExceptionWhenMissingDependencies</code>
      <code>testFactoryReturnsConfiguredModuleVersioningModelFactory</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;container-&gt;reveal()</code>
      <code>$this-&gt;container-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$dependency</code>
      <code>$presence</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="12">
      <code>get</code>
      <code>get</code>
      <code>has</code>
      <code>has</code>
      <code>has</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
    <ReservedWord occurrences="4">
      <code>$this-&gt;assertAttributeSame($configResourceFactory, 'configFactory', $versioningFactory)</code>
      <code>$this-&gt;assertAttributeSame($pathSpec, 'moduleUtils', $versioningFactory)</code>
      <code>$this-&gt;assertInstanceOf(VersioningModelFactory::class, $versioningFactory)</code>
      <code>$this-&gt;expectExceptionMessage('missing one or more dependencies')</code>
    </ReservedWord>
    <UndefinedClass occurrences="5">
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
      <code>ConfigResourceFactory</code>
    </UndefinedClass>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="3">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/Model/VersioningModelTest.php">
    <DeprecatedClass occurrences="1">
      <code>new VersioningModel($resource, $docResource)</code>
    </DeprecatedClass>
    <InvalidScalarArgument occurrences="1">
      <code>1</code>
    </InvalidScalarArgument>
    <MissingFile occurrences="4">
      <code>include __DIR__ . '/TestAsset/module/Version/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/Version/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/Version/config/module.config.php'</code>
      <code>include __DIR__ . '/TestAsset/module/Version/config/module.config.php'</code>
    </MissingFile>
    <MissingReturnType occurrences="11">
      <code>removeModuleConfig</code>
      <code>setUp</code>
      <code>setUpModuleConfig</code>
      <code>tearDown</code>
      <code>testCreateNewVersionClonesAuthorizationConfigurationForNewVersion</code>
      <code>testCreateNewVersionClonesDocumentationForNewVersion</code>
      <code>testCreateNewVersionClonesValidationConfigurationForNewVersion</code>
      <code>testCreateVersion</code>
      <code>testCreateVersionRenamesNamespacesInCopiedClasses</code>
      <code>testGetModuleVersions</code>
      <code>testSettingTheApiDefaultVersion</code>
    </MissingReturnType>
    <MixedArgument occurrences="48">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools']['db-connected']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-hal']['metadata_map']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$docs</code>
      <code>$docsConfig</code>
      <code>$docsConfig</code>
      <code>$file</code>
      <code>$file</code>
      <code>$file</code>
      <code>$newDocsConfig</code>
      <code>$newDocsConfig</code>
      <code>$originalAuthorization</code>
      <code>$originalConfig</code>
      <code>$originalConfig</code>
      <code>$originalConfig</code>
      <code>$originalConfig['api-tools-content-validation']</code>
      <code>$originalConfig['api-tools-content-validation']['Version\V1\Rest\Message\Controller']</code>
      <code>$originalConfig['api-tools-mvc-auth']</code>
      <code>$originalConfig['api-tools-mvc-auth']['authorization']</code>
      <code>$originalConfig['input_filter_specs']</code>
      <code>$updatedAuthorization</code>
      <code>$updatedAuthorization</code>
      <code>$updatedConfig</code>
      <code>$updatedConfig</code>
      <code>$updatedConfig</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']['Version\V1\Rest\Message\Controller']</code>
      <code>$updatedConfig['api-tools-content-validation']['Version\V2\Rest\Message\Controller']</code>
      <code>$updatedConfig['api-tools-mvc-auth']</code>
      <code>$updatedConfig['input_filter_specs']</code>
      <code>$updatedConfig['input_filter_specs']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$serviceName</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="64">
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-hal']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-rest']</code>
      <code>$config['api-tools-versioning']</code>
      <code>$config['controllers']</code>
      <code>$config['controllers']</code>
      <code>$config['router']</code>
      <code>$config['router']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$config['service_manager']</code>
      <code>$newConfig['api-tools-versioning']</code>
      <code>$newDocsConfig['Version\V1\Rest\Comment\Controller']</code>
      <code>$newDocsConfig['Version\V1\Rest\Message\Controller']</code>
      <code>$newDocsConfig['Version\V2\Rest\Comment\Controller']</code>
      <code>$newDocsConfig['Version\V2\Rest\Message\Controller']</code>
      <code>$originalAuthorization[$serviceName]</code>
      <code>$originalAuthorization[$serviceName]</code>
      <code>$originalConfig['api-tools-content-validation']</code>
      <code>$originalConfig['api-tools-content-validation']</code>
      <code>$originalConfig['api-tools-mvc-auth']</code>
      <code>$originalConfig['api-tools-mvc-auth']</code>
      <code>$originalConfig['api-tools-mvc-auth']</code>
      <code>$originalConfig['input_filter_specs']</code>
      <code>$updatedAuthorization[$newServiceName]</code>
      <code>$updatedAuthorization[$serviceName]</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-content-validation']</code>
      <code>$updatedConfig['api-tools-mvc-auth']</code>
      <code>$updatedConfig['api-tools-mvc-auth']</code>
      <code>$updatedConfig['input_filter_specs']</code>
      <code>$updatedConfig['input_filter_specs']</code>
      <code>$updatedConfig['input_filter_specs']</code>
      <code>$updatedConfig['input_filter_specs']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="19">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$docs</code>
      <code>$file</code>
      <code>$file</code>
      <code>$newConfig</code>
      <code>$newDocsConfig</code>
      <code>$originalAuthorization</code>
      <code>$originalConfig</code>
      <code>$originalConfig</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$updatedAuthorization</code>
      <code>$updatedConfig</code>
      <code>$updatedConfig</code>
      <code>$versions</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="7">
      <code>createVersion</code>
      <code>createVersion</code>
      <code>createVersion</code>
      <code>createVersion</code>
      <code>createVersion</code>
      <code>getModuleVersions</code>
      <code>setDefaultVersion</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$file</code>
    </MixedOperand>
    <PossiblyNullArgument occurrences="1">
      <code>var_export($config, 1)</code>
    </PossiblyNullArgument>
    <ReservedWord occurrences="91">
      <code>$this-&gt;assertArrayHasKey($newServiceName, $updatedAuthorization)</code>
      <code>$this-&gt;assertArrayHasKey($serviceName, $updatedAuthorization)</code>
      <code>$this-&gt;assertArrayHasKey('Version\V1\Rest\Comment\Controller', $docsConfig)</code>
      <code>$this-&gt;assertArrayHasKey('Version\V1\Rest\Message\Controller', $docsConfig)</code>
      <code>$this-&gt;assertArrayHasKey('Version\V1\Rest\Message\Controller', $originalConfig['api-tools-content-validation'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\V1\Rest\Message\Controller', $updatedConfig['api-tools-content-validation'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\V1\Rest\Message\Validator', $originalConfig['input_filter_specs'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\V1\Rest\Message\Validator', $updatedConfig['input_filter_specs'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\V2\Rest\Comment\Controller', $newDocsConfig)</code>
      <code>$this-&gt;assertArrayHasKey('Version\V2\Rest\Message\Controller', $newDocsConfig)</code>
      <code>$this-&gt;assertArrayHasKey('Version\V2\Rest\Message\Controller', $updatedConfig['api-tools-content-validation'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\V2\Rest\Message\Validator', $updatedConfig['input_filter_specs'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V1\\Rest\\Comment\\CommentCollection', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V1\\Rest\\Comment\\CommentEntity', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V1\\Rest\\Message\\Controller', $config['api-tools-rest'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V1\\Rest\\Message\\MessageCollection', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V1\\Rest\\Message\\MessageEntity', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V2\\Rest\\Comment\\CommentCollection', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V2\\Rest\\Comment\\CommentEntity', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V2\\Rest\\Message\\Controller', $config['api-tools-rest'], var_export($config, 1))</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V2\\Rest\\Message\\MessageCollection', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('Version\\V2\\Rest\\Message\\MessageEntity', $config['api-tools-hal']['metadata_map'])</code>
      <code>$this-&gt;assertArrayHasKey('api-tools', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-content-validation', $originalConfig)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-content-validation', $updatedConfig)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-hal', $config)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-mvc-auth', $originalConfig)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-mvc-auth', $updatedConfig)</code>
      <code>$this-&gt;assertArrayHasKey('api-tools-rest', $config)</code>
      <code>$this-&gt;assertArrayHasKey('authorization', $originalConfig['api-tools-mvc-auth'])</code>
      <code>$this-&gt;assertArrayHasKey('authorization', $updatedConfig['api-tools-mvc-auth'])</code>
      <code>$this-&gt;assertArrayHasKey('controllers', $config)</code>
      <code>$this-&gt;assertArrayHasKey('input_filter_specs', $originalConfig)</code>
      <code>$this-&gt;assertArrayHasKey('input_filter_specs', $updatedConfig)</code>
      <code>$this-&gt;assertArrayHasKey('router', $config)</code>
      <code>$this-&gt;assertArrayHasKey('service_manager', $config)</code>
      <code>$this-&gt;assertEquals($originalAuthorization[$serviceName], $updatedAuthorization[$newServiceName])</code>
      <code>$this-&gt;assertEquals($originalAuthorization[$serviceName], $updatedAuthorization[$serviceName])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\Comment\Controller', $config['router']['routes']['version.rest.comment']['options']['defaults']['controller'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\Message\Controller', $config['router']['routes']['version.rest.message']['options']['defaults']['controller'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\\Comment\\CommentCollection', $config['api-tools-rest']['Version\\V1\\Rest\\Comment\\Controller']['collection_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\\Comment\\CommentEntity', $config['api-tools-rest']['Version\\V1\\Rest\\Comment\\Controller']['entity_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\\Comment\\CommentResource', $config['api-tools-rest']['Version\\V1\\Rest\\Comment\\Controller']['listener'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\\Message\\MessageCollection', $config['api-tools-rest']['Version\\V1\\Rest\\Message\\Controller']['collection_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\\Message\\MessageEntity', $config['api-tools-rest']['Version\\V1\\Rest\\Message\\Controller']['entity_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V1\\Rest\\Message\\MessageResource', $config['api-tools-rest']['Version\\V1\\Rest\\Message\\Controller']['listener'])</code>
      <code>$this-&gt;assertEquals('Version\\V2\\Rest\\Comment\\CommentCollection', $config['api-tools-rest']['Version\\V2\\Rest\\Comment\\Controller']['collection_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V2\\Rest\\Comment\\CommentEntity', $config['api-tools-rest']['Version\\V2\\Rest\\Comment\\Controller']['entity_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V2\\Rest\\Comment\\CommentResource', $config['api-tools-rest']['Version\\V2\\Rest\\Comment\\Controller']['listener'])</code>
      <code>$this-&gt;assertEquals('Version\\V2\\Rest\\Message\\MessageCollection', $config['api-tools-rest']['Version\\V2\\Rest\\Message\\Controller']['collection_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V2\\Rest\\Message\\MessageEntity', $config['api-tools-rest']['Version\\V2\\Rest\\Message\\Controller']['entity_class'])</code>
      <code>$this-&gt;assertEquals('Version\\V2\\Rest\\Message\\MessageResource', $config['api-tools-rest']['Version\\V2\\Rest\\Message\\Controller']['listener'])</code>
      <code>$this-&gt;assertEquals(4, count($originalConfig['api-tools-mvc-auth']['authorization']))</code>
      <code>$this-&gt;assertEquals([1], $versions)</code>
      <code>$this-&gt;assertNotRegExp($pattern1, $controller)</code>
      <code>$this-&gt;assertNotRegExp($pattern1, $entity)</code>
      <code>$this-&gt;assertRegExp($pattern2, $controller)</code>
      <code>$this-&gt;assertRegExp($pattern2, $entity)</code>
      <code>$this-&gt;assertTrue($result)</code>
      <code>$this-&gt;assertTrue($this-&gt;model-&gt;setDefaultVersion(1337))</code>
      <code>$this-&gt;assertTrue(file_exists(__DIR__ . "/TestAsset/module/Version/src/Version/V2"))</code>
      <code>$this-&gt;assertTrue(file_exists(__DIR__ . "/TestAsset/module/Version/src/Version/V2/Rest"))</code>
      <code>$this-&gt;assertTrue(file_exists(__DIR__ . "/TestAsset/module/Version/src/Version/V2/Rest/Foo/FooEntity.php"))</code>
      <code>$this-&gt;assertTrue(file_exists(__DIR__ . "/TestAsset/module/Version/src/Version/V2/Rpc"))</code>
      <code>$this-&gt;assertTrue(file_exists(__DIR__ . "/TestAsset/module/Version/src/Version/V2/Rpc/Bar/BarController.php"))</code>
      <code>$this-&gt;assertTrue(isset($docsConfig['Version\V1\Rest\Comment\Controller']['collection']['GET']['response']))</code>
      <code>$this-&gt;assertTrue(isset($docsConfig['Version\V1\Rest\Comment\Controller']['entity']['GET']['response']))</code>
      <code>$this-&gt;assertTrue(isset($docsConfig['Version\V1\Rest\Message\Controller']['collection']['GET']['response']))</code>
      <code>$this-&gt;assertTrue(isset($docsConfig['Version\V1\Rest\Message\Controller']['entity']['GET']['response']))</code>
    </ReservedWord>
    <UndefinedThisPropertyAssignment occurrences="3">
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleConfigFile</code>
      <code>$this-&gt;moduleDocsConfigFile</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="14">
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;model</code>
      <code>$this-&gt;moduleConfigFile</code>
      <code>$this-&gt;moduleConfigFile</code>
      <code>$this-&gt;moduleConfigFile</code>
      <code>$this-&gt;moduleConfigFile</code>
      <code>$this-&gt;moduleDocsConfigFile</code>
      <code>$this-&gt;moduleDocsConfigFile</code>
      <code>$this-&gt;moduleDocsConfigFile</code>
    </UndefinedThisPropertyFetch>
    <UnresolvableInclude occurrences="7">
      <code>include $this-&gt;moduleConfigFile</code>
      <code>include $this-&gt;moduleConfigFile</code>
      <code>include $this-&gt;moduleConfigFile</code>
      <code>include $this-&gt;moduleConfigFile</code>
      <code>include $this-&gt;moduleDocsConfigFile</code>
      <code>include $this-&gt;moduleDocsConfigFile</code>
      <code>include $this-&gt;moduleDocsConfigFile</code>
    </UnresolvableInclude>
  </file>
  <file src="test/RouteAssetsTrait.php">
    <InvalidDocblock occurrences="1">
      <code>public function isRouteMatch($routeMatch)</code>
    </InvalidDocblock>
    <MissingParamType occurrences="1">
      <code>$routeMatch</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>createRouter</code>
      <code>getRouteMatchClass</code>
      <code>isRouteMatch</code>
    </MissingReturnType>
    <MixedArrayAssignment occurrences="2">
      <code>$config['routes']['api-tools']</code>
      <code>$config['routes']['api-tools']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$class</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>new $class($params)</code>
    </MixedMethodCall>
    <MoreSpecificReturnType occurrences="1">
      <code>RouteMatch|V2RouteMatch</code>
    </MoreSpecificReturnType>
    <UndefinedClass occurrences="2">
      <code>$class</code>
      <code>V2RouteMatch</code>
    </UndefinedClass>
    <UndefinedDocblockClass occurrences="1">
      <code>RouteMatch|V2RouteMatch</code>
    </UndefinedDocblockClass>
  </file>
  <file src="test/TestAsset/Application.php">
    <MissingParamType occurrences="1">
      <code>$services</code>
    </MissingParamType>
    <MissingPropertyType occurrences="1">
      <code>$services</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="2">
      <code>getServiceManager</code>
      <code>setServiceManager</code>
    </MissingReturnType>
  </file>
  <file src="test/TestAsset/Closure.php">
    <MissingReturnType occurrences="1">
      <code>call</code>
    </MissingReturnType>
  </file>
</files>
